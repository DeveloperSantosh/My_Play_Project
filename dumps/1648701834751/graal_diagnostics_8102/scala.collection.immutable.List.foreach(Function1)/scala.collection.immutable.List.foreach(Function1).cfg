begin_compilation
  name " HotSpotCompilation-21250[scala.collection.immutable.List.foreach(Function1)]"
  method "HotSpotCompilation-21250[scala.collection.immutable.List.foreach(Function1)]"
  date 1648701835440
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Lscala/collection/immutable/List;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?268 ?175 v676 v672 ?507 v667 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v676 
=== Succesors ===
next: v184 
=== Usages ===
v607 v627 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v676 #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v648 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v648  <|@  <|@
f <@~|@floating>@ <|@
tid j524 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] â‡ˆ0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v527 v563 v539 v549 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Lscala/Function1;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?8 ?514 ?24 v668 v323 v669 ?154 v670 ?175 ?268 ?507 v677 v364 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<List.foreach(Function1)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: List.scala
sourceLine: 376
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v527 v649 v685 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
hubs: [Ljdk.vm.ci.meta.Constant;@6955af90
keyProbabilities: [D@501a6f11
keySuccessors: [I@8ab79c2
keys: [Ljdk.vm.ci.meta.ResolvedJavaType;@ae5b184
stamp: void
=== Inputs ===
value: v607 
=== Succesors ===
successors: v174 v180 v182 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@TypeSwitch|@org.graalvm.compiler.nodes.java.TypeSwitchNode>@ value: v607 #successors: v174 v180 v182  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:377) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:377) [bci: 31]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
rawvalue: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 34359738368 shift: 3)
stampKind: Klass*(compressed base: 34359738368 shift: 3)
value: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v627 v630 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v648 
y: v626 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v648 y: v626  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v627 
=== Succesors ===
trueSuccessor: v395 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v627 #trueSuccessor: v395 #falseSuccessor: v397  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v649 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v649  <|@  <|@
f <@~|@floating>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v649 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v677 
=== Succesors ===
next: a650 
=== Usages ===
v610 
=== Predecessor ===
v395 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v677 #next: a650  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a650 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: $colon$colon.head
nodeSourcePosition: at scala.collection.immutable.$colon$colon.head(List.scala:436) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v667 
=== Succesors ===
next: v201 
=== Usages ===
a287 v686 
=== Predecessor ===
v649 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v667 #next: v201  <|@  <|@
f <@~|@floating>@ <|@
tid a287 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.immutable.$colon$colon.head(List.scala:436) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a650 
=== Succesors ===
=== Usages ===
v323 v303 ?208 v317 ?243 ?244 ?245 v322 v319 ?250 v320 v321 ?508 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a650  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v649 
=== Succesors ===
=== Usages ===
v79 v201 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v649  <|@  <|@
f <@~|@floating>@ <|@
tid a91 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 22]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rawvalue: BoxedUnit@732865233
stableDimension: 0
stamp: a!# Lscala/runtime/BoxedUnit;
stampKind: a -
value: Object[BoxedUnit@732865233]
=== Inputs ===
=== Succesors ===
=== Usages ===
a64 a190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:145) [bci: 50]
at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rawvalue: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 34359738368 shift: 3)
stampKind: Klass*(compressed base: 34359738368 shift: 3)
value: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 v631 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a653 a662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i652 i661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a651 a660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
hubs: [Ljdk.vm.ci.meta.Constant;@4e08a667
keyProbabilities: [D@4de92a50
keySuccessors: [I@1edf3f46
keys: [Ljdk.vm.ci.meta.ResolvedJavaType;@3911d488
stamp: void
=== Inputs ===
value: v610 
=== Succesors ===
successors: v191 v196 
=== Usages ===
=== Predecessor ===
a650 >@ <|@
instruction <@TypeSwitch|@org.graalvm.compiler.nodes.java.TypeSwitchNode>@ value: v610 #successors: v191 v196  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a651 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a651 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TraversableLike$$Lambda$5955/0x0000000841d61040.arg$1
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v668 
=== Succesors ===
next: v685 
=== Usages ===
a292 v685 
=== Predecessor ===
v191 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v668 #next: v685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a651 
=== Succesors ===
next: i652 
=== Usages ===
=== Predecessor ===
a651 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a651 #next: i652  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i652 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TraversableLike$$Lambda$5955/0x0000000841d61040.arg$2
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 5]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v669 
=== Succesors ===
next: a653 
=== Usages ===
i295 
=== Predecessor ===
v685 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v669 #next: a653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a653 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TraversableLike$$Lambda$5955/0x0000000841d61040.arg$3
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 9]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v670 
=== Succesors ===
next: a207 
=== Usages ===
a299 v679 
=== Predecessor ===
i652 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v670 #next: a207  <|@  <|@
f <@~|@floating>@ <|@
tid a292 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
op: Uncompress
stamp: a -
=== Inputs ===
value: a651 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a651  <|@  <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@32217653
stamp: void
targetMethod: HotSpotMethod<Function1.apply(Object)>
=== Inputs ===
arguments: a292 a287 
=== Succesors ===
=== Usages ===
a207 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a292 a287  <|@  <|@
tid ?268 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<List.foreach(Function1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: List.scala
sourceLine: 378
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a1 
=== Succesors ===
=== Usages ===
?267 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a1  <|@  <|@
tid ?267 <|@
d <@d|@=== Debug Properties ===
bci: 13
code: ResolvedJavaMethodBytecode<TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
stackSize: 0
=== Inputs ===
outerFrameState: ?268 
values: - - 
=== Succesors ===
=== Usages ===
?208 ?242 ?254 ?258 ?262 ?266 ?508 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?268 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x0000000840250440@3a327a57
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$131/0x0000000840257840@4c4b9236
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 5]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i652 
=== Succesors ===
=== Usages ===
?208 v209 ?508 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i652  <|@  <|@
f <@~|@floating>@ <|@
tid a299 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 9]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
op: Uncompress
stamp: a -
=== Inputs ===
value: a653 
=== Succesors ===
=== Usages ===
?208 v322 v319 v317 ?250 v320 v321 ?508 a190 ?243 ?244 ?245 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a653  <|@  <|@
tid ?508 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?267 
values: - i295 a299 a287 
=== Succesors ===
=== Usages ===
a207 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?267 values: - i295 a299 a287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a207 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: true
stamp: a Ljava/lang/Object;
targetMethod: Direct#Function1.apply
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v303 
stateDuring: ?508 
=== Succesors ===
next: v654 
=== Usages ===
?208 v671 v678 
=== Predecessor ===
a653 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v303 stateDuring: ?508 #next: v654  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 1
=== Inputs ===
outerFrameState: ?267 
values: - i295 a299 a287 a207 
=== Succesors ===
=== Usages ===
v563 v654 v656 v686 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?267 values: - i295 a299 a287 a207  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a207 
index: - 
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a207 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:144) [bci: 39]
at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullCheck: true
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: ?208 
guard: - 
address: v678 
=== Succesors ===
next: v637 
=== Usages ===
v629 
=== Predecessor ===
a207 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?208 guard: - address: v678 #next: v637  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:145) [bci: 50]
at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v654 
y: v628 
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v654 y: v628  <|@  <|@
f <@*|@fixed>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v629 
=== Succesors ===
trueSuccessor: v636 
falseSuccessor: v582 
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v629 #trueSuccessor: v636 #falseSuccessor: v582  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i655 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i655  <|@  <|@
f <@~|@floating>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a207 
index: - 
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a207 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i655 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Boolean.value
nodeSourcePosition: at java.base@11.0.14.1/java.lang.Boolean.booleanValue(Boolean.java:143) [bci: 1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.replacements.BoxingSnippets.booleanValue(BoxingSnippets.java:109) [bci: 5]
at java.lang.Boolean.booleanValue() [bci: -1]
at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 12]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v671 
=== Succesors ===
next: v212 
=== Usages ===
i379 
=== Predecessor ===
v636 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v671 #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid i379 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x0000000840250440@3a327a57
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$131/0x0000000840257840@4c4b9236
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 15]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i655 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i655  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 11]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i295 
y: i379 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i295 y: i379  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 11]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
trueSuccessorProbability: 0.7771452667088341
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v210 
falseSuccessor: v211 
=== Usages ===
=== Predecessor ===
i655 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v210 #falseSuccessor: v211  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 22]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v273  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
v210 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 14]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a653 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: ?208 
guard: - 
address: v679 
=== Succesors ===
next: v233 
=== Usages ===
v616 
=== Predecessor ===
v211 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?208 guard: - address: v679 #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v656 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v656  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
hubs: [Ljdk.vm.ci.meta.Constant;@361e61ed
keyProbabilities: [D@515c5d67
keySuccessors: [I@665e6650
keys: [Ljdk.vm.ci.meta.ResolvedJavaType;@5ff41726
stamp: void
=== Inputs ===
value: v616 
=== Succesors ===
successors: v222 v223 v224 v225 v226 v228 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@TypeSwitch|@org.graalvm.compiler.nodes.java.TypeSwitchNode>@ value: v616 #successors: v222 v223 v224 v225 v226 v228  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a240 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a240  <|@  <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a# Lscala/collection/mutable/ListBuffer;
signature: [Ljdk.vm.ci.meta.JavaType;@1aa0043c
stamp: void
targetMethod: HotSpotMethod<ListBuffer.$plus$eq(Object)>
=== Inputs ===
arguments: a299 a287 
=== Succesors ===
=== Usages ===
a240 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a299 a287  <|@  <|@
tid ?242 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?267 
values: - - - - 
=== Succesors ===
=== Usages ===
?509 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?267 values: - - - -  <|@  <|@
tid ?509 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ListBuffer.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ListBuffer.scala
sourceLine: 44
stackSize: 0
=== Inputs ===
outerFrameState: ?242 
values: - - 
=== Succesors ===
=== Usages ===
a240 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?242 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a240 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: false
stamp: a# Lscala/collection/mutable/ListBuffer;
targetMethod: Direct#ListBuffer.$plus$eq
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v317 
stateDuring: ?509 
=== Succesors ===
next: v192 
=== Usages ===
a190 
=== Predecessor ===
v222 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v317 stateDuring: ?509 #next: v192  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
a240 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?208 
object: a650 
=== Succesors ===
next: i249 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?208 object: a650 #next: i249  <|@  <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
at scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2924d56a
stamp: void
targetMethod: HotSpotMethod<FlatHashTable.addEntry(Object)>
=== Inputs ===
arguments: a299 a287 
=== Succesors ===
=== Usages ===
i249 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a299 a287  <|@  <|@
tid ?254 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?267 
values: - - - - 
=== Succesors ===
=== Usages ===
?243 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?267 values: - - - -  <|@  <|@
tid ?243 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 40
stackSize: 0
=== Inputs ===
outerFrameState: ?254 
values: a299 a287 
=== Succesors ===
=== Usages ===
?244 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?254 values: a299 a287  <|@  <|@
tid ?244 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 59
stackSize: 0
=== Inputs ===
outerFrameState: ?243 
values: a299 a287 
=== Succesors ===
=== Usages ===
?245 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?243 values: a299 a287  <|@  <|@
tid ?245 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.addElem(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 40
stackSize: 0
=== Inputs ===
outerFrameState: ?244 
values: a299 a287 
=== Succesors ===
=== Usages ===
?253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?244 values: a299 a287  <|@  <|@
tid ?253 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<FlatHashTable.addElem$(FlatHashTable, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 138
stackSize: 0
=== Inputs ===
outerFrameState: ?245 
values: - - 
=== Succesors ===
=== Usages ===
?252 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?245 values: - -  <|@  <|@
tid ?252 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<FlatHashTable.addElem(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 139
stackSize: 0
=== Inputs ===
outerFrameState: ?253 
values: - - 
=== Succesors ===
=== Usages ===
?250 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?253 values: - -  <|@  <|@
tid ?250 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.addEntry(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
at scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 40
stackSize: 0
=== Inputs ===
outerFrameState: ?252 
values: a299 a287 
=== Succesors ===
=== Usages ===
?513 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?252 values: a299 a287  <|@  <|@
tid ?513 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry$(FlatHashTable, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 147
stackSize: 0
=== Inputs ===
outerFrameState: ?250 
values: - - 
=== Succesors ===
=== Usages ===
i249 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?250 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i249 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
at scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#FlatHashTable.addEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v319 
stateDuring: ?513 
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v686 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v319 stateDuring: ?513 #next: v269  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
i249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a256 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a256  <|@  <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a# Lscala/collection/mutable/WrappedArrayBuilder;
signature: [Ljdk.vm.ci.meta.JavaType;@3cdd5af8
stamp: void
targetMethod: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)>
=== Inputs ===
arguments: a299 a287 
=== Succesors ===
=== Usages ===
a256 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a299 a287  <|@  <|@
tid ?258 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?267 
values: - - - - 
=== Succesors ===
=== Usages ===
?510 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?267 values: - - - -  <|@  <|@
tid ?510 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<WrappedArrayBuilder.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: WrappedArrayBuilder.scala
sourceLine: 26
stackSize: 0
=== Inputs ===
outerFrameState: ?258 
values: - - 
=== Succesors ===
=== Usages ===
a256 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?258 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a256 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: false
stamp: a# Lscala/collection/mutable/WrappedArrayBuilder;
targetMethod: Direct#WrappedArrayBuilder.$plus$eq
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v320 
stateDuring: ?510 
=== Succesors ===
next: v270 
=== Usages ===
a190 
=== Predecessor ===
v224 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v320 stateDuring: ?510 #next: v270  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
a256 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a260 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a260  <|@  <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a# Lscala/collection/immutable/VectorBuilder;
signature: [Ljdk.vm.ci.meta.JavaType;@436f2762
stamp: void
targetMethod: HotSpotMethod<VectorBuilder.$plus$eq(Object)>
=== Inputs ===
arguments: a299 a287 
=== Succesors ===
=== Usages ===
a260 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a299 a287  <|@  <|@
tid ?262 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?267 
values: - - - - 
=== Succesors ===
=== Usages ===
?511 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?267 values: - - - -  <|@  <|@
tid ?511 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<VectorBuilder.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Vector.scala
sourceLine: 710
stackSize: 0
=== Inputs ===
outerFrameState: ?262 
values: - - 
=== Succesors ===
=== Usages ===
a260 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?262 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a260 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: false
stamp: a# Lscala/collection/immutable/VectorBuilder;
targetMethod: Direct#VectorBuilder.$plus$eq
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v321 
stateDuring: ?511 
=== Succesors ===
next: v271 
=== Usages ===
a190 
=== Predecessor ===
v225 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v321 stateDuring: ?511 #next: v271  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
a260 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a264 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a264  <|@  <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a# Lscala/collection/mutable/SetBuilder;
signature: [Ljdk.vm.ci.meta.JavaType;@59f44ad7
stamp: void
targetMethod: HotSpotMethod<SetBuilder.$plus$eq(Object)>
=== Inputs ===
arguments: a299 a287 
=== Succesors ===
=== Usages ===
a264 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a299 a287  <|@  <|@
tid ?266 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?267 
values: - - - - 
=== Succesors ===
=== Usages ===
?512 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?267 values: - - - -  <|@  <|@
tid ?512 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<SetBuilder.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: SetBuilder.scala
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: ?266 
values: - - 
=== Succesors ===
=== Usages ===
a264 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?266 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a264 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: false
stamp: a# Lscala/collection/mutable/SetBuilder;
targetMethod: Direct#SetBuilder.$plus$eq
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v322 
stateDuring: ?512 
=== Succesors ===
next: v272 
=== Usages ===
a190 
=== Predecessor ===
v226 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v322 stateDuring: ?512 #next: v272  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
a264 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v570 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid i571 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -58163
stableDimension: 0
stamp: i32 [-58163] â‡Š00000000ffff1ccd â‡ˆ00000000ffff1ccd
stampKind: i32
value: int[-58163|0xffffffffffff1ccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
v228 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v603 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v603  <|@  <|@
f <@~|@floating>@ <|@
tid i565 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -78627
stableDimension: 0
stamp: i32 [-78627] â‡Š00000000fffeccdd â‡ˆ00000000fffeccdd
stampKind: i32
value: int[-78627|0xfffffffffffeccdd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
v582 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i561 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-81427 - -58163] â‡Š00000000fffe00c5 â‡ˆ00000000ffffdffd
valueDescription: i32
=== Inputs ===
merge: v558 
values: i571 i565 
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v558 values: i571 i565  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v570 v603 
=== Succesors ===
next: v563 
=== Usages ===
i561 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v570 v603 #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 1]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
stateBefore: ?208 
actionAndReason: i561 
speculation: j524 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?208 actionAndReason: i561 speculation: j524  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a193 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a193  <|@  <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@56744b06
stamp: void
targetMethod: HotSpotMethod<Function1.apply(Object)>
=== Inputs ===
arguments: a2 a287 
=== Succesors ===
=== Usages ===
a193 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a287  <|@  <|@
tid ?507 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<List.foreach(Function1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: List.scala
sourceLine: 378
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a1 
=== Succesors ===
=== Usages ===
a193 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a193 <|@
d <@d|@=== Debug Properties ===
bci: 14
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: true
stamp: a Ljava/lang/Object;
targetMethod: Direct#Function1.apply
useForInlining: false
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v323 
stateDuring: ?507 
=== Succesors ===
next: v197 
=== Usages ===
a190 
=== Predecessor ===
v196 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v323 stateDuring: ?507 #next: v197  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
a193 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a190 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v189 
values: a240 a193 a299 a256 a260 a264 a91 
=== Succesors ===
=== Usages ===
?175 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v189 values: a240 a193 a299 a256 a260 a264 a91  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v192 v197 v269 v270 v271 v272 v273 
=== Succesors ===
next: a657 
=== Usages ===
a190 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v192 v197 v269 v270 v271 v272 v273 #next: a657  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a657 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: $colon$colon.tl
nodeSourcePosition: at scala.collection.immutable.$colon$colon.tl(List.scala:436) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:437) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:436) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:379) [bci: 21]
nullCheck: false
stamp: n Lscala/collection/immutable/List;
=== Inputs ===
stateBefore: - 
guard: - 
address: v672 
=== Succesors ===
next: v683 
=== Usages ===
a326 v683 
=== Predecessor ===
v189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v672 #next: v683  <|@  <|@
tid ?175 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<List.foreach(Function1)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: List.scala
sourceLine: 378
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 a1 a190 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a1 a190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?175 
object: a657 
=== Succesors ===
next: v5 
=== Usages ===
=== Predecessor ===
a657 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?175 object: a657 #next: v5  <|@  <|@
f <@~|@floating>@ <|@
tid a326 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.immutable.$colon$colon.tl(List.scala:436) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:437) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:436) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:379) [bci: 21]
op: Uncompress
stamp: a Lscala/collection/immutable/List;
=== Inputs ===
value: a657 
=== Succesors ===
=== Usages ===
a280 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a657  <|@  <|@
f <@*|@fixed>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 
=== Predecessor ===
v683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a280 <|@
d <@d|@=== Debug Properties ===
stamp: a! Lscala/collection/immutable/List;
valueDescription: a -
=== Inputs ===
merge: v6 
values: a326 a367 
=== Succesors ===
=== Usages ===
?8 ?154 ?514 v675 v680 ?24 v673 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v6 values: a326 a367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 0.9282839370654958
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v5 
=== Succesors ===
next: v658 
=== Usages ===
a280 v16 v34 v455 v430 v435 v440 v445 v450 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v5 #next: v658  <|@  <|@
f <@~|@floating>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a280 
index: - 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a280 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v680 
=== Succesors ===
next: v51 
=== Usages ===
v619 v630 
=== Predecessor ===
v6 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v680 #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v658 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v658  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
hubs: [Ljdk.vm.ci.meta.Constant;@6955af90
keyProbabilities: [D@501a6f11
keySuccessors: [I@8ab79c2
keys: [Ljdk.vm.ci.meta.ResolvedJavaType;@ae5b184
stamp: void
=== Inputs ===
value: v619 
=== Succesors ===
successors: v16 v46 v49 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@TypeSwitch|@org.graalvm.compiler.nodes.java.TypeSwitchNode>@ value: v619 #successors: v16 v46 v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:377) [bci: 31]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v281  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:377) [bci: 31]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v658 
y: v626 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v658 y: v626  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v630 
=== Succesors ===
trueSuccessor: v427 
falseSuccessor: v430 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v630 #trueSuccessor: v427 #falseSuccessor: v430  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a659 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a659  <|@  <|@
f <@~|@floating>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a280 
index: - 
=== Succesors ===
=== Usages ===
a659 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a280 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a659 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: $colon$colon.head
nodeSourcePosition: at scala.collection.immutable.$colon$colon.head(List.scala:436) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v673 
=== Succesors ===
next: v79 
=== Usages ===
a331 v374 
=== Predecessor ===
v427 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v673 #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid a331 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.immutable.$colon$colon.head(List.scala:436) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a659 
=== Succesors ===
=== Usages ===
v362 v363 v364 v344 ?86 v358 ?123 ?124 ?125 v361 v360 ?130 ?515 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a659  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
hubs: [Ljdk.vm.ci.meta.Constant;@4e08a667
keyProbabilities: [D@4de92a50
keySuccessors: [I@1edf3f46
keys: [Ljdk.vm.ci.meta.ResolvedJavaType;@3911d488
stamp: void
=== Inputs ===
value: v610 
=== Succesors ===
successors: v68 v73 
=== Usages ===
=== Predecessor ===
a659 >@ <|@
instruction <@TypeSwitch|@org.graalvm.compiler.nodes.java.TypeSwitchNode>@ value: v610 #successors: v68 v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a660 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a660 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TraversableLike$$Lambda$5955/0x0000000841d61040.arg$1
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v668 
=== Succesors ===
next: v436 
=== Usages ===
a334 v341 
=== Predecessor ===
v68 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v668 #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a660 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a660  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v435 
falseSuccessor: v432 
=== Usages ===
=== Predecessor ===
a660 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v435 #falseSuccessor: v432  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v542 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v542  <|@  <|@
f <@~|@floating>@ <|@
tid i543 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -87563
stableDimension: 0
stamp: i32 [-87563] â‡Š00000000fffea9f5 â‡ˆ00000000fffea9f5
stampKind: i32
value: int[-87563|0xfffffffffffea9f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i661 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i661 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TraversableLike$$Lambda$5955/0x0000000841d61040.arg$2
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 5]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v669 
=== Succesors ===
next: a662 
=== Usages ===
i337 
=== Predecessor ===
v432 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v669 #next: a662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a662 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TraversableLike$$Lambda$5955/0x0000000841d61040.arg$3
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 9]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v670 
=== Succesors ===
next: a85 
=== Usages ===
a340 v375 v682 
=== Predecessor ===
i661 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v670 #next: a85  <|@  <|@
f <@~|@floating>@ <|@
tid a334 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
op: Uncompress
stamp: a -
=== Inputs ===
value: a660 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a660  <|@  <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@28d1aa
stamp: void
targetMethod: HotSpotMethod<Function1.apply(Object)>
=== Inputs ===
arguments: a334 a331 
=== Succesors ===
=== Usages ===
a85 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a334 a331  <|@  <|@
tid ?154 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<List.foreach(Function1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: List.scala
sourceLine: 378
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a280 
=== Succesors ===
=== Usages ===
?147 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a280  <|@  <|@
tid ?147 <|@
d <@d|@=== Debug Properties ===
bci: 13
code: ResolvedJavaMethodBytecode<TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
stackSize: 0
=== Inputs ===
outerFrameState: ?154 
values: - - 
=== Succesors ===
=== Usages ===
?86 ?122 ?134 ?138 ?142 ?146 ?515 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?154 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x0000000840250440@3a327a57
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$131/0x0000000840257840@4c4b9236
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 5]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i661 
=== Succesors ===
=== Usages ===
?86 v87 ?515 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i661  <|@  <|@
f <@~|@floating>@ <|@
tid a340 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 9]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
op: Uncompress
stamp: a -
=== Inputs ===
value: a662 
=== Succesors ===
=== Usages ===
?86 v363 ?130 v358 a64 v361 v362 ?515 ?123 ?124 ?125 v360 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a662  <|@  <|@
tid ?515 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?147 
values: - i337 a340 a331 
=== Succesors ===
=== Usages ===
a85 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?147 values: - i337 a340 a331  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a85 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: true
stamp: a Ljava/lang/Object;
targetMethod: Direct#Function1.apply
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v344 
stateDuring: ?515 
=== Succesors ===
next: v441 
=== Usages ===
?86 v92 v681 v674 
=== Predecessor ===
a662 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v344 stateDuring: ?515 #next: v441  <|@  <|@
f <@~|@floating>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 1]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a85 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a85  <|@  <|@
f <@*|@fixed>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 1]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v92 
=== Succesors ===
trueSuccessor: v440 
falseSuccessor: v437 
=== Usages ===
=== Predecessor ===
a85 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v92 #trueSuccessor: v440 #falseSuccessor: v437  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 1]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid i551 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -88339
stableDimension: 0
stamp: i32 [-88339] â‡Š00000000fffea6ed â‡ˆ00000000fffea6ed
stampKind: i32
value: int[-88339|0xfffffffffffea6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 8]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a85 
index: - 
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a85 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:144) [bci: 39]
at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v681 
=== Succesors ===
next: v645 
=== Usages ===
v631 
=== Predecessor ===
v437 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v681 #next: v645  <|@  <|@
f <@~|@floating>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:145) [bci: 50]
at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v663 
y: v628 
=== Succesors ===
=== Usages ===
v645 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v663 y: v628  <|@  <|@
f <@*|@fixed>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v631 
=== Succesors ===
trueSuccessor: v644 
falseSuccessor: v445 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v631 #trueSuccessor: v644 #falseSuccessor: v445  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i664 
=== Usages ===
=== Predecessor ===
v645 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i664  <|@  <|@
f <@~|@floating>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a85 
index: - 
=== Succesors ===
=== Usages ===
i664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a85 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i664 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Boolean.value
nodeSourcePosition: at java.base@11.0.14.1/java.lang.Boolean.booleanValue(Boolean.java:143) [bci: 1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.replacements.BoxingSnippets.booleanValue(BoxingSnippets.java:109) [bci: 5]
at java.lang.Boolean.booleanValue() [bci: -1]
at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 12]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v674 
=== Succesors ===
next: v90 
=== Usages ===
i380 
=== Predecessor ===
v644 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v674 #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid i380 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x0000000840250440@3a327a57
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$131/0x0000000840257840@4c4b9236
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 15]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i664 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i664  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 11]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i337 
y: i380 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i337 y: i380  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 11]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
trueSuccessorProbability: 0.7771452667088341
=== Inputs ===
condition: v87 
=== Succesors ===
trueSuccessor: v88 
falseSuccessor: v89 
=== Usages ===
=== Predecessor ===
i664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v87 #trueSuccessor: v88 #falseSuccessor: v89  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 22]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v88 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 14]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a662 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a662  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v375 
=== Succesors ===
trueSuccessor: v450 
falseSuccessor: v447 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v375 #trueSuccessor: v450 #falseSuccessor: v447  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v554 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid i555 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -91403
stableDimension: 0
stamp: i32 [-91403] â‡Š00000000fffe9af5 â‡ˆ00000000fffe9af5
stampKind: i32
value: int[-91403|0xfffffffffffe9af5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a662 
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v682 
=== Succesors ===
next: v113 
=== Usages ===
v625 
=== Predecessor ===
v447 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v682 #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v665 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v665  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
hubs: [Ljdk.vm.ci.meta.Constant;@361e61ed
keyProbabilities: [D@515c5d67
keySuccessors: [I@665e6650
keys: [Ljdk.vm.ci.meta.ResolvedJavaType;@5ff41726
stamp: void
=== Inputs ===
value: v625 
=== Succesors ===
successors: v102 v103 v104 v105 v106 v108 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@TypeSwitch|@org.graalvm.compiler.nodes.java.TypeSwitchNode>@ value: v625 #successors: v102 v103 v104 v105 v106 v108  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a120 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a120  <|@  <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a# Lscala/collection/mutable/ListBuffer;
signature: [Ljdk.vm.ci.meta.JavaType;@3a46b2fa
stamp: void
targetMethod: HotSpotMethod<ListBuffer.$plus$eq(Object)>
=== Inputs ===
arguments: a340 a331 
=== Succesors ===
=== Usages ===
a120 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a340 a331  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?147 
values: - - - - 
=== Succesors ===
=== Usages ===
?516 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?147 values: - - - -  <|@  <|@
tid ?516 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ListBuffer.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ListBuffer.scala
sourceLine: 44
stackSize: 0
=== Inputs ===
outerFrameState: ?122 
values: - - 
=== Succesors ===
=== Usages ===
a120 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?122 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a120 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: false
stamp: a# Lscala/collection/mutable/ListBuffer;
targetMethod: Direct#ListBuffer.$plus$eq
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v358 
stateDuring: ?516 
=== Succesors ===
next: v69 
=== Usages ===
a64 
=== Predecessor ===
v102 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v358 stateDuring: ?516 #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
a120 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable$HashUtils.elemToEntry(FlatHashTable.scala:438) [bci: 1]
at scala.collection.mutable.FlatHashTable$HashUtils.elemToEntry$(FlatHashTable.scala:437) [bci: 2]
at scala.collection.mutable.HashSet.elemToEntry(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 3]
at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a659 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a659  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable$HashUtils.elemToEntry(FlatHashTable.scala:438) [bci: 1]
at scala.collection.mutable.FlatHashTable$HashUtils.elemToEntry$(FlatHashTable.scala:437) [bci: 2]
at scala.collection.mutable.HashSet.elemToEntry(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 3]
at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v374 
=== Succesors ===
trueSuccessor: v455 
falseSuccessor: v452 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v374 #trueSuccessor: v455 #falseSuccessor: v452  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable$HashUtils.elemToEntry(FlatHashTable.scala:438) [bci: 1]
at scala.collection.mutable.FlatHashTable$HashUtils.elemToEntry$(FlatHashTable.scala:437) [bci: 2]
at scala.collection.mutable.HashSet.elemToEntry(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 3]
at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid i557 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -91923
stableDimension: 0
stamp: i32 [-91923] â‡Š00000000fffe98ed â‡ˆ00000000fffe98ed
stampKind: i32
value: int[-91923|0xfffffffffffe98ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v455 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable$HashUtils.elemToEntry(FlatHashTable.scala:438) [bci: 8]
at scala.collection.mutable.FlatHashTable$HashUtils.elemToEntry$(FlatHashTable.scala:437) [bci: 2]
at scala.collection.mutable.HashSet.elemToEntry(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 3]
at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i129 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i129  <|@  <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
at scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@411fe597
stamp: void
targetMethod: HotSpotMethod<FlatHashTable.addEntry(Object)>
=== Inputs ===
arguments: a340 a331 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a340 a331  <|@  <|@
tid ?134 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?147 
values: - - - - 
=== Succesors ===
=== Usages ===
?123 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?147 values: - - - -  <|@  <|@
tid ?123 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 40
stackSize: 0
=== Inputs ===
outerFrameState: ?134 
values: a340 a331 
=== Succesors ===
=== Usages ===
?124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: a340 a331  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 59
stackSize: 0
=== Inputs ===
outerFrameState: ?123 
values: a340 a331 
=== Succesors ===
=== Usages ===
?125 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?123 values: a340 a331  <|@  <|@
tid ?125 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.addElem(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 40
stackSize: 0
=== Inputs ===
outerFrameState: ?124 
values: a340 a331 
=== Succesors ===
=== Usages ===
?133 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?124 values: a340 a331  <|@  <|@
tid ?133 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<FlatHashTable.addElem$(FlatHashTable, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 138
stackSize: 0
=== Inputs ===
outerFrameState: ?125 
values: - - 
=== Succesors ===
=== Usages ===
?132 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?125 values: - -  <|@  <|@
tid ?132 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<FlatHashTable.addElem(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 139
stackSize: 0
=== Inputs ===
outerFrameState: ?133 
values: - - 
=== Succesors ===
=== Usages ===
?130 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?133 values: - -  <|@  <|@
tid ?130 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.addEntry(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
at scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 40
stackSize: 0
=== Inputs ===
outerFrameState: ?132 
values: a340 a331 
=== Succesors ===
=== Usages ===
?520 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?132 values: a340 a331  <|@  <|@
tid ?520 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry$(FlatHashTable, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 147
stackSize: 0
=== Inputs ===
outerFrameState: ?130 
values: - - 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?130 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
at scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#FlatHashTable.addEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v360 
stateDuring: ?520 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v360 stateDuring: ?520 #next: v163  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
i129 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a136 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a136  <|@  <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a# Lscala/collection/mutable/WrappedArrayBuilder;
signature: [Ljdk.vm.ci.meta.JavaType;@35c7aac9
stamp: void
targetMethod: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)>
=== Inputs ===
arguments: a340 a331 
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a340 a331  <|@  <|@
tid ?138 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?147 
values: - - - - 
=== Succesors ===
=== Usages ===
?517 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?147 values: - - - -  <|@  <|@
tid ?517 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<WrappedArrayBuilder.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: WrappedArrayBuilder.scala
sourceLine: 26
stackSize: 0
=== Inputs ===
outerFrameState: ?138 
values: - - 
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?138 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a136 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: false
stamp: a# Lscala/collection/mutable/WrappedArrayBuilder;
targetMethod: Direct#WrappedArrayBuilder.$plus$eq
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v361 
stateDuring: ?517 
=== Succesors ===
next: v164 
=== Usages ===
a64 
=== Predecessor ===
v104 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v361 stateDuring: ?517 #next: v164  <|@  <|@
f <@*|@fixed>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
a136 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a140 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a140  <|@  <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a# Lscala/collection/immutable/VectorBuilder;
signature: [Ljdk.vm.ci.meta.JavaType;@7324885a
stamp: void
targetMethod: HotSpotMethod<VectorBuilder.$plus$eq(Object)>
=== Inputs ===
arguments: a340 a331 
=== Succesors ===
=== Usages ===
a140 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a340 a331  <|@  <|@
tid ?142 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?147 
values: - - - - 
=== Succesors ===
=== Usages ===
?518 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?147 values: - - - -  <|@  <|@
tid ?518 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<VectorBuilder.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Vector.scala
sourceLine: 710
stackSize: 0
=== Inputs ===
outerFrameState: ?142 
values: - - 
=== Succesors ===
=== Usages ===
a140 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?142 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a140 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: false
stamp: a# Lscala/collection/immutable/VectorBuilder;
targetMethod: Direct#VectorBuilder.$plus$eq
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v362 
stateDuring: ?518 
=== Succesors ===
next: v165 
=== Usages ===
a64 
=== Predecessor ===
v105 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v362 stateDuring: ?518 #next: v165  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
a140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a144 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a144  <|@  <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a# Lscala/collection/mutable/SetBuilder;
signature: [Ljdk.vm.ci.meta.JavaType;@7cfa35a6
stamp: void
targetMethod: HotSpotMethod<SetBuilder.$plus$eq(Object)>
=== Inputs ===
arguments: a340 a331 
=== Succesors ===
=== Usages ===
a144 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a340 a331  <|@  <|@
tid ?146 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?147 
values: - - - - 
=== Succesors ===
=== Usages ===
?519 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?147 values: - - - -  <|@  <|@
tid ?519 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<SetBuilder.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: SetBuilder.scala
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: ?146 
values: - - 
=== Succesors ===
=== Usages ===
a144 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?146 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a144 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: false
stamp: a# Lscala/collection/mutable/SetBuilder;
targetMethod: Direct#SetBuilder.$plus$eq
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v363 
stateDuring: ?519 
=== Succesors ===
next: v166 
=== Usages ===
a64 
=== Predecessor ===
v106 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v363 stateDuring: ?519 #next: v166  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
a144 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid i546 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -27443
stableDimension: 0
stamp: i32 [-27443] â‡Š00000000ffff94cd â‡ˆ00000000ffff94cd
stampKind: i32
value: int[-27443|0xffffffffffff94cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v645 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -89123
stableDimension: 0
stamp: i32 [-89123] â‡Š00000000fffea3dd â‡ˆ00000000fffea3dd
stampKind: i32
value: int[-89123|0xfffffffffffea3dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i547 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-91923 - -27443] â‡Š00000000fffe80c5 â‡ˆ00000000ffffbffd
valueDescription: i32
=== Inputs ===
merge: v544 
values: i546 i551 i553 i555 i557 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v544 values: i546 i551 i553 i555 i557  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v545 v550 v552 v554 v556 
=== Succesors ===
next: v549 
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v545 v550 v552 v554 v556 #next: v549  <|@  <|@
tid ?86 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 1
=== Inputs ===
outerFrameState: ?147 
values: - i337 a340 a331 a85 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?147 values: - i337 a340 a331 a85  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?86 
actionAndReason: i547 
speculation: j524 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?86 actionAndReason: i547 speculation: j524  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a70 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a70  <|@  <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@42f754f3
stamp: void
targetMethod: HotSpotMethod<Function1.apply(Object)>
=== Inputs ===
arguments: a2 a331 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a331  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<List.foreach(Function1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: List.scala
sourceLine: 378
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a280 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a70 <|@
d <@d|@=== Debug Properties ===
bci: 14
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: true
stamp: a Ljava/lang/Object;
targetMethod: Direct#Function1.apply
useForInlining: false
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v364 
stateDuring: ?514 
=== Succesors ===
next: v74 
=== Usages ===
a64 
=== Predecessor ===
v73 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v364 stateDuring: ?514 #next: v74  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
a70 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a64 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v63 
values: a120 a70 a340 a136 a140 a144 a91 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v63 values: a120 a70 a340 a136 a140 a144 a91  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v69 v74 v163 v164 v165 v166 v167 
=== Succesors ===
next: a666 
=== Usages ===
a64 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v69 v74 v163 v164 v165 v166 v167 #next: a666  <|@  <|@
f <@~|@floating>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a280 
index: - 
=== Succesors ===
=== Usages ===
a666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a280 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a666 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: $colon$colon.tl
nodeSourcePosition: at scala.collection.immutable.$colon$colon.tl(List.scala:436) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:437) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:436) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:379) [bci: 21]
nullCheck: false
stamp: n Lscala/collection/immutable/List;
=== Inputs ===
stateBefore: - 
guard: - 
address: v675 
=== Succesors ===
next: v684 
=== Usages ===
a367 v684 
=== Predecessor ===
v63 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v675 #next: v684  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<List.foreach(Function1)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: List.scala
sourceLine: 378
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 a280 a64 
=== Succesors ===
=== Usages ===
v394 v684 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a280 a64  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?24 
object: a666 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
a666 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?24 object: a666 #next: v394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
stamp: void
=== Inputs ===
stateBefore: ?24 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?24 #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid a367 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.immutable.$colon$colon.tl(List.scala:436) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:437) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:436) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:379) [bci: 21]
op: Uncompress
stamp: a Lscala/collection/immutable/List;
=== Inputs ===
value: a666 
=== Succesors ===
=== Usages ===
a280 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a666  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v540  <|@  <|@
f <@~|@floating>@ <|@
tid i541 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -84019
stableDimension: 0
stamp: i32 [-84019] â‡Š00000000fffeb7cd â‡ˆ00000000fffeb7cd
stampKind: i32
value: int[-84019|0xfffffffffffeb7cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid i536 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -12339
stableDimension: 0
stamp: i32 [-12339] â‡Š00000000ffffcfcd â‡ˆ00000000ffffcfcd
stampKind: i32
value: int[-12339|0xffffffffffffcfcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i537 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-87563 - -12339] â‡Š00000000fffe81c5 â‡ˆ00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v534 
values: i536 i541 i543 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v534 values: i536 i541 i543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v535 v540 v542 
=== Succesors ===
next: v539 
=== Usages ===
i537 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v535 v540 v542 #next: v539  <|@  <|@
tid ?8 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<List.foreach(Function1)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: List.scala
sourceLine: 377
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a280 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a280  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?8 
actionAndReason: i537 
speculation: j524 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?8 actionAndReason: i537 speculation: j524  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid i531 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -72499
stableDimension: 0
stamp: i32 [-72499] â‡Š00000000fffee4cd â‡ˆ00000000fffee4cd
stampKind: i32
value: int[-72499|0xfffffffffffee4cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@~|@floating>@ <|@
tid i529 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -46387
stableDimension: 0
stamp: i32 [-46387] â‡Š00000000ffff4acd â‡ˆ00000000ffff4acd
stampKind: i32
value: int[-46387|0xffffffffffff4acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
v182 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i525 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-77067 - -46387] â‡Š00000000fffe40c5 â‡ˆ00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v521 
values: i529 i531 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v521 values: i529 i531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v528 v530 
=== Succesors ===
next: v527 
=== Usages ===
i525 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v528 v530 #next: v527  <|@  <|@
f <@*|@fixed>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i525 
speculation: j524 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i525 speculation: j524  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v12|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZXB v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction CMP [v18|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVZXB [v18|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v30|QWORD[.] 
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v31|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v34|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v33|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD[.], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVZXB v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v46|QWORD[.], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v46|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB [v46|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[.] = MOV [v33|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v59|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction SAFEPOINT v60|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD[.]] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV [v33|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v35|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|DWORD[.], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOV [v42|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v50|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v49|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD[.]] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v37|DWORD[.], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD[.]] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV [v14|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v21|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v6|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD[.]] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91403|0xfffffffffffe9af5]] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v46|QWORD[.] 
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-58163|0xffffffffffff1ccd]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-12339|0xffffffffffffcfcd]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89123|0xfffffffffffea3dd]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91923|0xfffffffffffe98ed]] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-87563|0xfffffffffffea9f5]] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84019|0xfffffffffffeb7cd]] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-27443|0xffffffffffff94cd]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-78627|0xfffffffffffeccdd]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88339|0xfffffffffffea6ed]] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-72499|0xfffffffffffee4cd]] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46387|0xffffffffffff4acd]] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Lscala/collection/immutable/List;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?268 ?175 v676 v672 ?507 v667 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v676 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v648 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v676 
=== Succesors ===
next: v184 
=== Usages ===
v607 v627 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v676 #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid v607 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v648 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v648  <|@  <|@
f <@~|@floating>@ <|@
tid j524 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] â‡ˆ0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v527 v563 v539 v549 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Lscala/Function1;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?8 ?514 ?24 v668 v323 v669 ?154 v670 ?175 ?268 ?507 v677 v364 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<List.foreach(Function1)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: List.scala
sourceLine: 376
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v527 v649 v685 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
hubs: [Ljdk.vm.ci.meta.Constant;@6955af90
keyProbabilities: [D@501a6f11
keySuccessors: [I@8ab79c2
keys: [Ljdk.vm.ci.meta.ResolvedJavaType;@ae5b184
stamp: void
=== Inputs ===
value: v607 
=== Succesors ===
successors: v174 v180 v182 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@TypeSwitch|@org.graalvm.compiler.nodes.java.TypeSwitchNode>@ value: v607 #successors: v174 v180 v182  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:377) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:377) [bci: 31]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
result meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
rawvalue: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 34359738368 shift: 3)
stampKind: Klass*(compressed base: 34359738368 shift: 3)
value: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v627 v630 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v648 
y: v626 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v648 y: v626  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v627 
=== Succesors ===
trueSuccessor: v395 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v627 #trueSuccessor: v395 #falseSuccessor: v397  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v649 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v649  <|@  <|@
f <@~|@floating>@ <|@
tid v677 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v649 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v649 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v677 
=== Succesors ===
next: a650 
=== Usages ===
v610 
=== Predecessor ===
v395 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v677 #next: a650  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a650 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: $colon$colon.head
nodeSourcePosition: at scala.collection.immutable.$colon$colon.head(List.scala:436) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v667 
=== Succesors ===
next: v201 
=== Usages ===
a287 v686 
=== Predecessor ===
v649 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v667 #next: v201  <|@  <|@
f <@~|@floating>@ <|@
tid a287 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.immutable.$colon$colon.head(List.scala:436) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a650 
=== Succesors ===
=== Usages ===
v323 v303 ?208 v317 ?243 ?244 ?245 v322 v319 ?250 v320 v321 ?508 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a650  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v649 
=== Succesors ===
=== Usages ===
v79 v201 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v649  <|@  <|@
f <@~|@floating>@ <|@
tid a91 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 22]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rawvalue: BoxedUnit@732865233
stableDimension: 0
stamp: a!# Lscala/runtime/BoxedUnit;
stampKind: a -
value: Object[BoxedUnit@732865233]
=== Inputs ===
=== Succesors ===
=== Usages ===
a64 a190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
result meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:145) [bci: 50]
at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rawvalue: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 34359738368 shift: 3)
stampKind: Klass*(compressed base: 34359738368 shift: 3)
value: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 v631 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v670 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a653 a662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v669 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i652 i661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v668 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a651 a660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
hubs: [Ljdk.vm.ci.meta.Constant;@4e08a667
keyProbabilities: [D@4de92a50
keySuccessors: [I@1edf3f46
keys: [Ljdk.vm.ci.meta.ResolvedJavaType;@3911d488
stamp: void
=== Inputs ===
value: v610 
=== Succesors ===
successors: v191 v196 
=== Usages ===
=== Predecessor ===
a650 >@ <|@
instruction <@TypeSwitch|@org.graalvm.compiler.nodes.java.TypeSwitchNode>@ value: v610 #successors: v191 v196  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a651 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a651 <|@
result v12|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TraversableLike$$Lambda$5955/0x0000000841d61040.arg$1
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v668 
=== Succesors ===
next: v685 
=== Usages ===
a292 v685 
=== Predecessor ===
v191 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v668 #next: v685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a651 
=== Succesors ===
next: i652 
=== Usages ===
=== Predecessor ===
a651 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a651 #next: i652  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i652 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TraversableLike$$Lambda$5955/0x0000000841d61040.arg$2
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 5]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v669 
=== Succesors ===
next: a653 
=== Usages ===
i295 
=== Predecessor ===
v685 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v669 #next: a653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a653 <|@
result v14|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TraversableLike$$Lambda$5955/0x0000000841d61040.arg$3
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 9]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v670 
=== Succesors ===
next: a207 
=== Usages ===
a299 v679 
=== Predecessor ===
i652 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v670 #next: a207  <|@  <|@
f <@~|@floating>@ <|@
tid a292 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
op: Uncompress
stamp: a -
=== Inputs ===
value: a651 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a651  <|@  <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@32217653
stamp: void
targetMethod: HotSpotMethod<Function1.apply(Object)>
=== Inputs ===
arguments: a292 a287 
=== Succesors ===
=== Usages ===
a207 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a292 a287  <|@  <|@
tid ?268 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<List.foreach(Function1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: List.scala
sourceLine: 378
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a1 
=== Succesors ===
=== Usages ===
?267 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a1  <|@  <|@
tid ?267 <|@
d <@d|@=== Debug Properties ===
bci: 13
code: ResolvedJavaMethodBytecode<TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
stackSize: 0
=== Inputs ===
outerFrameState: ?268 
values: - - 
=== Succesors ===
=== Usages ===
?208 ?242 ?254 ?258 ?262 ?266 ?508 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?268 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x0000000840250440@3a327a57
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$131/0x0000000840257840@4c4b9236
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 5]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i652 
=== Succesors ===
=== Usages ===
?208 v209 ?508 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i652  <|@  <|@
f <@~|@floating>@ <|@
tid a299 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 9]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
op: Uncompress
stamp: a -
=== Inputs ===
value: a653 
=== Succesors ===
=== Usages ===
?208 v322 v319 v317 ?250 v320 v321 ?508 a190 ?243 ?244 ?245 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a653  <|@  <|@
tid ?508 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?267 
values: - i295 a299 a287 
=== Succesors ===
=== Usages ===
a207 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?267 values: - i295 a299 a287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a207 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: true
stamp: a Ljava/lang/Object;
targetMethod: Direct#Function1.apply
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v303 
stateDuring: ?508 
=== Succesors ===
next: v654 
=== Usages ===
?208 v671 v678 
=== Predecessor ===
a653 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v303 stateDuring: ?508 #next: v654  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 1
=== Inputs ===
outerFrameState: ?267 
values: - i295 a299 a287 a207 
=== Succesors ===
=== Usages ===
v563 v654 v656 v686 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?267 values: - i295 a299 a287 a207  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
result [v18|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a207 
index: - 
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a207 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v654 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:144) [bci: 39]
at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullCheck: true
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: ?208 
guard: - 
address: v678 
=== Succesors ===
next: v637 
=== Usages ===
v629 
=== Predecessor ===
a207 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?208 guard: - address: v678 #next: v637  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:145) [bci: 50]
at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v654 
y: v628 
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v654 y: v628  <|@  <|@
f <@*|@fixed>@ <|@
tid v637 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@2af7189b <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v629 
=== Succesors ===
trueSuccessor: v636 
falseSuccessor: v582 
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v629 #trueSuccessor: v636 #falseSuccessor: v582  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v12|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZXB v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction CMP [v18|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i655 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i655  <|@  <|@
f <@~|@floating>@ <|@
tid v671 <|@
result [v18|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a207 
index: - 
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a207 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i655 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Boolean.value
nodeSourcePosition: at java.base@11.0.14.1/java.lang.Boolean.booleanValue(Boolean.java:143) [bci: 1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.replacements.BoxingSnippets.booleanValue(BoxingSnippets.java:109) [bci: 5]
at java.lang.Boolean.booleanValue() [bci: -1]
at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 12]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v671 
=== Succesors ===
next: v212 
=== Usages ===
i379 
=== Predecessor ===
v636 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v671 #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid i379 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x0000000840250440@3a327a57
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$131/0x0000000840257840@4c4b9236
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 15]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i655 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i655  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 11]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i295 
y: i379 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i295 y: i379  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 11]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
trueSuccessorProbability: 0.7771452667088341
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v210 
falseSuccessor: v211 
=== Usages ===
=== Predecessor ===
i655 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v210 #falseSuccessor: v211  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVZXB [v18|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 22]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v273  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
v210 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 14]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid v679 <|@
result [v14|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a653 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v656 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: ?208 
guard: - 
address: v679 
=== Succesors ===
next: v233 
=== Usages ===
v616 
=== Predecessor ===
v211 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?208 guard: - address: v679 #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid v616 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v656 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v656  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
hubs: [Ljdk.vm.ci.meta.Constant;@361e61ed
keyProbabilities: [D@515c5d67
keySuccessors: [I@665e6650
keys: [Ljdk.vm.ci.meta.ResolvedJavaType;@5ff41726
stamp: void
=== Inputs ===
value: v616 
=== Succesors ===
successors: v222 v223 v224 v225 v226 v228 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@TypeSwitch|@org.graalvm.compiler.nodes.java.TypeSwitchNode>@ value: v616 #successors: v222 v223 v224 v225 v226 v228  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV [v14|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v21|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a240 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a240  <|@  <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a# Lscala/collection/mutable/ListBuffer;
signature: [Ljdk.vm.ci.meta.JavaType;@1aa0043c
stamp: void
targetMethod: HotSpotMethod<ListBuffer.$plus$eq(Object)>
=== Inputs ===
arguments: a299 a287 
=== Succesors ===
=== Usages ===
a240 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a299 a287  <|@  <|@
tid ?242 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?267 
values: - - - - 
=== Succesors ===
=== Usages ===
?509 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?267 values: - - - -  <|@  <|@
tid ?509 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ListBuffer.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ListBuffer.scala
sourceLine: 44
stackSize: 0
=== Inputs ===
outerFrameState: ?242 
values: - - 
=== Succesors ===
=== Usages ===
a240 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?242 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a240 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: false
stamp: a# Lscala/collection/mutable/ListBuffer;
targetMethod: Direct#ListBuffer.$plus$eq
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v317 
stateDuring: ?509 
=== Succesors ===
next: v192 
=== Usages ===
a190 
=== Predecessor ===
v222 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v317 stateDuring: ?509 #next: v192  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
a240 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?208 
object: a650 
=== Succesors ===
next: i249 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?208 object: a650 #next: i249  <|@  <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
at scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2924d56a
stamp: void
targetMethod: HotSpotMethod<FlatHashTable.addEntry(Object)>
=== Inputs ===
arguments: a299 a287 
=== Succesors ===
=== Usages ===
i249 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a299 a287  <|@  <|@
tid ?254 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?267 
values: - - - - 
=== Succesors ===
=== Usages ===
?243 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?267 values: - - - -  <|@  <|@
tid ?243 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 40
stackSize: 0
=== Inputs ===
outerFrameState: ?254 
values: a299 a287 
=== Succesors ===
=== Usages ===
?244 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?254 values: a299 a287  <|@  <|@
tid ?244 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 59
stackSize: 0
=== Inputs ===
outerFrameState: ?243 
values: a299 a287 
=== Succesors ===
=== Usages ===
?245 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?243 values: a299 a287  <|@  <|@
tid ?245 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.addElem(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 40
stackSize: 0
=== Inputs ===
outerFrameState: ?244 
values: a299 a287 
=== Succesors ===
=== Usages ===
?253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?244 values: a299 a287  <|@  <|@
tid ?253 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<FlatHashTable.addElem$(FlatHashTable, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 138
stackSize: 0
=== Inputs ===
outerFrameState: ?245 
values: - - 
=== Succesors ===
=== Usages ===
?252 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?245 values: - -  <|@  <|@
tid ?252 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<FlatHashTable.addElem(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 139
stackSize: 0
=== Inputs ===
outerFrameState: ?253 
values: - - 
=== Succesors ===
=== Usages ===
?250 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?253 values: - -  <|@  <|@
tid ?250 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.addEntry(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
at scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 40
stackSize: 0
=== Inputs ===
outerFrameState: ?252 
values: a299 a287 
=== Succesors ===
=== Usages ===
?513 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?252 values: a299 a287  <|@  <|@
tid ?513 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry$(FlatHashTable, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 147
stackSize: 0
=== Inputs ===
outerFrameState: ?250 
values: - - 
=== Succesors ===
=== Usages ===
i249 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?250 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i249 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
at scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#FlatHashTable.addEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v319 
stateDuring: ?513 
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v686 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v319 stateDuring: ?513 #next: v269  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
i249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v6|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a256 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a256  <|@  <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a# Lscala/collection/mutable/WrappedArrayBuilder;
signature: [Ljdk.vm.ci.meta.JavaType;@3cdd5af8
stamp: void
targetMethod: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)>
=== Inputs ===
arguments: a299 a287 
=== Succesors ===
=== Usages ===
a256 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a299 a287  <|@  <|@
tid ?258 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?267 
values: - - - - 
=== Succesors ===
=== Usages ===
?510 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?267 values: - - - -  <|@  <|@
tid ?510 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<WrappedArrayBuilder.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: WrappedArrayBuilder.scala
sourceLine: 26
stackSize: 0
=== Inputs ===
outerFrameState: ?258 
values: - - 
=== Succesors ===
=== Usages ===
a256 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?258 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a256 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: false
stamp: a# Lscala/collection/mutable/WrappedArrayBuilder;
targetMethod: Direct#WrappedArrayBuilder.$plus$eq
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v320 
stateDuring: ?510 
=== Succesors ===
next: v270 
=== Usages ===
a190 
=== Predecessor ===
v224 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v320 stateDuring: ?510 #next: v270  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
a256 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD[.]] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a260 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a260  <|@  <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a# Lscala/collection/immutable/VectorBuilder;
signature: [Ljdk.vm.ci.meta.JavaType;@436f2762
stamp: void
targetMethod: HotSpotMethod<VectorBuilder.$plus$eq(Object)>
=== Inputs ===
arguments: a299 a287 
=== Succesors ===
=== Usages ===
a260 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a299 a287  <|@  <|@
tid ?262 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?267 
values: - - - - 
=== Succesors ===
=== Usages ===
?511 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?267 values: - - - -  <|@  <|@
tid ?511 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<VectorBuilder.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Vector.scala
sourceLine: 710
stackSize: 0
=== Inputs ===
outerFrameState: ?262 
values: - - 
=== Succesors ===
=== Usages ===
a260 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?262 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a260 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: false
stamp: a# Lscala/collection/immutable/VectorBuilder;
targetMethod: Direct#VectorBuilder.$plus$eq
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v321 
stateDuring: ?511 
=== Succesors ===
next: v271 
=== Usages ===
a190 
=== Predecessor ===
v225 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v321 stateDuring: ?511 #next: v271  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
a260 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a264 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a264  <|@  <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a# Lscala/collection/mutable/SetBuilder;
signature: [Ljdk.vm.ci.meta.JavaType;@59f44ad7
stamp: void
targetMethod: HotSpotMethod<SetBuilder.$plus$eq(Object)>
=== Inputs ===
arguments: a299 a287 
=== Succesors ===
=== Usages ===
a264 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a299 a287  <|@  <|@
tid ?266 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?267 
values: - - - - 
=== Succesors ===
=== Usages ===
?512 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?267 values: - - - -  <|@  <|@
tid ?512 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<SetBuilder.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: SetBuilder.scala
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: ?266 
values: - - 
=== Succesors ===
=== Usages ===
a264 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?266 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a264 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: false
stamp: a# Lscala/collection/mutable/SetBuilder;
targetMethod: Direct#SetBuilder.$plus$eq
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v322 
stateDuring: ?512 
=== Succesors ===
next: v272 
=== Usages ===
a190 
=== Predecessor ===
v226 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v322 stateDuring: ?512 #next: v272  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
a264 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v570 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid i571 <|@
result int[-58163|0xffffffffffff1ccd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -58163
stableDimension: 0
stamp: i32 [-58163] â‡Š00000000ffff1ccd â‡ˆ00000000ffff1ccd
stampKind: i32
value: int[-58163|0xffffffffffff1ccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
v228 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-58163|0xffffffffffff1ccd]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v603 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v603  <|@  <|@
f <@~|@floating>@ <|@
tid i565 <|@
result int[-78627|0xfffffffffffeccdd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -78627
stableDimension: 0
stamp: i32 [-78627] â‡Š00000000fffeccdd â‡ˆ00000000fffeccdd
stampKind: i32
value: int[-78627|0xfffffffffffeccdd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
v582 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-78627|0xfffffffffffeccdd]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i561 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-81427 - -58163] â‡Š00000000fffe00c5 â‡ˆ00000000ffffdffd
valueDescription: i32
=== Inputs ===
merge: v558 
values: i571 i565 
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v558 values: i571 i565  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v570 v603 
=== Succesors ===
next: v563 
=== Usages ===
i561 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v570 v603 #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 1]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
stateBefore: ?208 
actionAndReason: i561 
speculation: j524 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?208 actionAndReason: i561 speculation: j524  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a193 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a193  <|@  <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@56744b06
stamp: void
targetMethod: HotSpotMethod<Function1.apply(Object)>
=== Inputs ===
arguments: a2 a287 
=== Succesors ===
=== Usages ===
a193 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a287  <|@  <|@
tid ?507 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<List.foreach(Function1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: List.scala
sourceLine: 378
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a1 
=== Succesors ===
=== Usages ===
a193 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a193 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 14
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: true
stamp: a Ljava/lang/Object;
targetMethod: Direct#Function1.apply
useForInlining: false
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v323 
stateDuring: ?507 
=== Succesors ===
next: v197 
=== Usages ===
a190 
=== Predecessor ===
v196 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v323 stateDuring: ?507 #next: v197  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
a193 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a190 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v189 
values: a240 a193 a299 a256 a260 a264 a91 
=== Succesors ===
=== Usages ===
?175 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v189 values: a240 a193 a299 a256 a260 a264 a91  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v192 v197 v269 v270 v271 v272 v273 
=== Succesors ===
next: a657 
=== Usages ===
a190 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v192 v197 v269 v270 v271 v272 v273 #next: a657  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a657 <|@
result v31|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: $colon$colon.tl
nodeSourcePosition: at scala.collection.immutable.$colon$colon.tl(List.scala:436) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:437) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:436) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:379) [bci: 21]
nullCheck: false
stamp: n Lscala/collection/immutable/List;
=== Inputs ===
stateBefore: - 
guard: - 
address: v672 
=== Succesors ===
next: v683 
=== Usages ===
a326 v683 
=== Predecessor ===
v189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v672 #next: v683  <|@  <|@
tid ?175 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<List.foreach(Function1)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: List.scala
sourceLine: 378
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 a1 a190 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a1 a190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?175 
object: a657 
=== Succesors ===
next: v5 
=== Usages ===
=== Predecessor ===
a657 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?175 object: a657 #next: v5  <|@  <|@
f <@~|@floating>@ <|@
tid a326 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.immutable.$colon$colon.tl(List.scala:436) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:437) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:436) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:379) [bci: 21]
op: Uncompress
stamp: a Lscala/collection/immutable/List;
=== Inputs ===
value: a657 
=== Succesors ===
=== Usages ===
a280 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a657  <|@  <|@
f <@*|@fixed>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 
=== Predecessor ===
v683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v30|QWORD[.] 
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v31|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a280 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Lscala/collection/immutable/List;
valueDescription: a -
=== Inputs ===
merge: v6 
values: a326 a367 
=== Succesors ===
=== Usages ===
?8 ?154 ?514 v675 v680 ?24 v673 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v6 values: a326 a367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 0.9282839370654958
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v5 
=== Succesors ===
next: v658 
=== Usages ===
a280 v16 v34 v455 v430 v435 v440 v445 v450 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v5 #next: v658  <|@  <|@
f <@~|@floating>@ <|@
tid v680 <|@
result [v33|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a280 
index: - 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a280 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v658 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v680 
=== Succesors ===
next: v51 
=== Usages ===
v619 v630 
=== Predecessor ===
v6 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v680 #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid v619 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v658 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v658  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
hubs: [Ljdk.vm.ci.meta.Constant;@6955af90
keyProbabilities: [D@501a6f11
keySuccessors: [I@8ab79c2
keys: [Ljdk.vm.ci.meta.ResolvedJavaType;@ae5b184
stamp: void
=== Inputs ===
value: v619 
=== Succesors ===
successors: v16 v46 v49 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@TypeSwitch|@org.graalvm.compiler.nodes.java.TypeSwitchNode>@ value: v619 #successors: v16 v46 v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV [v33|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v35|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:377) [bci: 31]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v281  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:377) [bci: 31]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v658 
y: v626 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v658 y: v626  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v630 
=== Succesors ===
trueSuccessor: v427 
falseSuccessor: v430 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v630 #trueSuccessor: v427 #falseSuccessor: v430  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v34|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a659 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a659  <|@  <|@
f <@~|@floating>@ <|@
tid v673 <|@
result [v33|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a280 
index: - 
=== Succesors ===
=== Usages ===
a659 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a280 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a659 <|@
result v37|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: $colon$colon.head
nodeSourcePosition: at scala.collection.immutable.$colon$colon.head(List.scala:436) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v673 
=== Succesors ===
next: v79 
=== Usages ===
a331 v374 
=== Predecessor ===
v427 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v673 #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid a331 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.immutable.$colon$colon.head(List.scala:436) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a659 
=== Succesors ===
=== Usages ===
v362 v363 v364 v344 ?86 v358 ?123 ?124 ?125 v361 v360 ?130 ?515 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a659  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
hubs: [Ljdk.vm.ci.meta.Constant;@4e08a667
keyProbabilities: [D@4de92a50
keySuccessors: [I@1edf3f46
keys: [Ljdk.vm.ci.meta.ResolvedJavaType;@3911d488
stamp: void
=== Inputs ===
value: v610 
=== Succesors ===
successors: v68 v73 
=== Usages ===
=== Predecessor ===
a659 >@ <|@
instruction <@TypeSwitch|@org.graalvm.compiler.nodes.java.TypeSwitchNode>@ value: v610 #successors: v68 v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v33|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a660 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a660 <|@
result v40|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TraversableLike$$Lambda$5955/0x0000000841d61040.arg$1
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v668 
=== Succesors ===
next: v436 
=== Usages ===
a334 v341 
=== Predecessor ===
v68 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v668 #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a660 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a660  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v435 
falseSuccessor: v432 
=== Usages ===
=== Predecessor ===
a660 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v435 #falseSuccessor: v432  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD[.], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v542 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v542  <|@  <|@
f <@~|@floating>@ <|@
tid i543 <|@
result int[-87563|0xfffffffffffea9f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -87563
stableDimension: 0
stamp: i32 [-87563] â‡Š00000000fffea9f5 â‡ˆ00000000fffea9f5
stampKind: i32
value: int[-87563|0xfffffffffffea9f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-87563|0xfffffffffffea9f5]] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i661 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i661 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TraversableLike$$Lambda$5955/0x0000000841d61040.arg$2
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 5]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v669 
=== Succesors ===
next: a662 
=== Usages ===
i337 
=== Predecessor ===
v432 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v669 #next: a662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a662 <|@
result v42|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: TraversableLike$$Lambda$5955/0x0000000841d61040.arg$3
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 9]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v670 
=== Succesors ===
next: a85 
=== Usages ===
a340 v375 v682 
=== Predecessor ===
i661 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v670 #next: a85  <|@  <|@
f <@~|@floating>@ <|@
tid a334 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
op: Uncompress
stamp: a -
=== Inputs ===
value: a660 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a660  <|@  <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@28d1aa
stamp: void
targetMethod: HotSpotMethod<Function1.apply(Object)>
=== Inputs ===
arguments: a334 a331 
=== Succesors ===
=== Usages ===
a85 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a334 a331  <|@  <|@
tid ?154 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<List.foreach(Function1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: List.scala
sourceLine: 378
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a280 
=== Succesors ===
=== Usages ===
?147 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a280  <|@  <|@
tid ?147 <|@
d <@d|@=== Debug Properties ===
bci: 13
code: ResolvedJavaMethodBytecode<TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
stackSize: 0
=== Inputs ===
outerFrameState: ?154 
values: - - 
=== Succesors ===
=== Usages ===
?86 ?122 ?134 ?138 ?142 ?146 ?515 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?154 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x0000000840250440@3a327a57
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$131/0x0000000840257840@4c4b9236
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 5]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i661 
=== Succesors ===
=== Usages ===
?86 v87 ?515 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i661  <|@  <|@
f <@~|@floating>@ <|@
tid a340 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 9]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
op: Uncompress
stamp: a -
=== Inputs ===
value: a662 
=== Succesors ===
=== Usages ===
?86 v363 ?130 v358 a64 v361 v362 ?515 ?123 ?124 ?125 v360 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a662  <|@  <|@
tid ?515 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?147 
values: - i337 a340 a331 
=== Succesors ===
=== Usages ===
a85 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?147 values: - i337 a340 a331  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a85 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: true
stamp: a Ljava/lang/Object;
targetMethod: Direct#Function1.apply
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v344 
stateDuring: ?515 
=== Succesors ===
next: v441 
=== Usages ===
?86 v92 v681 v674 
=== Predecessor ===
a662 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v344 stateDuring: ?515 #next: v441  <|@  <|@
f <@~|@floating>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 1]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a85 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a85  <|@  <|@
f <@*|@fixed>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 1]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v92 
=== Succesors ===
trueSuccessor: v440 
falseSuccessor: v437 
=== Usages ===
=== Predecessor ===
a85 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v92 #trueSuccessor: v440 #falseSuccessor: v437  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVZXB v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v46|QWORD[.], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 1]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid i551 <|@
result int[-88339|0xfffffffffffea6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -88339
stableDimension: 0
stamp: i32 [-88339] â‡Š00000000fffea6ed â‡ˆ00000000fffea6ed
stampKind: i32
value: int[-88339|0xfffffffffffea6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88339|0xfffffffffffea6ed]] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 8]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid v681 <|@
result [v46|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a85 
index: - 
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a85 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v663 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:144) [bci: 39]
at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v681 
=== Succesors ===
next: v645 
=== Usages ===
v631 
=== Predecessor ===
v437 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v681 #next: v645  <|@  <|@
f <@~|@floating>@ <|@
tid v631 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:145) [bci: 50]
at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v663 
y: v628 
=== Succesors ===
=== Usages ===
v645 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v663 y: v628  <|@  <|@
f <@*|@fixed>@ <|@
tid v645 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@2af7189b <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v631 
=== Succesors ===
trueSuccessor: v644 
falseSuccessor: v445 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v631 #trueSuccessor: v644 #falseSuccessor: v445  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v46|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i664 
=== Usages ===
=== Predecessor ===
v645 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i664  <|@  <|@
f <@~|@floating>@ <|@
tid v674 <|@
result [v46|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a85 
index: - 
=== Succesors ===
=== Usages ===
i664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a85 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i664 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Boolean.value
nodeSourcePosition: at java.base@11.0.14.1/java.lang.Boolean.booleanValue(Boolean.java:143) [bci: 1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.replacements.BoxingSnippets.booleanValue(BoxingSnippets.java:109) [bci: 5]
at java.lang.Boolean.booleanValue() [bci: -1]
at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 12]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v674 
=== Succesors ===
next: v90 
=== Usages ===
i380 
=== Predecessor ===
v644 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v674 #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid i380 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x0000000840250440@3a327a57
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$131/0x0000000840257840@4c4b9236
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 15]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i664 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i664  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 11]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i337 
y: i380 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i337 y: i380  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 11]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
trueSuccessorProbability: 0.7771452667088341
=== Inputs ===
condition: v87 
=== Succesors ===
trueSuccessor: v88 
falseSuccessor: v89 
=== Usages ===
=== Predecessor ===
i664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v87 #trueSuccessor: v88 #falseSuccessor: v89  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB [v46|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 22]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v88 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 14]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a662 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a662  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v375 
=== Succesors ===
trueSuccessor: v450 
falseSuccessor: v447 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v375 #trueSuccessor: v450 #falseSuccessor: v447  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|DWORD[.], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v554 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid i555 <|@
result int[-91403|0xfffffffffffe9af5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -91403
stableDimension: 0
stamp: i32 [-91403] â‡Š00000000fffe9af5 â‡ˆ00000000fffe9af5
stampKind: i32
value: int[-91403|0xfffffffffffe9af5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91403|0xfffffffffffe9af5]] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid v682 <|@
result [v42|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a662 
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v665 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v682 
=== Succesors ===
next: v113 
=== Usages ===
v625 
=== Predecessor ===
v447 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v682 #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v625 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v665 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v665  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
hubs: [Ljdk.vm.ci.meta.Constant;@361e61ed
keyProbabilities: [D@515c5d67
keySuccessors: [I@665e6650
keys: [Ljdk.vm.ci.meta.ResolvedJavaType;@5ff41726
stamp: void
=== Inputs ===
value: v625 
=== Succesors ===
successors: v102 v103 v104 v105 v106 v108 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@TypeSwitch|@org.graalvm.compiler.nodes.java.TypeSwitchNode>@ value: v625 #successors: v102 v103 v104 v105 v106 v108  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOV [v42|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v50|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v49|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a120 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a120  <|@  <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a# Lscala/collection/mutable/ListBuffer;
signature: [Ljdk.vm.ci.meta.JavaType;@3a46b2fa
stamp: void
targetMethod: HotSpotMethod<ListBuffer.$plus$eq(Object)>
=== Inputs ===
arguments: a340 a331 
=== Succesors ===
=== Usages ===
a120 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a340 a331  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?147 
values: - - - - 
=== Succesors ===
=== Usages ===
?516 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?147 values: - - - -  <|@  <|@
tid ?516 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ListBuffer.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ListBuffer.scala
sourceLine: 44
stackSize: 0
=== Inputs ===
outerFrameState: ?122 
values: - - 
=== Succesors ===
=== Usages ===
a120 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?122 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a120 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: false
stamp: a# Lscala/collection/mutable/ListBuffer;
targetMethod: Direct#ListBuffer.$plus$eq
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v358 
stateDuring: ?516 
=== Succesors ===
next: v69 
=== Usages ===
a64 
=== Predecessor ===
v102 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v358 stateDuring: ?516 #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
a120 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD[.]] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable$HashUtils.elemToEntry(FlatHashTable.scala:438) [bci: 1]
at scala.collection.mutable.FlatHashTable$HashUtils.elemToEntry$(FlatHashTable.scala:437) [bci: 2]
at scala.collection.mutable.HashSet.elemToEntry(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 3]
at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a659 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a659  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable$HashUtils.elemToEntry(FlatHashTable.scala:438) [bci: 1]
at scala.collection.mutable.FlatHashTable$HashUtils.elemToEntry$(FlatHashTable.scala:437) [bci: 2]
at scala.collection.mutable.HashSet.elemToEntry(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 3]
at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v374 
=== Succesors ===
trueSuccessor: v455 
falseSuccessor: v452 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v374 #trueSuccessor: v455 #falseSuccessor: v452  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v37|DWORD[.], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable$HashUtils.elemToEntry(FlatHashTable.scala:438) [bci: 1]
at scala.collection.mutable.FlatHashTable$HashUtils.elemToEntry$(FlatHashTable.scala:437) [bci: 2]
at scala.collection.mutable.HashSet.elemToEntry(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 3]
at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid i557 <|@
result int[-91923|0xfffffffffffe98ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -91923
stableDimension: 0
stamp: i32 [-91923] â‡Š00000000fffe98ed â‡ˆ00000000fffe98ed
stampKind: i32
value: int[-91923|0xfffffffffffe98ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v455 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91923|0xfffffffffffe98ed]] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable$HashUtils.elemToEntry(FlatHashTable.scala:438) [bci: 8]
at scala.collection.mutable.FlatHashTable$HashUtils.elemToEntry$(FlatHashTable.scala:437) [bci: 2]
at scala.collection.mutable.HashSet.elemToEntry(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 3]
at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i129 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i129  <|@  <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
at scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@411fe597
stamp: void
targetMethod: HotSpotMethod<FlatHashTable.addEntry(Object)>
=== Inputs ===
arguments: a340 a331 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a340 a331  <|@  <|@
tid ?134 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?147 
values: - - - - 
=== Succesors ===
=== Usages ===
?123 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?147 values: - - - -  <|@  <|@
tid ?123 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 40
stackSize: 0
=== Inputs ===
outerFrameState: ?134 
values: a340 a331 
=== Succesors ===
=== Usages ===
?124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?134 values: a340 a331  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 59
stackSize: 0
=== Inputs ===
outerFrameState: ?123 
values: a340 a331 
=== Succesors ===
=== Usages ===
?125 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?123 values: a340 a331  <|@  <|@
tid ?125 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.addElem(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 40
stackSize: 0
=== Inputs ===
outerFrameState: ?124 
values: a340 a331 
=== Succesors ===
=== Usages ===
?133 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?124 values: a340 a331  <|@  <|@
tid ?133 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<FlatHashTable.addElem$(FlatHashTable, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 138
stackSize: 0
=== Inputs ===
outerFrameState: ?125 
values: - - 
=== Succesors ===
=== Usages ===
?132 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?125 values: - -  <|@  <|@
tid ?132 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<FlatHashTable.addElem(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 139
stackSize: 0
=== Inputs ===
outerFrameState: ?133 
values: - - 
=== Succesors ===
=== Usages ===
?130 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?133 values: - -  <|@  <|@
tid ?130 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.addEntry(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
at scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 40
stackSize: 0
=== Inputs ===
outerFrameState: ?132 
values: a340 a331 
=== Succesors ===
=== Usages ===
?520 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?132 values: a340 a331  <|@  <|@
tid ?520 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry$(FlatHashTable, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 147
stackSize: 0
=== Inputs ===
outerFrameState: ?130 
values: - - 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?130 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i129 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
at scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#FlatHashTable.addEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v360 
stateDuring: ?520 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v360 stateDuring: ?520 #next: v163  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
i129 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a136 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a136  <|@  <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a# Lscala/collection/mutable/WrappedArrayBuilder;
signature: [Ljdk.vm.ci.meta.JavaType;@35c7aac9
stamp: void
targetMethod: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)>
=== Inputs ===
arguments: a340 a331 
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a340 a331  <|@  <|@
tid ?138 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?147 
values: - - - - 
=== Succesors ===
=== Usages ===
?517 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?147 values: - - - -  <|@  <|@
tid ?517 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<WrappedArrayBuilder.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: WrappedArrayBuilder.scala
sourceLine: 26
stackSize: 0
=== Inputs ===
outerFrameState: ?138 
values: - - 
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?138 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a136 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: false
stamp: a# Lscala/collection/mutable/WrappedArrayBuilder;
targetMethod: Direct#WrappedArrayBuilder.$plus$eq
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v361 
stateDuring: ?517 
=== Succesors ===
next: v164 
=== Usages ===
a64 
=== Predecessor ===
v104 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v361 stateDuring: ?517 #next: v164  <|@  <|@
f <@*|@fixed>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
a136 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a140 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a140  <|@  <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a# Lscala/collection/immutable/VectorBuilder;
signature: [Ljdk.vm.ci.meta.JavaType;@7324885a
stamp: void
targetMethod: HotSpotMethod<VectorBuilder.$plus$eq(Object)>
=== Inputs ===
arguments: a340 a331 
=== Succesors ===
=== Usages ===
a140 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a340 a331  <|@  <|@
tid ?142 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?147 
values: - - - - 
=== Succesors ===
=== Usages ===
?518 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?147 values: - - - -  <|@  <|@
tid ?518 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<VectorBuilder.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Vector.scala
sourceLine: 710
stackSize: 0
=== Inputs ===
outerFrameState: ?142 
values: - - 
=== Succesors ===
=== Usages ===
a140 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?142 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a140 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: false
stamp: a# Lscala/collection/immutable/VectorBuilder;
targetMethod: Direct#VectorBuilder.$plus$eq
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v362 
stateDuring: ?518 
=== Succesors ===
next: v165 
=== Usages ===
a64 
=== Predecessor ===
v105 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v362 stateDuring: ?518 #next: v165  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
a140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a144 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a144  <|@  <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a# Lscala/collection/mutable/SetBuilder;
signature: [Ljdk.vm.ci.meta.JavaType;@7cfa35a6
stamp: void
targetMethod: HotSpotMethod<SetBuilder.$plus$eq(Object)>
=== Inputs ===
arguments: a340 a331 
=== Succesors ===
=== Usages ===
a144 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a340 a331  <|@  <|@
tid ?146 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 0
=== Inputs ===
outerFrameState: ?147 
values: - - - - 
=== Succesors ===
=== Usages ===
?519 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?147 values: - - - -  <|@  <|@
tid ?519 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<SetBuilder.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: SetBuilder.scala
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: ?146 
values: - - 
=== Succesors ===
=== Usages ===
a144 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?146 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a144 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: false
stamp: a# Lscala/collection/mutable/SetBuilder;
targetMethod: Direct#SetBuilder.$plus$eq
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v363 
stateDuring: ?519 
=== Succesors ===
next: v166 
=== Usages ===
a64 
=== Predecessor ===
v106 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v363 stateDuring: ?519 #next: v166  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
a144 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD[.]] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid i546 <|@
result int[-27443|0xffffffffffff94cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -27443
stableDimension: 0
stamp: i32 [-27443] â‡Š00000000ffff94cd â‡ˆ00000000ffff94cd
stampKind: i32
value: int[-27443|0xffffffffffff94cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-27443|0xffffffffffff94cd]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.unboxToBoolean(BoxesRunTime.java:85) [bci: 9]
at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v645 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
result int[-89123|0xfffffffffffea3dd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -89123
stableDimension: 0
stamp: i32 [-89123] â‡Š00000000fffea3dd â‡ˆ00000000fffea3dd
stampKind: i32
value: int[-89123|0xfffffffffffea3dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89123|0xfffffffffffea3dd]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i547 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-91923 - -27443] â‡Š00000000fffe80c5 â‡ˆ00000000ffffbffd
valueDescription: i32
=== Inputs ===
merge: v544 
values: i546 i551 i553 i555 i557 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v544 values: i546 i551 i553 i555 i557  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v545 v550 v552 v554 v556 
=== Succesors ===
next: v549 
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v545 v550 v552 v554 v556 #next: v549  <|@  <|@
tid ?86 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<TraversableLike.$anonfun$filterImpl$1(Function1, boolean, Builder, Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: TraversableLike.scala
sourceLine: 248
stackSize: 1
=== Inputs ===
outerFrameState: ?147 
values: - i337 a340 a331 a85 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?147 values: - i337 a340 a331 a85  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?86 
actionAndReason: i547 
speculation: j524 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?86 actionAndReason: i547 speculation: j524  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v46|QWORD[.] 
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a70 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a70  <|@  <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
referencedType: [null]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@42f754f3
stamp: void
targetMethod: HotSpotMethod<Function1.apply(Object)>
=== Inputs ===
arguments: a2 a331 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a331  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<List.foreach(Function1)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: List.scala
sourceLine: 378
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a280 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a70 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 14
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
polymorphic: true
stamp: a Ljava/lang/Object;
targetMethod: Direct#Function1.apply
useForInlining: false
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v364 
stateDuring: ?514 
=== Succesors ===
next: v74 
=== Usages ===
a64 
=== Predecessor ===
v73 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v364 stateDuring: ?514 #next: v74  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
a70 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a64 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v63 
values: a120 a70 a340 a136 a140 a144 a91 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v63 values: a120 a70 a340 a136 a140 a144 a91  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v69 v74 v163 v164 v165 v166 v167 
=== Succesors ===
next: a666 
=== Usages ===
a64 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v69 v74 v163 v164 v165 v166 v167 #next: a666  <|@  <|@
f <@~|@floating>@ <|@
tid v675 <|@
result [v33|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a280 
index: - 
=== Succesors ===
=== Usages ===
a666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a280 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a666 <|@
result v59|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: $colon$colon.tl
nodeSourcePosition: at scala.collection.immutable.$colon$colon.tl(List.scala:436) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:437) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:436) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:379) [bci: 21]
nullCheck: false
stamp: n Lscala/collection/immutable/List;
=== Inputs ===
stateBefore: - 
guard: - 
address: v675 
=== Succesors ===
next: v684 
=== Usages ===
a367 v684 
=== Predecessor ===
v63 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v675 #next: v684  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<List.foreach(Function1)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
rethrowException: false
sourceFile: List.scala
sourceLine: 378
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 a280 a64 
=== Succesors ===
=== Usages ===
v394 v684 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a280 a64  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?24 
object: a666 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
a666 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?24 object: a666 #next: v394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
stamp: void
=== Inputs ===
stateBefore: ?24 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?24 #next: v34  <|@  <|@
f <@~|@floating>@ <|@
tid a367 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.immutable.$colon$colon.tl(List.scala:436) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:437) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:436) [bci: 1]
at scala.collection.immutable.List.foreach(List.scala:379) [bci: 21]
op: Uncompress
stamp: a Lscala/collection/immutable/List;
=== Inputs ===
value: a666 
=== Succesors ===
=== Usages ===
a280 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a666  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[.] = MOV [v33|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v59|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction SAFEPOINT v60|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD[.]] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v540  <|@  <|@
f <@~|@floating>@ <|@
tid i541 <|@
result int[-84019|0xfffffffffffeb7cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -84019
stableDimension: 0
stamp: i32 [-84019] â‡Š00000000fffeb7cd â‡ˆ00000000fffeb7cd
stampKind: i32
value: int[-84019|0xfffffffffffeb7cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84019|0xfffffffffffeb7cd]] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid i536 <|@
result int[-12339|0xffffffffffffcfcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -12339
stableDimension: 0
stamp: i32 [-12339] â‡Š00000000ffffcfcd â‡ˆ00000000ffffcfcd
stampKind: i32
value: int[-12339|0xffffffffffffcfcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-12339|0xffffffffffffcfcd]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i537 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-87563 - -12339] â‡Š00000000fffe81c5 â‡ˆ00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v534 
values: i536 i541 i543 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v534 values: i536 i541 i543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v535 v540 v542 
=== Succesors ===
next: v539 
=== Usages ===
i537 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v535 v540 v542 #next: v539  <|@  <|@
tid ?8 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<List.foreach(Function1)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: List.scala
sourceLine: 377
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a280 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a280  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?8 
actionAndReason: i537 
speculation: j524 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?8 actionAndReason: i537 speculation: j524  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid i531 <|@
result int[-72499|0xfffffffffffee4cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -72499
stableDimension: 0
stamp: i32 [-72499] â‡Š00000000fffee4cd â‡ˆ00000000fffee4cd
stampKind: i32
value: int[-72499|0xfffffffffffee4cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-72499|0xfffffffffffee4cd]] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@~|@floating>@ <|@
tid i529 <|@
result int[-46387|0xffffffffffff4acd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -46387
stableDimension: 0
stamp: i32 [-46387] â‡Š00000000ffff4acd â‡ˆ00000000ffff4acd
stampKind: i32
value: int[-46387|0xffffffffffff4acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
v182 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46387|0xffffffffffff4acd]] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i525 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-77067 - -46387] â‡Š00000000fffe40c5 â‡ˆ00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v521 
values: i529 i531 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v521 values: i529 i531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v528 v530 
=== Succesors ===
next: v527 
=== Usages ===
i525 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v528 v530 #next: v527  <|@  <|@
f <@*|@fixed>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i525 
speculation: j524 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i525 speculation: j524  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v12|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZXB v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction CMP [v18|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVZXB [v18|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD[.]] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v30|QWORD[.] 
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v31|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v34|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v33|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD[.], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVZXB v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v46|QWORD[.], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v46|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB [v46|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD[.]] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[.] = MOV [v33|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v59|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction SAFEPOINT v60|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD[.]] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV [v33|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v35|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|DWORD[.], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOV [v42|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v50|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v49|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD[.]] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v37|DWORD[.], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD[.]] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV [v14|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v21|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v6|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD[.]] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91403|0xfffffffffffe9af5]] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v46|QWORD[.] 
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-58163|0xffffffffffff1ccd]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-12339|0xffffffffffffcfcd]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89123|0xfffffffffffea3dd]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91923|0xfffffffffffe98ed]] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-87563|0xfffffffffffea9f5]] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84019|0xfffffffffffeb7cd]] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-27443|0xffffffffffff94cd]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-78627|0xfffffffffffeccdd]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88339|0xfffffffffffea6ed]] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-72499|0xfffffffffffee4cd]] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46387|0xffffffffffff4acd]] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v12|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZXB v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction CMP [v18|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVZXB [v18|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD[.]] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v30|QWORD[.] 
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v31|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v34|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v33|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD[.], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVZXB v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v46|QWORD[.], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v46|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB [v46|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD[.]] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[.] = MOV [v33|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v59|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction SAFEPOINT v60|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD[.]] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV [v33|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v35|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|DWORD[.], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOV [v42|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v50|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v49|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD[.]] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v37|DWORD[.], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD[.]] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV [v14|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v21|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v6|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD[.]] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91403|0xfffffffffffe9af5]] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v46|QWORD[.] 
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-58163|0xffffffffffff1ccd]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-12339|0xffffffffffffcfcd]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89123|0xfffffffffffea3dd]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91923|0xfffffffffffe98ed]] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-87563|0xfffffffffffea9f5]] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84019|0xfffffffffffeb7cd]] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-27443|0xffffffffffff94cd]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-78627|0xfffffffffffeccdd]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88339|0xfffffffffffea6ed]] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-72499|0xfffffffffffee4cd]] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46387|0xffffffffffff4acd]] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v12|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZXB v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction CMP [v18|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVZXB [v18|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD[.]] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v30|QWORD[.] 
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v31|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v34|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v33|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD[.], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVZXB v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v46|QWORD[.], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v46|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB [v46|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD[.]] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[.] = MOV [v33|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v59|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction SAFEPOINT v60|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD[.]] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV [v33|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v35|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|DWORD[.], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOV [v42|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v50|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v49|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD[.]] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v37|DWORD[.], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD[.]] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV [v14|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v21|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v6|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD[.]] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91403|0xfffffffffffe9af5]] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v46|QWORD[.] 
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-58163|0xffffffffffff1ccd]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-12339|0xffffffffffffcfcd]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89123|0xfffffffffffea3dd]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91923|0xfffffffffffe98ed]] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-87563|0xfffffffffffea9f5]] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84019|0xfffffffffffeb7cd]] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-27443|0xffffffffffff94cd]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-78627|0xfffffffffffeccdd]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88339|0xfffffffffffea6ed]] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-72499|0xfffffffffffee4cd]] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46387|0xffffffffffff4acd]] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v12|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZXB v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction CMP [v18|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVZXB [v18|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD[.]] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v30|QWORD[.] 
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v31|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v34|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v33|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD[.], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVZXB v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v46|QWORD[.], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v46|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB [v46|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD[.]] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[.] = MOV [v33|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v59|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction SAFEPOINT v60|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD[.]] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV [v33|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v35|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|DWORD[.], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOV [v42|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v50|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v49|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD[.]] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v37|DWORD[.], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD[.]] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV [v14|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v21|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v6|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD[.]] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91403|0xfffffffffffe9af5]] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v46|QWORD[.] 
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-58163|0xffffffffffff1ccd]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-12339|0xffffffffffffcfcd]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89123|0xfffffffffffea3dd]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91923|0xfffffffffffe98ed]] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-87563|0xfffffffffffea9f5]] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84019|0xfffffffffffeb7cd]] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-27443|0xffffffffffff94cd]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-78627|0xfffffffffffeccdd]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88339|0xfffffffffffea6ed]] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-72499|0xfffffffffffee4cd]] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46387|0xffffffffffff4acd]] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   12  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   14  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   16  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction v9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   38  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   40  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   42  <|@ instruction CMP (x: v11|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction v12|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v12|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   52  <|@ instruction v13|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction v14|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction v16|DWORD = MOVZXB v13|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   68  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction CMP [v18|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction v19|DWORD = MOVZXB [v18|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction CMP (x: v19|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   86  <|@ instruction JUMP ~[v65|QWORD[.]] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr  172  <|@ instruction [v30|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  174  <|@ instruction v31|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v30|QWORD[.] 
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v31|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  178  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  194  <|@ instruction CMP v34|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction v37|DWORD[.] = MOV [v33|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  202  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction v39|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr  206  <|@ instruction CMP (x: v39|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction v40|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  214  <|@ instruction TEST (x: v40|DWORD[.], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction v41|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  222  <|@ instruction v42|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  224  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction v44|DWORD = MOVZXB v41|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr  236  <|@ instruction v46|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TEST (x: v46|QWORD[.], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction CMP [v46|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction v47|DWORD = MOVZXB [v46|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction v64|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr  260  <|@ instruction JUMP ~[v64|QWORD[.]] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  356  <|@ instruction [v58|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  358  <|@ instruction v59|DWORD[.] = MOV [v33|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  360  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v59|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction SAFEPOINT v60|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr  364  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  366  <|@ instruction JUMP ~[v61|QWORD[.]] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr  182  <|@ instruction [v33|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  184  <|@ instruction v34|DWORD = MOV [v33|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  186  <|@ instruction v36|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  188  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  190  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v35|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  270  <|@ instruction v57|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction JUMP ~[v57|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction TEST (x: v42|DWORD[.], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction v48|DWORD = MOV [v42|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  284  <|@ instruction v50|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  286  <|@ instruction v49|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v50|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  288  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v49|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  298  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~[v51|QWORD[.]] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction TEST (x: v37|DWORD[.], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  316  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  328  <|@ instruction v53|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  340  <|@ instruction v54|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  352  <|@ instruction v55|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[v55|QWORD[.]] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   96  <|@ instruction v29|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV [v14|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr  104  <|@ instruction v22|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  106  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  108  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v21|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  118  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v6|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr  126  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  132  <|@ instruction v24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  144  <|@ instruction v25|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[v25|QWORD[.]] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  156  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  168  <|@ instruction v27|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction JUMP ~[int[-91403|0xfffffffffffe9af5]] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  428  <|@ instruction [v56|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v56|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v46|QWORD[.] 
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~[int[-58163|0xffffffffffff1ccd]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  416  <|@ instruction [v28|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v28|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  422  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction JUMP ~[int[-12339|0xffffffffffffcfcd]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  404  <|@ instruction [v62|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v62|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[int[-89123|0xfffffffffffea3dd]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~[int[-91923|0xfffffffffffe98ed]] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction JUMP ~[int[-87563|0xfffffffffffea9f5]] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction JUMP ~[int[-84019|0xfffffffffffeb7cd]] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[int[-27443|0xffffffffffff94cd]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~[int[-78627|0xfffffffffffeccdd]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction JUMP ~[int[-88339|0xfffffffffffea6ed]] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction JUMP ~[int[-72499|0xfffffffffffee4cd]] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  444  <|@ instruction [v63|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v63|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[int[-46387|0xffffffffffff4acd]] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   12  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   14  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   16  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction v9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   38  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   40  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   42  <|@ instruction CMP (x: v11|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction v12|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v12|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   52  <|@ instruction v13|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction v14|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction v16|DWORD = MOVZXB v13|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   68  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction CMP [v18|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction v19|DWORD = MOVZXB [v18|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction CMP (x: v19|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   86  <|@ instruction JUMP ~[v65|QWORD[.]] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr  172  <|@ instruction [v30|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  174  <|@ instruction v31|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v30|QWORD[.] 
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v31|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  178  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  194  <|@ instruction CMP v34|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction v37|DWORD[.] = MOV [v33|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  202  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction v39|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr  206  <|@ instruction CMP (x: v39|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction v40|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  214  <|@ instruction TEST (x: v40|DWORD[.], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction v41|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  222  <|@ instruction v42|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  224  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction v44|DWORD = MOVZXB v41|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr  236  <|@ instruction v46|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TEST (x: v46|QWORD[.], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction CMP [v46|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction v47|DWORD = MOVZXB [v46|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction v64|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr  260  <|@ instruction JUMP ~[v64|QWORD[.]] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  356  <|@ instruction [v58|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  358  <|@ instruction v59|DWORD[.] = MOV [v33|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  360  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v59|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction SAFEPOINT v60|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr  364  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  366  <|@ instruction JUMP ~[v61|QWORD[.]] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr  182  <|@ instruction [v33|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  184  <|@ instruction v34|DWORD = MOV [v33|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  186  <|@ instruction v36|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  188  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  190  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v35|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  270  <|@ instruction v57|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction JUMP ~[v57|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction TEST (x: v42|DWORD[.], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction v48|DWORD = MOV [v42|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  284  <|@ instruction v50|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  286  <|@ instruction v49|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v50|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  288  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v49|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  298  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~[v51|QWORD[.]] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction TEST (x: v37|DWORD[.], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  316  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  328  <|@ instruction v53|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  340  <|@ instruction v54|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  352  <|@ instruction v55|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[v55|QWORD[.]] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   96  <|@ instruction v29|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV [v14|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr  104  <|@ instruction v22|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  106  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  108  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v21|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  118  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v6|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr  126  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  132  <|@ instruction v24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  144  <|@ instruction v25|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[v25|QWORD[.]] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  156  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  168  <|@ instruction v27|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction JUMP ~[int[-91403|0xfffffffffffe9af5]] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  428  <|@ instruction [v56|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v56|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v46|QWORD[.] 
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~[int[-58163|0xffffffffffff1ccd]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  416  <|@ instruction [v28|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v28|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  422  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction JUMP ~[int[-12339|0xffffffffffffcfcd]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  404  <|@ instruction [v62|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v62|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[int[-89123|0xfffffffffffea3dd]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~[int[-91923|0xfffffffffffe98ed]] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction JUMP ~[int[-87563|0xfffffffffffea9f5]] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction JUMP ~[int[-84019|0xfffffffffffeb7cd]] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[int[-27443|0xffffffffffff94cd]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~[int[-78627|0xfffffffffffeccdd]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction JUMP ~[int[-88339|0xfffffffffffea6ed]] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction JUMP ~[int[-72499|0xfffffffffffee4cd]] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  444  <|@ instruction [v63|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v63|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[int[-46387|0xffffffffffff4acd]] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[66, 68[[94, 96[[116, 118[[130, 132[[142, 144[[154, 156[[166, 168[[234, 236[[268, 270[[296, 298[[314, 316[[326, 328[[338, 340[[350, 352[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- v7|q [0, 8[[64, 67[[92, 95[[114, 117[[128, 131[[140, 143[[152, 155[[164, 167[[232, 235[[266, 269[[294, 297[[312, 315[[324, 327[[336, 339[[348, 351[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v15|q [0, 6[[62, 67[[90, 95[[112, 117[[126, 131[[138, 143[[150, 155[[162, 167[[230, 235[[264, 269[[292, 297[[310, 315[[322, 327[[334, 339[[346, 351[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [6, 18[[22, 177[[384, 388[[412, 423[[436, 451[6 MustHaveRegister 10 MustHaveRegister 32 MustHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [8, 18[[22, 368[[372, 411[[412, 423[[424, 435[[436, 451[8 MustHaveRegister 30 MustHaveRegister 48 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 90 ShouldHaveRegister 212 MustHaveRegister 220 MustHaveRegister 222 MustHaveRegister 264 ShouldHaveRegister 367 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [10, 18[[22, 24[10 MustHaveRegister 14 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q v2|d [14, 17[14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [12, 15[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [30, 38[30 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [32, 82[[100, 110[[122, 124[32 MustHaveRegister 34 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v6|d [34, 82[[88, 92[[100, 114[[122, 131[[136, 140[[148, 152[[160, 164[[384, 388[[412, 423[34 MustHaveRegister 64 ShouldHaveRegister 92 ShouldHaveRegister 114 ShouldHaveRegister 128 ShouldHaveRegister 140 ShouldHaveRegister 152 ShouldHaveRegister 164 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v5|d [38, 368[38 MustHaveRegister 42 ShouldHaveRegister 206 ShouldHaveRegister 367 LiveAtLoopEnd  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [36, 39[36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [40, 42[40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [48, 56[48 MustHaveRegister 50 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [52, 58[52 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [54, 82[[100, 102[54 MustHaveRegister 60 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q v12|d [56, 62[56 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [58, 82[[100, 110[[122, 125[[384, 388[[412, 423[58 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v14|d [60, 82[[100, 112[[122, 135[[136, 138[[148, 150[[160, 162[[384, 388[[412, 423[60 MustHaveRegister 112 ShouldHaveRegister 126 ShouldHaveRegister 134 ShouldHaveRegister 138 ShouldHaveRegister 150 ShouldHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q rax|q [68, 82[[100, 110[[122, 125[[384, 388[[412, 423[68 MustHaveRegister 70 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d -1 [102, 106[102 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q v20|d [106, 109[106 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q -1 [104, 107[104 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q rax|q [118, 121[118 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d rax|q [132, 133[132 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q rax|q [144, 147[144 MustHaveRegister 146 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q rax|q [156, 159[156 MustHaveRegister 158 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q rax|q [168, 171[168 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d -1 [416, 418[418 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q rax|q [96, 99[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v65|q [172, 177[ "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [174, 178[174 MustHaveRegister 176 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v31|d [178, 181[178 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q v61|q [182, 363[[372, 384[[388, 411[[424, 435[184 MustHaveRegister 200 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [184, 194[184 MustHaveRegister 188 MustHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v34|d [188, 191[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q -1 [186, 189[186 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d -1 [200, 256[[274, 290[[302, 304[200 MustHaveRegister 202 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q v37|d [202, 256[[262, 266[[274, 294[[302, 315[[320, 324[[332, 336[[344, 348[[372, 376[[380, 384[[388, 396[[424, 435[202 MustHaveRegister 232 ShouldHaveRegister 266 ShouldHaveRegister 294 ShouldHaveRegister 312 ShouldHaveRegister 324 ShouldHaveRegister 336 ShouldHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q -1 [204, 206[204 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d -1 [212, 224[212 MustHaveRegister 214 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d -1 [220, 226[220 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [222, 256[[274, 282[222 MustHaveRegister 228 MustHaveRegister 276 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v40|d [224, 230[224 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d -1 [226, 256[[274, 290[[302, 308[[372, 376[[380, 384[[388, 396[[424, 435[226 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q v42|d [228, 256[[274, 292[[302, 319[[320, 322[[332, 334[[344, 346[[372, 376[[380, 384[[388, 396[[424, 435[228 MustHaveRegister 292 ShouldHaveRegister 310 ShouldHaveRegister 318 ShouldHaveRegister 322 ShouldHaveRegister 334 ShouldHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q rax|q [236, 256[[274, 290[[302, 308[[372, 376[[380, 384[[388, 396[[424, 435[236 MustHaveRegister 238 MustHaveRegister 244 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d -1 [250, 252[250 MustHaveRegister 252 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d -1 [282, 286[282 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q v48|d [286, 289[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q -1 [284, 287[284 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q rax|q [298, 301[298 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d rax|q [316, 317[316 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q rax|q [328, 331[328 MustHaveRegister 330 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q rax|q [340, 343[340 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q rax|q [352, 355[352 MustHaveRegister 354 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d -1 [428, 430[430 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q rax|q [270, 273[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q v64|q [356, 363[ "NoSpillStore"
  v59|d DWORD "[v59|d]" v59|d -1 [358, 364[358 MustHaveRegister 360 MustHaveRegister 364 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q -1 [362, 363[362 MustHaveRegister  "NoDefinitionFound"
  v61|q QWORD "[v61|q]" v61|q v59|d [364, 367[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[v62|d]" v62|d -1 [404, 406[406 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[v63|d]" v63|d -1 [444, 446[446 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q v58|q [258, 261[258 MustHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q v30|q [84, 87[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[66, 68[[94, 96[[116, 118[[130, 132[[142, 144[[154, 156[[166, 168[[234, 236[[268, 270[[296, 298[[314, 316[[326, 328[[338, 340[[350, 352[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- v7|q [0, 8[[64, 67[[92, 95[[114, 117[[128, 131[[140, 143[[152, 155[[164, 167[[232, 235[[266, 269[[294, 297[[312, 315[[324, 327[[336, 339[[348, 351[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v15|q [0, 6[[62, 67[[90, 95[[112, 117[[126, 131[[138, 143[[150, 155[[162, 167[[230, 235[[264, 269[[292, 297[[310, 315[[322, 327[[334, 339[[346, 351[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 18[[22, 46[6 MustHaveRegister 10 MustHaveRegister 32 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [8, 18[[22, 63[8 MustHaveRegister 30 MustHaveRegister 48 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister  "SpillInDominator"
  v2|d DWORD "[r10|d]" v2|d -1 [10, 18[[22, 24[10 MustHaveRegister 14 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q v2|d [14, 17[14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q -1 [12, 15[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d -1 [30, 38[30 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d -1 [32, 46[32 MustHaveRegister 34 MustHaveRegister  "OneSpillStore"
  v7|q QWORD "[r8|q]" v7|q v6|d [34, 65[34 MustHaveRegister 64 ShouldHaveRegister  "OneSpillStore"
  v8|q QWORD "[r10|q]" v8|q v5|d [38, 46[38 MustHaveRegister 42 ShouldHaveRegister  "SpillInDominator"
  v9|q QWORD "[r9|q]" v9|q -1 [36, 39[36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[r9|q]" v11|q -1 [40, 42[40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r9|d]" v12|d -1 [48, 56[48 MustHaveRegister 50 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rcx|d]" v13|d -1 [52, 58[52 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbx|d]" v14|d -1 [54, 65[54 MustHaveRegister 60 MustHaveRegister  "OneSpillStore"
  v15|q QWORD "[r9|q]" v15|q v12|d [56, 62[56 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rcx|d]" v16|d -1 [58, 65[58 MustHaveRegister  "OneSpillStore"
  v17|q QWORD "[rdi|q]" v17|q v14|d [60, 65[60 MustHaveRegister  "OneSpillStore"
  v18|q QWORD "[rax|q]" v18|q rax|q [68, 82[[100, 110[[122, 125[[384, 388[[412, 423[68 MustHaveRegister 70 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rsi|d]" v19|d -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rsi|d]" v20|d -1 [102, 106[102 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rsi|q]" v21|q v20|d [106, 109[106 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdx|q]" v22|q -1 [104, 107[104 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rax|q]" v23|q rax|q [118, 121[118 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rax|d]" v24|d rax|q [132, 133[132 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rax|q]" v25|q rax|q [144, 147[144 MustHaveRegister 146 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q rax|q [156, 159[156 MustHaveRegister 158 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q rax|q [168, 171[168 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r10|d]" v28|d -1 [416, 418[418 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q rax|q [96, 99[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rdx|q]" v30|q v65|q [172, 177[ "NoSpillStore"
  v31|d DWORD "[r10|d]" v31|d -1 [174, 178[174 MustHaveRegister 176 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[r10|q]" v32|q v31|d [178, 181[178 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[r10|q]" v33|q v61|q [182, 218[184 MustHaveRegister 200 MustHaveRegister  "OneSpillStore"
  v34|d DWORD "[rsi|d]" v34|d -1 [184, 194[184 MustHaveRegister 188 MustHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[r9|q]" v35|q v34|d [188, 191[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[r8|q]" v36|q -1 [186, 189[186 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[r8|d]" v37|d -1 [200, 218[200 MustHaveRegister 202 MustHaveRegister  "OneSpillStore"
  v38|q QWORD "[r9|q]" v38|q v37|d [202, 233[202 MustHaveRegister 232 ShouldHaveRegister  "OneSpillStore"
  v39|q QWORD "[rsi|q]" v39|q -1 [204, 206[204 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rsi|d]" v40|d -1 [212, 224[212 MustHaveRegister 214 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rcx|d]" v41|d -1 [220, 226[220 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rbx|d]" v42|d -1 [222, 233[222 MustHaveRegister 228 MustHaveRegister  "OneSpillStore"
  v43|q QWORD "[rsi|q]" v43|q v40|d [224, 230[224 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[rcx|d]" v44|d -1 [226, 233[226 MustHaveRegister  "OneSpillStore"
  v45|q QWORD "[rdi|q]" v45|q v42|d [228, 233[228 MustHaveRegister  "OneSpillStore"
  v46|q QWORD "[rax|q]" v46|q rax|q [236, 256[[274, 290[[302, 308[[372, 376[[380, 384[[388, 396[[424, 435[236 MustHaveRegister 238 MustHaveRegister 244 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rsi|d]" v47|d -1 [250, 252[250 MustHaveRegister 252 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rsi|d]" v48|d -1 [282, 286[282 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rsi|q]" v49|q v48|d [286, 289[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rdx|q]" v50|q -1 [284, 287[284 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rax|q]" v51|q rax|q [298, 301[298 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rax|d]" v52|d rax|q [316, 317[316 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rax|q]" v53|q rax|q [328, 331[328 MustHaveRegister 330 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rax|q]" v54|q rax|q [340, 343[340 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rax|q]" v55|q rax|q [352, 355[352 MustHaveRegister 354 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[r11|d]" v56|d -1 [428, 430[430 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rax|q]" v57|q rax|q [270, 273[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q v64|q [356, 363[ "NoSpillStore"
  v59|d DWORD "[r11|d]" v59|d -1 [358, 364[358 MustHaveRegister 360 MustHaveRegister 364 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[r8|q]" v60|q -1 [362, 363[362 MustHaveRegister  "NoDefinitionFound"
  v61|q QWORD "[r11|q]" v61|q v59|d [364, 367[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[r11|d]" v62|d -1 [404, 406[406 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[r10|d]" v63|d -1 [444, 446[446 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q v58|q [258, 261[258 MustHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[rsi|q]" v65|q v30|q [84, 87[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[vstack:6|q]" v0|q v0|q [46, 61[ "OneSpillStore"
  v67|q QWORD "[vstack:1|q]" v1|q v1|q [63, 65[ "SpillInDominator"
  v68|d DWORD "[vstack:5|d]" v6|d v6|d [46, 65[ "OneSpillStore"
  v69|q QWORD "[vstack:2|q]" v7|q v7|q [65, 82[[88, 92[[100, 114[[122, 131[[136, 140[[148, 152[[160, 164[[384, 388[[412, 416[92 ShouldHaveRegister 114 ShouldHaveRegister 128 ShouldHaveRegister 140 ShouldHaveRegister 152 ShouldHaveRegister 164 ShouldHaveRegister  "OneSpillStore"
  v70|q QWORD "[vstack:7|q]" v8|q v8|q [46, 65[ "SpillInDominator"
  v71|d DWORD "[vstack:5|d]" v6|d v6|d [65, 82[[100, 110[ "OneSpillStore"
  v72|q QWORD "[vstack:6|q]" v0|q v0|q [61, 65[ "OneSpillStore"
  v73|q QWORD "[vstack:7|q]" v8|q v8|q [65, 182[ "SpillInDominator"
  v74|d DWORD "[vstack:3|d]" v14|d v14|d [65, 82[ "OneSpillStore"
  v75|d DWORD "[vstack:0|d]" v16|d v16|d [65, 82[[100, 110[[122, 125[[384, 388[[412, 416[78 ShouldHaveRegister  "OneSpillStore"
  v76|q QWORD "[vstack:4|q]" v17|q v17|q [65, 82[[100, 112[[122, 135[[136, 138[[148, 150[[160, 162[[384, 388[[412, 416[112 ShouldHaveRegister 126 ShouldHaveRegister 134 ShouldHaveRegister 138 ShouldHaveRegister 150 ShouldHaveRegister 162 ShouldHaveRegister  "OneSpillStore"
  v77|q QWORD "[vstack:6|q]" v0|q v0|q [65, 172[ "OneSpillStore"
  v78|q QWORD "[vstack:1|q]" v1|q v1|q [65, 182[90 ShouldHaveRegister  "SpillInDominator"
  v79|d DWORD "[rcx|d]" v16|d v16|d [416, 423[ "OneSpillStore"
  v80|q QWORD "[rdx|q]" v1|q v1|q [182, 231[212 MustHaveRegister 220 MustHaveRegister 222 MustHaveRegister  "SpillInDominator"
  v81|q QWORD "[r8|q]" v7|q v7|q [416, 423[ "OneSpillStore"
  v82|d DWORD "[rbx|d]" v14|d v14|d [100, 102[102 MustHaveRegister  "OneSpillStore"
  v83|q QWORD "[rdi|q]" v17|q v17|q [416, 423[ "OneSpillStore"
  v84|d DWORD "[r11|d]" v6|d v6|d [122, 124[124 MustHaveRegister  "OneSpillStore"
  v85|q QWORD "[rsi|q]" v0|q v0|q [172, 177[[384, 388[[412, 423[[436, 451[174 MustHaveRegister  "OneSpillStore"
  v86|q QWORD "[r11|q]" v8|q v8|q [182, 218[206 ShouldHaveRegister  "SpillInDominator"
  v87|q QWORD "[vstack:14|q]" v33|q v33|q [218, 233[ "OneSpillStore"
  v88|q QWORD "[vstack:7|q]" v8|q v8|q [218, 233[ "SpillInDominator"
  v89|q QWORD "[vstack:1|q]" v1|q v1|q [231, 233[ "SpillInDominator"
  v90|d DWORD "[vstack:13|d]" v37|d v37|d [218, 233[ "OneSpillStore"
  v91|q QWORD "[vstack:10|q]" v38|q v38|q [233, 256[[262, 266[[274, 294[[302, 315[[320, 324[[332, 336[[344, 348[[372, 376[[380, 384[[388, 396[[424, 428[266 ShouldHaveRegister 294 ShouldHaveRegister 312 ShouldHaveRegister 324 ShouldHaveRegister 336 ShouldHaveRegister 348 ShouldHaveRegister  "OneSpillStore"
  v92|d DWORD "[vstack:13|d]" v37|d v37|d [233, 256[[274, 290[ "OneSpillStore"
  v93|q QWORD "[vstack:14|q]" v33|q v33|q [233, 356[ "OneSpillStore"
  v94|q QWORD "[vstack:7|q]" v8|q v8|q [233, 368[367 LiveAtLoopEnd  "SpillInDominator"
  v95|d DWORD "[vstack:11|d]" v42|d v42|d [233, 256[ "OneSpillStore"
  v96|d DWORD "[vstack:9|d]" v44|d v44|d [233, 256[[274, 290[[302, 308[[372, 376[[380, 384[[388, 396[[424, 428[252 ShouldHaveRegister  "OneSpillStore"
  v97|q QWORD "[vstack:12|q]" v45|q v45|q [233, 256[[274, 292[[302, 319[[320, 322[[332, 334[[344, 346[[372, 376[[380, 384[[388, 396[[424, 428[292 ShouldHaveRegister 310 ShouldHaveRegister 318 ShouldHaveRegister 322 ShouldHaveRegister 334 ShouldHaveRegister 346 ShouldHaveRegister  "OneSpillStore"
  v98|q QWORD "[vstack:1|q]" v1|q v1|q [233, 368[[372, 411[[412, 423[[424, 435[[436, 444[264 ShouldHaveRegister 367 LiveAtLoopEnd  "SpillInDominator"
  v99|d DWORD "[rcx|d]" v44|d v44|d [428, 435[ "OneSpillStore"
  v100|q QWORD "[rdx|q]" v1|q v1|q [444, 451[ "SpillInDominator"
  v101|q QWORD "[r9|q]" v38|q v38|q [428, 435[ "OneSpillStore"
  v102|d DWORD "[rbx|d]" v42|d v42|d [274, 282[276 MustHaveRegister 282 MustHaveRegister  "OneSpillStore"
  v103|q QWORD "[rdi|q]" v45|q v45|q [428, 435[ "OneSpillStore"
  v104|d DWORD "[r8|d]" v37|d v37|d [302, 304[304 MustHaveRegister  "OneSpillStore"
  v105|q QWORD "[r10|q]" v33|q v33|q [356, 363[[372, 384[[388, 411[[424, 435[358 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   12  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   14  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   16  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction v9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   38  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   40  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   42  <|@ instruction CMP (x: v11|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction v12|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v12|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   52  <|@ instruction v13|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction v14|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction v16|DWORD = MOVZXB v13|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = STACKMOVE v70|QWORD size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = STACKMOVE v72|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[.] = STACKMOVE (input: v68|DWORD[.], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[.] = MOVE v14|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = STACKMOVE v67|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVE v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   68  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction CMP [v18|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction v19|DWORD = MOVZXB [v18|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction CMP (x: v19|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   86  <|@ instruction JUMP ~[v65|QWORD[.]] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr  172  <|@ instruction [v30|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  174  <|@ instruction v31|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v30|QWORD[.] 
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v31|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  178  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  194  <|@ instruction CMP v34|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction v37|DWORD[.] = MOV [v33|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  202  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction v39|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr  206  <|@ instruction CMP (x: v39|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction v40|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  214  <|@ instruction TEST (x: v40|DWORD[.], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction v41|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  222  <|@ instruction v42|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  224  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction v44|DWORD = MOVZXB v41|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = STACKMOVE v88|QWORD size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = STACKMOVE v87|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[.] = STACKMOVE (input: v90|DWORD[.], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[.] = MOVE v42|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = STACKMOVE v89|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE v44|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr  236  <|@ instruction v46|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TEST (x: v46|QWORD[.], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction CMP [v46|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction v47|DWORD = MOVZXB [v46|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction v64|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr  260  <|@ instruction JUMP ~[v64|QWORD[.]] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  356  <|@ instruction [v58|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  358  <|@ instruction v59|DWORD[.] = MOV [v33|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  360  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v59|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction SAFEPOINT v60|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr  364  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  366  <|@ instruction JUMP ~[v61|QWORD[.]] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr  182  <|@ instruction [v33|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  184  <|@ instruction v34|DWORD = MOV [v33|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  186  <|@ instruction v36|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  188  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  190  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v35|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  270  <|@ instruction v57|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction JUMP ~[v57|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction TEST (x: v42|DWORD[.], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction v48|DWORD = MOV [v42|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  284  <|@ instruction v50|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  286  <|@ instruction v49|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v50|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  288  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v49|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  298  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~[v51|QWORD[.]] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction TEST (x: v37|DWORD[.], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  316  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  328  <|@ instruction v53|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  340  <|@ instruction v54|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  352  <|@ instruction v55|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[v55|QWORD[.]] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   96  <|@ instruction v29|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV [v14|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr  104  <|@ instruction v22|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  106  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  108  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v21|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  118  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v6|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr  126  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  132  <|@ instruction v24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  144  <|@ instruction v25|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[v25|QWORD[.]] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  156  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  168  <|@ instruction v27|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction JUMP ~[int[-91403|0xfffffffffffe9af5]] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  428  <|@ instruction [v56|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v56|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v46|QWORD[.] 
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~[int[-58163|0xffffffffffff1ccd]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  416  <|@ instruction [v28|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v28|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  422  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction JUMP ~[int[-12339|0xffffffffffffcfcd]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  404  <|@ instruction [v62|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v62|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[int[-89123|0xfffffffffffea3dd]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~[int[-91923|0xfffffffffffe98ed]] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction JUMP ~[int[-87563|0xfffffffffffea9f5]] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction JUMP ~[int[-84019|0xfffffffffffeb7cd]] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[int[-27443|0xffffffffffff94cd]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~[int[-78627|0xfffffffffffeccdd]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction JUMP ~[int[-88339|0xfffffffffffea6ed]] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction JUMP ~[int[-72499|0xfffffffffffee4cd]] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  444  <|@ instruction [v63|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v63|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[int[-46387|0xffffffffffff4acd]] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[66, 68[[94, 96[[116, 118[[130, 132[[142, 144[[154, 156[[166, 168[[234, 236[[268, 270[[296, 298[[314, 316[[326, 328[[338, 340[[350, 352[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- v7|q [0, 8[[64, 67[[92, 95[[114, 117[[128, 131[[140, 143[[152, 155[[164, 167[[232, 235[[266, 269[[294, 297[[312, 315[[324, 327[[336, 339[[348, 351[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v15|q [0, 6[[62, 67[[90, 95[[112, 117[[126, 131[[138, 143[[150, 155[[162, 167[[230, 235[[264, 269[[292, 297[[310, 315[[322, 327[[334, 339[[346, 351[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 18[[22, 46[6 MustHaveRegister 10 MustHaveRegister 32 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [8, 18[[22, 63[8 MustHaveRegister 30 MustHaveRegister 48 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[r10|d]" v2|d -1 [10, 18[[22, 24[10 MustHaveRegister 14 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q v2|d [14, 17[14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q -1 [12, 15[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d -1 [30, 38[30 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d -1 [32, 46[32 MustHaveRegister 34 MustHaveRegister  "OneSpillStore"
  v7|q QWORD "[r8|q]" v7|q v6|d [34, 65[34 MustHaveRegister 64 ShouldHaveRegister  "OneSpillStore"
  v8|q QWORD "[r10|q]" v8|q v5|d [38, 46[38 MustHaveRegister 42 ShouldHaveRegister  "StoreAtDefinition"
  v9|q QWORD "[r9|q]" v9|q -1 [36, 39[36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[r9|q]" v11|q -1 [40, 42[40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r9|d]" v12|d -1 [48, 56[48 MustHaveRegister 50 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rcx|d]" v13|d -1 [52, 58[52 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbx|d]" v14|d -1 [54, 65[54 MustHaveRegister 60 MustHaveRegister  "OneSpillStore"
  v15|q QWORD "[r9|q]" v15|q v12|d [56, 62[56 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rcx|d]" v16|d -1 [58, 65[58 MustHaveRegister  "OneSpillStore"
  v17|q QWORD "[rdi|q]" v17|q v14|d [60, 65[60 MustHaveRegister  "OneSpillStore"
  v18|q QWORD "[rax|q]" v18|q rax|q [68, 82[[100, 110[[122, 125[[384, 388[[412, 423[68 MustHaveRegister 70 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rsi|d]" v19|d -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rsi|d]" v20|d -1 [102, 106[102 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rsi|q]" v21|q v20|d [106, 109[106 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdx|q]" v22|q -1 [104, 107[104 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rax|q]" v23|q rax|q [118, 121[118 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rax|d]" v24|d rax|q [132, 133[132 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rax|q]" v25|q rax|q [144, 147[144 MustHaveRegister 146 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q rax|q [156, 159[156 MustHaveRegister 158 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q rax|q [168, 171[168 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r10|d]" v28|d -1 [416, 418[418 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q rax|q [96, 99[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rdx|q]" v30|q v65|q [172, 177[ "NoSpillStore"
  v31|d DWORD "[r10|d]" v31|d -1 [174, 178[174 MustHaveRegister 176 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[r10|q]" v32|q v31|d [178, 181[178 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[r10|q]" v33|q v61|q [182, 218[184 MustHaveRegister 200 MustHaveRegister  "OneSpillStore"
  v34|d DWORD "[rsi|d]" v34|d -1 [184, 194[184 MustHaveRegister 188 MustHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[r9|q]" v35|q v34|d [188, 191[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[r8|q]" v36|q -1 [186, 189[186 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[r8|d]" v37|d -1 [200, 218[200 MustHaveRegister 202 MustHaveRegister  "OneSpillStore"
  v38|q QWORD "[r9|q]" v38|q v37|d [202, 233[202 MustHaveRegister 232 ShouldHaveRegister  "OneSpillStore"
  v39|q QWORD "[rsi|q]" v39|q -1 [204, 206[204 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rsi|d]" v40|d -1 [212, 224[212 MustHaveRegister 214 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rcx|d]" v41|d -1 [220, 226[220 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rbx|d]" v42|d -1 [222, 233[222 MustHaveRegister 228 MustHaveRegister  "OneSpillStore"
  v43|q QWORD "[rsi|q]" v43|q v40|d [224, 230[224 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[rcx|d]" v44|d -1 [226, 233[226 MustHaveRegister  "OneSpillStore"
  v45|q QWORD "[rdi|q]" v45|q v42|d [228, 233[228 MustHaveRegister  "OneSpillStore"
  v46|q QWORD "[rax|q]" v46|q rax|q [236, 256[[274, 290[[302, 308[[372, 376[[380, 384[[388, 396[[424, 435[236 MustHaveRegister 238 MustHaveRegister 244 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rsi|d]" v47|d -1 [250, 252[250 MustHaveRegister 252 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rsi|d]" v48|d -1 [282, 286[282 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rsi|q]" v49|q v48|d [286, 289[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rdx|q]" v50|q -1 [284, 287[284 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rax|q]" v51|q rax|q [298, 301[298 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rax|d]" v52|d rax|q [316, 317[316 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rax|q]" v53|q rax|q [328, 331[328 MustHaveRegister 330 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rax|q]" v54|q rax|q [340, 343[340 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rax|q]" v55|q rax|q [352, 355[352 MustHaveRegister 354 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[r11|d]" v56|d -1 [428, 430[430 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rax|q]" v57|q rax|q [270, 273[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q v64|q [356, 363[ "NoSpillStore"
  v59|d DWORD "[r11|d]" v59|d -1 [358, 364[358 MustHaveRegister 360 MustHaveRegister 364 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[r8|q]" v60|q -1 [362, 363[362 MustHaveRegister  "NoDefinitionFound"
  v61|q QWORD "[r11|q]" v61|q v59|d [364, 367[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[r11|d]" v62|d -1 [404, 406[406 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[r10|d]" v63|d -1 [444, 446[446 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q v58|q [258, 261[258 MustHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[rsi|q]" v65|q v30|q [84, 87[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[vstack:6|q]" v0|q v0|q [46, 61[ "OneSpillStore"
  v67|q QWORD "[vstack:1|q]" v1|q v1|q [63, 65[ "StoreAtDefinition"
  v68|d DWORD "[vstack:5|d]" v6|d v6|d [46, 65[ "OneSpillStore"
  v69|q QWORD "[vstack:2|q]" v7|q v7|q [65, 82[[88, 92[[100, 114[[122, 131[[136, 140[[148, 152[[160, 164[[384, 388[[412, 416[92 ShouldHaveRegister 114 ShouldHaveRegister 128 ShouldHaveRegister 140 ShouldHaveRegister 152 ShouldHaveRegister 164 ShouldHaveRegister  "OneSpillStore"
  v70|q QWORD "[vstack:7|q]" v8|q v8|q [46, 65[ "StoreAtDefinition"
  v71|d DWORD "[vstack:5|d]" v6|d v6|d [65, 82[[100, 110[ "OneSpillStore"
  v72|q QWORD "[vstack:6|q]" v0|q v0|q [61, 65[ "OneSpillStore"
  v73|q QWORD "[vstack:7|q]" v8|q v8|q [65, 182[ "StoreAtDefinition"
  v74|d DWORD "[vstack:3|d]" v14|d v14|d [65, 82[ "OneSpillStore"
  v75|d DWORD "[vstack:0|d]" v16|d v16|d [65, 82[[100, 110[[122, 125[[384, 388[[412, 416[78 ShouldHaveRegister  "OneSpillStore"
  v76|q QWORD "[vstack:4|q]" v17|q v17|q [65, 82[[100, 112[[122, 135[[136, 138[[148, 150[[160, 162[[384, 388[[412, 416[112 ShouldHaveRegister 126 ShouldHaveRegister 134 ShouldHaveRegister 138 ShouldHaveRegister 150 ShouldHaveRegister 162 ShouldHaveRegister  "OneSpillStore"
  v77|q QWORD "[vstack:6|q]" v0|q v0|q [65, 172[ "OneSpillStore"
  v78|q QWORD "[vstack:1|q]" v1|q v1|q [65, 182[90 ShouldHaveRegister  "StoreAtDefinition"
  v79|d DWORD "[rcx|d]" v16|d v16|d [416, 423[ "OneSpillStore"
  v80|q QWORD "[rdx|q]" v1|q v1|q [182, 231[212 MustHaveRegister 220 MustHaveRegister 222 MustHaveRegister  "StoreAtDefinition"
  v81|q QWORD "[r8|q]" v7|q v7|q [416, 423[ "OneSpillStore"
  v82|d DWORD "[rbx|d]" v14|d v14|d [100, 102[102 MustHaveRegister  "OneSpillStore"
  v83|q QWORD "[rdi|q]" v17|q v17|q [416, 423[ "OneSpillStore"
  v84|d DWORD "[r11|d]" v6|d v6|d [122, 124[124 MustHaveRegister  "OneSpillStore"
  v85|q QWORD "[rsi|q]" v0|q v0|q [172, 177[[384, 388[[412, 423[[436, 451[174 MustHaveRegister  "OneSpillStore"
  v86|q QWORD "[r11|q]" v8|q v8|q [182, 218[206 ShouldHaveRegister  "StoreAtDefinition"
  v87|q QWORD "[vstack:14|q]" v33|q v33|q [218, 233[ "OneSpillStore"
  v88|q QWORD "[vstack:7|q]" v8|q v8|q [218, 233[ "StoreAtDefinition"
  v89|q QWORD "[vstack:1|q]" v1|q v1|q [231, 233[ "StoreAtDefinition"
  v90|d DWORD "[vstack:13|d]" v37|d v37|d [218, 233[ "OneSpillStore"
  v91|q QWORD "[vstack:10|q]" v38|q v38|q [233, 256[[262, 266[[274, 294[[302, 315[[320, 324[[332, 336[[344, 348[[372, 376[[380, 384[[388, 396[[424, 428[266 ShouldHaveRegister 294 ShouldHaveRegister 312 ShouldHaveRegister 324 ShouldHaveRegister 336 ShouldHaveRegister 348 ShouldHaveRegister  "OneSpillStore"
  v92|d DWORD "[vstack:13|d]" v37|d v37|d [233, 256[[274, 290[ "OneSpillStore"
  v93|q QWORD "[vstack:14|q]" v33|q v33|q [233, 356[ "OneSpillStore"
  v94|q QWORD "[vstack:7|q]" v8|q v8|q [233, 368[367 LiveAtLoopEnd  "StoreAtDefinition"
  v95|d DWORD "[vstack:11|d]" v42|d v42|d [233, 256[ "OneSpillStore"
  v96|d DWORD "[vstack:9|d]" v44|d v44|d [233, 256[[274, 290[[302, 308[[372, 376[[380, 384[[388, 396[[424, 428[252 ShouldHaveRegister  "OneSpillStore"
  v97|q QWORD "[vstack:12|q]" v45|q v45|q [233, 256[[274, 292[[302, 319[[320, 322[[332, 334[[344, 346[[372, 376[[380, 384[[388, 396[[424, 428[292 ShouldHaveRegister 310 ShouldHaveRegister 318 ShouldHaveRegister 322 ShouldHaveRegister 334 ShouldHaveRegister 346 ShouldHaveRegister  "OneSpillStore"
  v98|q QWORD "[vstack:1|q]" v1|q v1|q [233, 368[[372, 411[[412, 423[[424, 435[[436, 444[264 ShouldHaveRegister 367 LiveAtLoopEnd  "StoreAtDefinition"
  v99|d DWORD "[rcx|d]" v44|d v44|d [428, 435[ "OneSpillStore"
  v100|q QWORD "[rdx|q]" v1|q v1|q [444, 451[ "StoreAtDefinition"
  v101|q QWORD "[r9|q]" v38|q v38|q [428, 435[ "OneSpillStore"
  v102|d DWORD "[rbx|d]" v42|d v42|d [274, 282[276 MustHaveRegister 282 MustHaveRegister  "OneSpillStore"
  v103|q QWORD "[rdi|q]" v45|q v45|q [428, 435[ "OneSpillStore"
  v104|d DWORD "[r8|d]" v37|d v37|d [302, 304[304 MustHaveRegister  "OneSpillStore"
  v105|q QWORD "[r10|q]" v33|q v33|q [356, 363[[372, 384[[388, 411[[424, 435[358 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   12  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   14  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   16  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction v9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   38  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   40  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   42  <|@ instruction CMP (x: v11|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction v12|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v12|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   52  <|@ instruction v13|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction v14|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction v16|DWORD = MOVZXB v13|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = STACKMOVE v70|QWORD size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = STACKMOVE v72|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[.] = STACKMOVE (input: v68|DWORD[.], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[.] = MOVE v14|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = STACKMOVE v67|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVE v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   68  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction CMP [v18|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction v19|DWORD = MOVZXB [v18|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction CMP (x: v19|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   86  <|@ instruction JUMP ~[v65|QWORD[.]] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr  172  <|@ instruction [v30|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  174  <|@ instruction v31|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v30|QWORD[.] 
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v31|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  178  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  194  <|@ instruction CMP v34|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction v37|DWORD[.] = MOV [v33|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  202  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction v39|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr  206  <|@ instruction CMP (x: v39|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction v40|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  214  <|@ instruction TEST (x: v40|DWORD[.], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction v41|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  222  <|@ instruction v42|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  224  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction v44|DWORD = MOVZXB v41|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = STACKMOVE v88|QWORD size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = STACKMOVE v87|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[.] = STACKMOVE (input: v90|DWORD[.], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[.] = MOVE v42|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = STACKMOVE v89|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE v44|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr  236  <|@ instruction v46|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TEST (x: v46|QWORD[.], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction CMP [v46|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction v47|DWORD = MOVZXB [v46|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction v64|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr  260  <|@ instruction JUMP ~[v64|QWORD[.]] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  356  <|@ instruction [v58|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  358  <|@ instruction v59|DWORD[.] = MOV [v33|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  360  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v59|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction SAFEPOINT v60|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr  364  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  366  <|@ instruction JUMP ~[v61|QWORD[.]] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr  182  <|@ instruction [v33|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  184  <|@ instruction v34|DWORD = MOV [v33|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  186  <|@ instruction v36|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  188  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  190  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v35|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  270  <|@ instruction v57|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction JUMP ~[v57|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction TEST (x: v42|DWORD[.], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction v48|DWORD = MOV [v42|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  284  <|@ instruction v50|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  286  <|@ instruction v49|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v50|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  288  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v49|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  298  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~[v51|QWORD[.]] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction TEST (x: v37|DWORD[.], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  316  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  328  <|@ instruction v53|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  340  <|@ instruction v54|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  352  <|@ instruction v55|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[v55|QWORD[.]] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   96  <|@ instruction v29|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV [v14|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr  104  <|@ instruction v22|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  106  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  108  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v21|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  118  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v6|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr  126  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  132  <|@ instruction v24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  144  <|@ instruction v25|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[v25|QWORD[.]] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  156  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  168  <|@ instruction v27|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction JUMP ~[int[-91403|0xfffffffffffe9af5]] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  428  <|@ instruction [v56|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v56|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v46|QWORD[.] 
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~[int[-58163|0xffffffffffff1ccd]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  416  <|@ instruction [v28|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v28|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  422  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction JUMP ~[int[-12339|0xffffffffffffcfcd]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  404  <|@ instruction [v62|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v62|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction JUMP ~[int[-89123|0xfffffffffffea3dd]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~[int[-91923|0xfffffffffffe98ed]] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction JUMP ~[int[-87563|0xfffffffffffea9f5]] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction JUMP ~[int[-84019|0xfffffffffffeb7cd]] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[int[-27443|0xffffffffffff94cd]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~[int[-78627|0xfffffffffffeccdd]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction JUMP ~[int[-88339|0xfffffffffffea6ed]] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction JUMP ~[int[-72499|0xfffffffffffee4cd]] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  444  <|@ instruction [v63|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v63|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[int[-46387|0xffffffffffff4acd]] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[66, 68[[94, 96[[116, 118[[130, 132[[142, 144[[154, 156[[166, 168[[234, 236[[268, 270[[296, 298[[314, 316[[326, 328[[338, 340[[350, 352[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- v7|q [0, 8[[64, 67[[92, 95[[114, 117[[128, 131[[140, 143[[152, 155[[164, 167[[232, 235[[266, 269[[294, 297[[312, 315[[324, 327[[336, 339[[348, 351[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v15|q [0, 6[[62, 67[[90, 95[[112, 117[[126, 131[[138, 143[[150, 155[[162, 167[[230, 235[[264, 269[[292, 297[[310, 315[[322, 327[[334, 339[[346, 351[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[66, 67[[94, 95[[116, 117[[130, 131[[142, 143[[154, 155[[166, 167[[234, 235[[268, 269[[296, 297[[314, 315[[326, 327[[338, 339[[350, 351[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 18[[22, 46[6 MustHaveRegister 10 MustHaveRegister 32 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [8, 18[[22, 63[8 MustHaveRegister 30 MustHaveRegister 48 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[r10|d]" v2|d -1 [10, 18[[22, 24[10 MustHaveRegister 14 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q v2|d [14, 17[14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q -1 [12, 15[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d -1 [30, 38[30 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d -1 [32, 46[32 MustHaveRegister 34 MustHaveRegister  "OneSpillStore"
  v7|q QWORD "[r8|q]" v7|q v6|d [34, 65[34 MustHaveRegister 64 ShouldHaveRegister  "OneSpillStore"
  v8|q QWORD "[r10|q]" v8|q v5|d [38, 46[38 MustHaveRegister 42 ShouldHaveRegister  "StoreAtDefinition"
  v9|q QWORD "[r9|q]" v9|q -1 [36, 39[36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[r9|q]" v11|q -1 [40, 42[40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r9|d]" v12|d -1 [48, 56[48 MustHaveRegister 50 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rcx|d]" v13|d -1 [52, 58[52 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbx|d]" v14|d -1 [54, 65[54 MustHaveRegister 60 MustHaveRegister  "OneSpillStore"
  v15|q QWORD "[r9|q]" v15|q v12|d [56, 62[56 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rcx|d]" v16|d -1 [58, 65[58 MustHaveRegister  "OneSpillStore"
  v17|q QWORD "[rdi|q]" v17|q v14|d [60, 65[60 MustHaveRegister  "OneSpillStore"
  v18|q QWORD "[rax|q]" v18|q rax|q [68, 82[[100, 110[[122, 125[[384, 388[[412, 423[68 MustHaveRegister 70 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rsi|d]" v19|d -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rsi|d]" v20|d -1 [102, 106[102 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rsi|q]" v21|q v20|d [106, 109[106 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdx|q]" v22|q -1 [104, 107[104 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rax|q]" v23|q rax|q [118, 121[118 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rax|d]" v24|d rax|q [132, 133[132 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rax|q]" v25|q rax|q [144, 147[144 MustHaveRegister 146 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q rax|q [156, 159[156 MustHaveRegister 158 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q rax|q [168, 171[168 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r10|d]" v28|d -1 [416, 418[418 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q rax|q [96, 99[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rdx|q]" v30|q v65|q [172, 177[ "NoSpillStore"
  v31|d DWORD "[r10|d]" v31|d -1 [174, 178[174 MustHaveRegister 176 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[r10|q]" v32|q v31|d [178, 181[178 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[r10|q]" v33|q v61|q [182, 218[184 MustHaveRegister 200 MustHaveRegister  "OneSpillStore"
  v34|d DWORD "[rsi|d]" v34|d -1 [184, 194[184 MustHaveRegister 188 MustHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[r9|q]" v35|q v34|d [188, 191[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[r8|q]" v36|q -1 [186, 189[186 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[r8|d]" v37|d -1 [200, 218[200 MustHaveRegister 202 MustHaveRegister  "OneSpillStore"
  v38|q QWORD "[r9|q]" v38|q v37|d [202, 233[202 MustHaveRegister 232 ShouldHaveRegister  "OneSpillStore"
  v39|q QWORD "[rsi|q]" v39|q -1 [204, 206[204 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rsi|d]" v40|d -1 [212, 224[212 MustHaveRegister 214 MustHaveRegister 224 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rcx|d]" v41|d -1 [220, 226[220 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rbx|d]" v42|d -1 [222, 233[222 MustHaveRegister 228 MustHaveRegister  "OneSpillStore"
  v43|q QWORD "[rsi|q]" v43|q v40|d [224, 230[224 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[rcx|d]" v44|d -1 [226, 233[226 MustHaveRegister  "OneSpillStore"
  v45|q QWORD "[rdi|q]" v45|q v42|d [228, 233[228 MustHaveRegister  "OneSpillStore"
  v46|q QWORD "[rax|q]" v46|q rax|q [236, 256[[274, 290[[302, 308[[372, 376[[380, 384[[388, 396[[424, 435[236 MustHaveRegister 238 MustHaveRegister 244 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rsi|d]" v47|d -1 [250, 252[250 MustHaveRegister 252 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rsi|d]" v48|d -1 [282, 286[282 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rsi|q]" v49|q v48|d [286, 289[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rdx|q]" v50|q -1 [284, 287[284 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rax|q]" v51|q rax|q [298, 301[298 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rax|d]" v52|d rax|q [316, 317[316 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rax|q]" v53|q rax|q [328, 331[328 MustHaveRegister 330 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rax|q]" v54|q rax|q [340, 343[340 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rax|q]" v55|q rax|q [352, 355[352 MustHaveRegister 354 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[r11|d]" v56|d -1 [428, 430[430 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rax|q]" v57|q rax|q [270, 273[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q v64|q [356, 363[ "NoSpillStore"
  v59|d DWORD "[r11|d]" v59|d -1 [358, 364[358 MustHaveRegister 360 MustHaveRegister 364 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[r8|q]" v60|q -1 [362, 363[362 MustHaveRegister  "NoDefinitionFound"
  v61|q QWORD "[r11|q]" v61|q v59|d [364, 367[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[r11|d]" v62|d -1 [404, 406[406 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[r10|d]" v63|d -1 [444, 446[446 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q v58|q [258, 261[258 MustHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[rsi|q]" v65|q v30|q [84, 87[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[vstack:6|q]" v0|q v0|q [46, 61[ "OneSpillStore"
  v67|q QWORD "[vstack:1|q]" v1|q v1|q [63, 65[ "StoreAtDefinition"
  v68|d DWORD "[vstack:5|d]" v6|d v6|d [46, 65[ "OneSpillStore"
  v69|q QWORD "[vstack:2|q]" v7|q v7|q [65, 82[[88, 92[[100, 114[[122, 131[[136, 140[[148, 152[[160, 164[[384, 388[[412, 416[92 ShouldHaveRegister 114 ShouldHaveRegister 128 ShouldHaveRegister 140 ShouldHaveRegister 152 ShouldHaveRegister 164 ShouldHaveRegister  "OneSpillStore"
  v70|q QWORD "[vstack:7|q]" v8|q v8|q [46, 65[ "StoreAtDefinition"
  v71|d DWORD "[vstack:5|d]" v6|d v6|d [65, 82[[100, 110[ "OneSpillStore"
  v72|q QWORD "[vstack:6|q]" v0|q v0|q [61, 65[ "OneSpillStore"
  v73|q QWORD "[vstack:7|q]" v8|q v8|q [65, 182[ "StoreAtDefinition"
  v74|d DWORD "[vstack:3|d]" v14|d v14|d [65, 82[ "OneSpillStore"
  v75|d DWORD "[vstack:0|d]" v16|d v16|d [65, 82[[100, 110[[122, 125[[384, 388[[412, 416[78 ShouldHaveRegister  "OneSpillStore"
  v76|q QWORD "[vstack:4|q]" v17|q v17|q [65, 82[[100, 112[[122, 135[[136, 138[[148, 150[[160, 162[[384, 388[[412, 416[112 ShouldHaveRegister 126 ShouldHaveRegister 134 ShouldHaveRegister 138 ShouldHaveRegister 150 ShouldHaveRegister 162 ShouldHaveRegister  "OneSpillStore"
  v77|q QWORD "[vstack:6|q]" v0|q v0|q [65, 172[ "OneSpillStore"
  v78|q QWORD "[vstack:1|q]" v1|q v1|q [65, 182[90 ShouldHaveRegister  "StoreAtDefinition"
  v79|d DWORD "[rcx|d]" v16|d v16|d [416, 423[ "OneSpillStore"
  v80|q QWORD "[rdx|q]" v1|q v1|q [182, 231[212 MustHaveRegister 220 MustHaveRegister 222 MustHaveRegister  "StoreAtDefinition"
  v81|q QWORD "[r8|q]" v7|q v7|q [416, 423[ "OneSpillStore"
  v82|d DWORD "[rbx|d]" v14|d v14|d [100, 102[102 MustHaveRegister  "OneSpillStore"
  v83|q QWORD "[rdi|q]" v17|q v17|q [416, 423[ "OneSpillStore"
  v84|d DWORD "[r11|d]" v6|d v6|d [122, 124[124 MustHaveRegister  "OneSpillStore"
  v85|q QWORD "[rsi|q]" v0|q v0|q [172, 177[[384, 388[[412, 423[[436, 451[174 MustHaveRegister  "OneSpillStore"
  v86|q QWORD "[r11|q]" v8|q v8|q [182, 218[206 ShouldHaveRegister  "StoreAtDefinition"
  v87|q QWORD "[vstack:14|q]" v33|q v33|q [218, 233[ "OneSpillStore"
  v88|q QWORD "[vstack:7|q]" v8|q v8|q [218, 233[ "StoreAtDefinition"
  v89|q QWORD "[vstack:1|q]" v1|q v1|q [231, 233[ "StoreAtDefinition"
  v90|d DWORD "[vstack:13|d]" v37|d v37|d [218, 233[ "OneSpillStore"
  v91|q QWORD "[vstack:10|q]" v38|q v38|q [233, 256[[262, 266[[274, 294[[302, 315[[320, 324[[332, 336[[344, 348[[372, 376[[380, 384[[388, 396[[424, 428[266 ShouldHaveRegister 294 ShouldHaveRegister 312 ShouldHaveRegister 324 ShouldHaveRegister 336 ShouldHaveRegister 348 ShouldHaveRegister  "OneSpillStore"
  v92|d DWORD "[vstack:13|d]" v37|d v37|d [233, 256[[274, 290[ "OneSpillStore"
  v93|q QWORD "[vstack:14|q]" v33|q v33|q [233, 356[ "OneSpillStore"
  v94|q QWORD "[vstack:7|q]" v8|q v8|q [233, 368[367 LiveAtLoopEnd  "StoreAtDefinition"
  v95|d DWORD "[vstack:11|d]" v42|d v42|d [233, 256[ "OneSpillStore"
  v96|d DWORD "[vstack:9|d]" v44|d v44|d [233, 256[[274, 290[[302, 308[[372, 376[[380, 384[[388, 396[[424, 428[252 ShouldHaveRegister  "OneSpillStore"
  v97|q QWORD "[vstack:12|q]" v45|q v45|q [233, 256[[274, 292[[302, 319[[320, 322[[332, 334[[344, 346[[372, 376[[380, 384[[388, 396[[424, 428[292 ShouldHaveRegister 310 ShouldHaveRegister 318 ShouldHaveRegister 322 ShouldHaveRegister 334 ShouldHaveRegister 346 ShouldHaveRegister  "OneSpillStore"
  v98|q QWORD "[vstack:1|q]" v1|q v1|q [233, 368[[372, 411[[412, 423[[424, 435[[436, 444[264 ShouldHaveRegister 367 LiveAtLoopEnd  "StoreAtDefinition"
  v99|d DWORD "[rcx|d]" v44|d v44|d [428, 435[ "OneSpillStore"
  v100|q QWORD "[rdx|q]" v1|q v1|q [444, 451[ "StoreAtDefinition"
  v101|q QWORD "[r9|q]" v38|q v38|q [428, 435[ "OneSpillStore"
  v102|d DWORD "[rbx|d]" v42|d v42|d [274, 282[276 MustHaveRegister 282 MustHaveRegister  "OneSpillStore"
  v103|q QWORD "[rdi|q]" v45|q v45|q [428, 435[ "OneSpillStore"
  v104|d DWORD "[r8|d]" v37|d v37|d [302, 304[304 MustHaveRegister  "OneSpillStore"
  v105|q QWORD "[r10|q]" v33|q v33|q [356, 363[[372, 384[[388, 411[[424, 435[358 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   12  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   14  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   16  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction v9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   38  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   40  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   42  <|@ instruction CMP (x: v11|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOVE v8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[.] = MOVE v6|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction v12|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v12|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   52  <|@ instruction v13|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction v14|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction v16|DWORD = MOVZXB v13|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = STACKMOVE v70|QWORD size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = STACKMOVE v72|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[.] = STACKMOVE (input: v68|DWORD[.], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[.] = MOVE v14|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = STACKMOVE v67|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVE v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   68  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction CMP [v18|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction v19|DWORD = MOVZXB [v18|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction CMP (x: v19|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr  172  <|@ instruction [v30|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  174  <|@ instruction v31|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v30|QWORD[.] 
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v31|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  178  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOVE v73|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  194  <|@ instruction CMP v34|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction v37|DWORD[.] = MOV [v33|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  202  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction v39|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr  206  <|@ instruction CMP (x: v39|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction v40|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  214  <|@ instruction TEST (x: v40|DWORD[.], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[.] = MOVE v37|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOVE v86|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction v41|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  222  <|@ instruction v42|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  224  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction v44|DWORD = MOVZXB v41|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = STACKMOVE v88|QWORD size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = STACKMOVE v87|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[.] = STACKMOVE (input: v90|DWORD[.], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[.] = MOVE v42|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = STACKMOVE v89|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE v44|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr  236  <|@ instruction v46|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TEST (x: v46|QWORD[.], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction CMP [v46|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction v47|DWORD = MOVZXB [v46|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction v64|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  356  <|@ instruction [v58|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  358  <|@ instruction v59|DWORD[.] = MOV [v33|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  360  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v59|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction SAFEPOINT v60|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr  364  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE v61|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOVE v94|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr  182  <|@ instruction [v33|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  184  <|@ instruction v34|DWORD = MOV [v33|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  186  <|@ instruction v36|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  188  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  190  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v35|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOVE v86|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  270  <|@ instruction v57|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|DWORD[.] = MOVE v95|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  276  <|@ instruction TEST (x: v42|DWORD[.], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction v48|DWORD = MOV [v42|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  284  <|@ instruction v50|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  286  <|@ instruction v49|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v50|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  288  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v49|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  298  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[.] = MOVE v92|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction TEST (x: v37|DWORD[.], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  316  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v97|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  328  <|@ instruction v53|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v53|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  340  <|@ instruction v54|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  352  <|@ instruction v55|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVE v8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   90  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   96  <|@ instruction v29|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[.] = MOVE v74|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV [v14|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr  104  <|@ instruction v22|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  106  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  108  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v21|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  118  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = MOVE v71|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v6|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr  126  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  132  <|@ instruction v24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  144  <|@ instruction v25|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  156  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  168  <|@ instruction v27|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: int[-91403|0xfffffffffffe9af5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE v97|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  428  <|@ instruction [v56|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v56|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v46|QWORD[.] 
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE v75|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  416  <|@ instruction [v28|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v28|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  422  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVE input: int[-12339|0xffffffffffffcfcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  404  <|@ instruction [v62|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v62|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: int[-89123|0xfffffffffffea3dd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE v97|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: int[-91923|0xfffffffffffe98ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE v97|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVE input: int[-87563|0xfffffffffffea9f5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVE input: int[-84019|0xfffffffffffeb7cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: int[-27443|0xffffffffffff94cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE v97|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVE input: int[-78627|0xfffffffffffeccdd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE v75|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: int[-88339|0xfffffffffffea6ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE v97|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: int[-72499|0xfffffffffffee4cd] // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  444  <|@ instruction [v63|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v63|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: int[-46387|0xffffffffffff4acd] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   12  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   14  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   16  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction v9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   38  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD = MOVE r10|QWORD moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   40  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   42  <|@ instruction CMP (x: v11|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[.] = MOVE v6|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction v12|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v12|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   52  <|@ instruction v13|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction v14|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction v16|DWORD = MOVZXB v13|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   64  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = STACKMOVE v72|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[.] = STACKMOVE (input: v68|DWORD[.], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[.] = MOVE v14|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVE v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   68  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction CMP [v18|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction v19|DWORD = MOVZXB [v18|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction CMP (x: v19|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  174  <|@ instruction v31|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v30|QWORD[.] 
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v31|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  178  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOVE v73|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE v78|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  194  <|@ instruction CMP v34|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction v37|DWORD[.] = MOV [v33|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  202  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction v39|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr  206  <|@ instruction CMP (x: v39|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction v40|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  214  <|@ instruction TEST (x: v40|DWORD[.], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[.] = MOVE v37|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  220  <|@ instruction v41|DWORD = MOVSXB [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  222  <|@ instruction v42|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  224  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction v44|DWORD = MOVZXB v41|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = STACKMOVE v87|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[.] = STACKMOVE (input: v90|DWORD[.], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[.] = MOVE v42|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE v44|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr  236  <|@ instruction v46|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TEST (x: v46|QWORD[.], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction CMP [v46|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction v47|DWORD = MOVZXB [v46|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction CMP (x: v47|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction v64|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  358  <|@ instruction v59|DWORD[.] = MOV [v33|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  360  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v59|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: v58|QWORD[.] 
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction SAFEPOINT v60|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr  364  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE v61|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOVE v94|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  184  <|@ instruction v34|DWORD = MOV [v33|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  186  <|@ instruction v36|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  188  <|@ instruction v35|QWORD = UNCOMPRESSPOINTER (input: v34|DWORD, ~baseRegister: v36|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  190  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v35|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  270  <|@ instruction v57|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|DWORD[.] = MOVE v95|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  276  <|@ instruction TEST (x: v42|DWORD[.], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction v48|DWORD = MOV [v42|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  284  <|@ instruction v50|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  286  <|@ instruction v49|QWORD = UNCOMPRESSPOINTER (input: v48|DWORD, ~baseRegister: v50|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  288  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v49|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  298  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[.] = MOVE v92|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction TEST (x: v37|DWORD[.], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  316  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v97|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  328  <|@ instruction v53|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v53|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  340  <|@ instruction v54|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  352  <|@ instruction v55|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   90  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   96  <|@ instruction v29|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[.] = MOVE v74|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction v20|DWORD = MOV [v14|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr  104  <|@ instruction v22|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  106  <|@ instruction v21|QWORD = UNCOMPRESSPOINTER (input: v20|DWORD, ~baseRegister: v22|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  108  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v21|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  118  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = MOVE v71|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v6|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr  126  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  132  <|@ instruction v24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  144  <|@ instruction v25|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  156  <|@ instruction v26|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  168  <|@ instruction v27|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: int[-91403|0xfffffffffffe9af5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE v97|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v56|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v46|QWORD[.] 
locals: - v44|DWORD v45|QWORD[.] v38|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE v75|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v28|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  422  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: v18|QWORD[.] 
locals: - v16|DWORD v17|QWORD[.] v7|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - v1|QWORD[.] v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVE input: int[-12339|0xffffffffffffcfcd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v62|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - v1|QWORD[.] v33|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: int[-89123|0xfffffffffffea3dd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE v97|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: int[-91923|0xfffffffffffe98ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE v97|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVE input: int[-87563|0xfffffffffffea9f5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVE input: int[-84019|0xfffffffffffeb7cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: int[-27443|0xffffffffffff94cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE v97|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVE input: int[-78627|0xfffffffffffeccdd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOVE v75|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: int[-88339|0xfffffffffffea6ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE v97|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: int[-72499|0xfffffffffffee4cd] // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v63|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: int[-46387|0xffffffffffff4acd] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   10  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   12  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   14  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   16  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   38  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD = MOVE r10|QWORD moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   40  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   42  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: vstack:6|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - vstack:0|DWORD vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - vstack:0|DWORD vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction CMP (x: rsi|DWORD, y: vstack:0|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  174  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rdx|QWORD[.] 
locals: - vstack:1|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  178  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE vstack:7|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  194  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  202  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr  206  <|@ instruction CMP (x: rsi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  214  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  222  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:12|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - vstack:9|DWORD vstack:12|QWORD[.] vstack:10|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr  238  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction CMP (x: rsi|DWORD, y: vstack:9|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  358  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  360  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - vstack:1|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - vstack:1|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr  364  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE vstack:7|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  186  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  188  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  190  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r9|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD[.] = MOVE vstack:11|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  276  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  288  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[.] = MOVE vstack:13|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction rsi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: vstack:12|QWORD[.] vstack:10|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: vstack:12|QWORD[.] vstack:10|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: vstack:12|QWORD[.] vstack:10|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: vstack:12|QWORD[.] vstack:10|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:14|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction rsi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   90  <|@ instruction rsi|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD[.] = MOVE vstack:3|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - vstack:0|DWORD vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  106  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  108  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[.] = MOVE vstack:5|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - vstack:0|DWORD vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr  126  <|@ instruction rsi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-91403|0xfffffffffffe9af5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r9|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  422  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r8|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-12339|0xffffffffffffcfcd] // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - vstack:1|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-89123|0xfffffffffffea3dd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-91923|0xfffffffffffe98ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-87563|0xfffffffffffea9f5] // MoveResolver resolve mapping <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-84019|0xfffffffffffeb7cd] // MoveResolver resolve mapping <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-27443|0xffffffffffff94cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-78627|0xfffffffffffeccdd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-88339|0xfffffffffffea6ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-72499|0xfffffffffffee4cd] // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-46387|0xffffffffffff4acd] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   10  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   12  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   14  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   16  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   38  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD = MOVE r10|QWORD moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   40  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   42  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: vstack:6|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - vstack:0|DWORD vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - vstack:0|DWORD vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction CMP (x: rsi|DWORD, y: vstack:0|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  174  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rdx|QWORD[.] 
locals: - vstack:1|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  178  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE vstack:7|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  194  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  202  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr  206  <|@ instruction CMP (x: rsi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  214  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  222  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:12|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - vstack:9|DWORD vstack:12|QWORD[.] vstack:10|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr  238  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction CMP (x: rsi|DWORD, y: vstack:9|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  358  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  360  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - vstack:1|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - vstack:1|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr  364  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE vstack:7|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  186  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  188  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  190  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r9|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD[.] = MOVE vstack:11|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  276  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  288  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rsi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[.] = MOVE vstack:13|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  304  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction rsi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: vstack:12|QWORD[.] vstack:10|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: vstack:12|QWORD[.] vstack:10|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: vstack:12|QWORD[.] vstack:10|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: vstack:12|QWORD[.] vstack:10|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:14|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction rsi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   90  <|@ instruction rsi|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD[.] = MOVE vstack:3|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - vstack:0|DWORD vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr  104  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  106  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  108  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[.] = MOVE vstack:5|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - vstack:0|DWORD vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr  126  <|@ instruction rsi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-91403|0xfffffffffffe9af5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r9|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  422  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r8|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-12339|0xffffffffffffcfcd] // MoveResolver resolve mapping <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - vstack:1|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-89123|0xfffffffffffea3dd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-91923|0xfffffffffffe98ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-87563|0xfffffffffffea9f5] // MoveResolver resolve mapping <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-84019|0xfffffffffffeb7cd] // MoveResolver resolve mapping <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-27443|0xffffffffffff94cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-78627|0xfffffffffffeccdd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-88339|0xfffffffffffea6ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-72499|0xfffffffffffee4cd] // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-46387|0xffffffffffff4acd] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction vstack:1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   12  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   14  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   32  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   34  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   36  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   38  <|@ instruction vstack:7|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   42  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction vstack:5|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction vstack:6|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: vstack:6|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   56  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   58  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction vstack:4|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction vstack:3|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction vstack:2|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction vstack:0|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - vstack:0|DWORD vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - vstack:0|DWORD vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction CMP (x: rsi|DWORD, y: vstack:0|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rdx|QWORD[.] 
locals: - vstack:1|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction r11|QWORD = MOVE vstack:7|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rdx|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  272  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr  284  <|@ instruction CMP (x: rsi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  292  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction vstack:13|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction vstack:14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  310  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction vstack:12|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction vstack:11|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction vstack:10|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction vstack:9|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - vstack:9|DWORD vstack:12|QWORD[.] vstack:10|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr  330  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: rsi|DWORD, y: vstack:9|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr  366  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  550  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - vstack:1|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - vstack:1|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr  556  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r11|QWORD = MOVE vstack:7|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  258  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  260  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  262  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  264  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r9|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction vstack:10|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction vstack:14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rbx|DWORD[.] = MOVE vstack:11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  400  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r8|DWORD[.] = MOVE vstack:13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: vstack:12|QWORD[.] vstack:10|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: vstack:12|QWORD[.] vstack:10|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: vstack:12|QWORD[.] vstack:10|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: vstack:12|QWORD[.] vstack:10|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:14|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction vstack:2|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction vstack:6|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  236  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rbx|DWORD[.] = MOVE vstack:3|DWORD[.] moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - vstack:0|DWORD vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  110  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r11|DWORD[.] = MOVE vstack:5|DWORD[.] moveKind: DWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - vstack:0|DWORD vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr  134  <|@ instruction rsi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: vstack:4|QWORD[.] vstack:2|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  154  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] vstack:6|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: int[-91403|0xfffffffffffe9af5] <|@ <|@
      nr  382  <|@ instruction rdi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r9|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr  192  <|@ instruction rdi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVE vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r8|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  218  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r8|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - vstack:1|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction r11|DWORD = MOVE input: int[-12339|0xffffffffffffcfcd] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  580  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  584  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - vstack:1|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|DWORD = MOVE input: int[-89123|0xfffffffffffea3dd] <|@ <|@
      nr  512  <|@ instruction rdi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r11|DWORD = MOVE input: int[-91923|0xfffffffffffe98ed] <|@ <|@
      nr  428  <|@ instruction rdi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r11|DWORD = MOVE input: int[-87563|0xfffffffffffea9f5] <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-84019|0xfffffffffffeb7cd] <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction r11|DWORD = MOVE input: int[-27443|0xffffffffffff94cd] <|@ <|@
      nr  498  <|@ instruction rdi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r10|DWORD = MOVE input: int[-78627|0xfffffffffffeccdd] <|@ <|@
      nr  206  <|@ instruction rdi|QWORD[.] = MOVE vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = MOVE vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction r8|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction r11|DWORD = MOVE input: int[-88339|0xfffffffffffea6ed] <|@ <|@
      nr  338  <|@ instruction rdi|QWORD[.] = MOVE vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction r10|QWORD[.] = MOVE vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r10|DWORD = MOVE input: int[-72499|0xfffffffffffee4cd] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  604  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r10|DWORD = MOVE input: int[-46387|0xffffffffffff4acd] <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [76, 208[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [6, 584[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [74, 232[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[vstack:3|d]" vstack:3|d -1 [72, 104[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [70, 206[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [48, 130[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[vstack:6|q]" vstack:6|q -1 [50, 238[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[vstack:7|q]" vstack:7|q -1 [38, 565[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[vstack:9|d]" vstack:9|d -1 [326, 514[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[vstack:10|q]" vstack:10|q -1 [324, 538[ "NOT_SUPPORTED"
  vstack:11|d DWORD "[vstack:11|d]" vstack:11|d -1 [322, 372[ "NOT_SUPPORTED"
  vstack:12|q QWORD "[vstack:12|q]" vstack:12|q -1 [320, 512[ "NOT_SUPPORTED"
  vstack:13|d DWORD "[vstack:13|d]" vstack:13|d -1 [304, 418[ "NOT_SUPPORTED"
  vstack:14|q QWORD "[vstack:14|q]" vstack:14|q -1 [306, 544[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:84|d]" vstack:0|d -1 [76, 208[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:32|q]" vstack:1|q -1 [6, 584[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:80|q]" vstack:2|q -1 [74, 232[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[stack:68|d]" vstack:3|d -1 [72, 104[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:64|q]" vstack:4|q -1 [70, 206[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:44|d]" vstack:5|d -1 [48, 130[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[stack:56|q]" vstack:6|q -1 [50, 238[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[stack:40|q]" vstack:7|q -1 [38, 565[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[stack:68|d]" vstack:9|d -1 [326, 514[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[stack:64|q]" vstack:10|q -1 [324, 538[ "NOT_SUPPORTED"
  vstack:11|d DWORD "[stack:44|d]" vstack:11|d -1 [322, 372[ "NOT_SUPPORTED"
  vstack:12|q QWORD "[stack:80|q]" vstack:12|q -1 [320, 512[ "NOT_SUPPORTED"
  vstack:13|d DWORD "[stack:84|d]" vstack:13|d -1 [304, 418[ "NOT_SUPPORTED"
  vstack:14|q QWORD "[stack:56|q]" vstack:14|q -1 [306, 544[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   12  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   14  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   32  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   34  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   36  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   38  <|@ instruction stack:40|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   42  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: stack:56|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   56  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   58  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction CMP (x: rsi|DWORD, y: stack:84|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  246  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rdx|QWORD[.] 
locals: - stack:32|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction r11|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  272  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr  284  <|@ instruction CMP (x: rsi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  292  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction stack:84|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  310  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction stack:68|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - stack:68|DWORD stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr  330  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr  366  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  550  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr  556  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r11|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  258  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  260  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  262  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  264  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r9|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  400  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r8|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  236  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  110  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  132  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr  134  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  154  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: int[-91403|0xfffffffffffe9af5] <|@ <|@
      nr  382  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r9|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr  192  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  218  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r8|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction r11|DWORD = MOVE input: int[-12339|0xffffffffffffcfcd] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  580  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  584  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|DWORD = MOVE input: int[-89123|0xfffffffffffea3dd] <|@ <|@
      nr  512  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r11|DWORD = MOVE input: int[-91923|0xfffffffffffe98ed] <|@ <|@
      nr  428  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r11|DWORD = MOVE input: int[-87563|0xfffffffffffea9f5] <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-84019|0xfffffffffffeb7cd] <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction r11|DWORD = MOVE input: int[-27443|0xffffffffffff94cd] <|@ <|@
      nr  498  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r10|DWORD = MOVE input: int[-78627|0xfffffffffffeccdd] <|@ <|@
      nr  206  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction r11|DWORD = MOVE input: int[-88339|0xfffffffffffea6ed] <|@ <|@
      nr  338  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r10|DWORD = MOVE input: int[-72499|0xfffffffffffee4cd] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  604  <|@ st <@st|@live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r10|DWORD = MOVE input: int[-46387|0xffffffffffff4acd] <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   12  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   14  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   32  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   34  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   36  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   38  <|@ instruction stack:40|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   42  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: stack:56|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   56  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   58  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [stack:16, stack:28, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:28, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction CMP (x: rsi|DWORD, y: stack:84|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rdx|QWORD[.] 
locals: - stack:32|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction r11|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  272  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr  284  <|@ instruction CMP (x: rsi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  292  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction stack:84|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  310  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction stack:68|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ st <@st|@reference-map: [stack:12, stack:16, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - stack:68|DWORD stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr  330  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr  366  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  550  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr  556  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r11|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  258  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  260  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  262  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  264  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r9|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  400  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r8|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  236  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  110  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr  134  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  154  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: int[-91403|0xfffffffffffe9af5] <|@ <|@
      nr  382  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@reference-map: [rax:0, rdi:0, r9:0, r10:0, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r9|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr  192  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  218  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [rax:0, rsi:0, rdi:0, r8:0, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r8|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction r11|DWORD = MOVE input: int[-12339|0xffffffffffffcfcd] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  580  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  584  <|@ st <@st|@reference-map: [r10:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|DWORD = MOVE input: int[-89123|0xfffffffffffea3dd] <|@ <|@
      nr  512  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r11|DWORD = MOVE input: int[-91923|0xfffffffffffe98ed] <|@ <|@
      nr  428  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r11|DWORD = MOVE input: int[-87563|0xfffffffffffea9f5] <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-84019|0xfffffffffffeb7cd] <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction r11|DWORD = MOVE input: int[-27443|0xffffffffffff94cd] <|@ <|@
      nr  498  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r10|DWORD = MOVE input: int[-78627|0xfffffffffffeccdd] <|@ <|@
      nr  206  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction r11|DWORD = MOVE input: int[-88339|0xfffffffffffea6ed] <|@ <|@
      nr  338  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r10|DWORD = MOVE input: int[-72499|0xfffffffffffee4cd] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  604  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r10|DWORD = MOVE input: int[-46387|0xffffffffffff4acd] <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   12  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   14  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   32  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   34  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   36  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   38  <|@ instruction stack:40|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   42  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: stack:56|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   56  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   58  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [stack:16, stack:28, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:28, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction CMP (x: rsi|DWORD, y: stack:84|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rdx|QWORD[.] 
locals: - stack:32|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction r11|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  272  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr  284  <|@ instruction CMP (x: rsi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  292  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction stack:84|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  310  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction stack:68|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ st <@st|@reference-map: [stack:12, stack:16, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - stack:68|DWORD stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr  330  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr  366  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  550  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr  556  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r11|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  258  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  260  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  262  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  264  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r9|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  400  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r8|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  236  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  110  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr  134  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  154  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: int[-91403|0xfffffffffffe9af5] <|@ <|@
      nr  382  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@reference-map: [rax:0, rdi:0, r9:0, r10:0, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r9|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr  192  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  218  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [rax:0, rsi:0, rdi:0, r8:0, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r8|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction r11|DWORD = MOVE input: int[-12339|0xffffffffffffcfcd] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  580  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  584  <|@ st <@st|@reference-map: [r10:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|DWORD = MOVE input: int[-89123|0xfffffffffffea3dd] <|@ <|@
      nr  512  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r11|DWORD = MOVE input: int[-91923|0xfffffffffffe98ed] <|@ <|@
      nr  428  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r11|DWORD = MOVE input: int[-87563|0xfffffffffffea9f5] <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-84019|0xfffffffffffeb7cd] <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction r11|DWORD = MOVE input: int[-27443|0xffffffffffff94cd] <|@ <|@
      nr  498  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r10|DWORD = MOVE input: int[-78627|0xfffffffffffeccdd] <|@ <|@
      nr  206  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction r11|DWORD = MOVE input: int[-88339|0xfffffffffffea6ed] <|@ <|@
      nr  338  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r10|DWORD = MOVE input: int[-72499|0xfffffffffffee4cd] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  604  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r10|DWORD = MOVE input: int[-46387|0xffffffffffff4acd] <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   12  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   14  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   32  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   34  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   36  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   38  <|@ instruction stack:40|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   42  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: stack:56|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   56  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   58  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [stack:16, stack:28, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:28, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction CMP (x: rsi|DWORD, y: stack:84|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rdx|QWORD[.] 
locals: - stack:32|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  272  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr  284  <|@ instruction CMP (x: rsi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  292  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction stack:84|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  310  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction stack:68|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ st <@st|@reference-map: [stack:12, stack:16, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - stack:68|DWORD stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr  330  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  412  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr  556  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r11|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  260  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  262  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  264  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r9|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  400  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r8|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  236  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  110  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr  134  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  154  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: int[-91403|0xfffffffffffe9af5] <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@reference-map: [rax:0, rdi:0, r9:0, r10:0, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r9|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [rax:0, rsi:0, rdi:0, r8:0, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r8|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction r11|DWORD = MOVE input: int[-12339|0xffffffffffffcfcd] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  580  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  584  <|@ st <@st|@reference-map: [r10:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|DWORD = MOVE input: int[-89123|0xfffffffffffea3dd] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r11|DWORD = MOVE input: int[-91923|0xfffffffffffe98ed] <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r11|DWORD = MOVE input: int[-87563|0xfffffffffffea9f5] <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-84019|0xfffffffffffeb7cd] <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction r11|DWORD = MOVE input: int[-27443|0xffffffffffff94cd] <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r10|DWORD = MOVE input: int[-78627|0xfffffffffffeccdd] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction r11|DWORD = MOVE input: int[-88339|0xfffffffffffea6ed] <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r10|DWORD = MOVE input: int[-72499|0xfffffffffffee4cd] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  604  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r10|DWORD = MOVE input: int[-46387|0xffffffffffff4acd] <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   12  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   14  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   32  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   34  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   36  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   38  <|@ instruction stack:40|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   42  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: stack:56|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   56  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   58  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [stack:16, stack:28, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:28, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction CMP (x: rsi|DWORD, y: stack:84|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rdx|QWORD[.] 
locals: - stack:32|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  272  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr  284  <|@ instruction CMP (x: rsi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  292  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction stack:84|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  310  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction stack:68|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ st <@st|@reference-map: [stack:12, stack:16, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - stack:68|DWORD stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr  330  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  412  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr  556  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r11|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  260  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  262  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  264  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r9|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  400  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r8|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  236  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  110  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr  134  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  154  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: int[-91403|0xfffffffffffe9af5] <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@reference-map: [rax:0, rdi:0, r9:0, r10:0, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r9|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [rax:0, rsi:0, rdi:0, r8:0, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r8|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction r11|DWORD = MOVE input: int[-12339|0xffffffffffffcfcd] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  580  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  584  <|@ st <@st|@reference-map: [r10:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|DWORD = MOVE input: int[-89123|0xfffffffffffea3dd] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r11|DWORD = MOVE input: int[-91923|0xfffffffffffe98ed] <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r11|DWORD = MOVE input: int[-87563|0xfffffffffffea9f5] <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-84019|0xfffffffffffeb7cd] <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction r11|DWORD = MOVE input: int[-27443|0xffffffffffff94cd] <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r10|DWORD = MOVE input: int[-78627|0xfffffffffffeccdd] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction r11|DWORD = MOVE input: int[-88339|0xfffffffffffea6ed] <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r10|DWORD = MOVE input: int[-72499|0xfffffffffffee4cd] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  604  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r10|DWORD = MOVE input: int[-46387|0xffffffffffff4acd] <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   12  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   14  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   32  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   34  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   36  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   38  <|@ instruction stack:40|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   42  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: stack:56|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   56  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   58  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [stack:16, stack:28, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:28, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction CMP (x: rsi|DWORD, y: stack:84|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rdx|QWORD[.] 
locals: - stack:32|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  272  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr  284  <|@ instruction CMP (x: rsi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  292  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction stack:84|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  310  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction stack:68|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ st <@st|@reference-map: [stack:12, stack:16, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - stack:68|DWORD stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr  330  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  412  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr  556  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r11|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  260  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  262  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  264  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r9|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  400  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r8|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  236  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  110  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr  134  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  154  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: int[-91403|0xfffffffffffe9af5] <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@reference-map: [rax:0, rdi:0, r9:0, r10:0, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r9|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [rax:0, rsi:0, rdi:0, r8:0, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r8|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction r11|DWORD = MOVE input: int[-12339|0xffffffffffffcfcd] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  580  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  584  <|@ st <@st|@reference-map: [r10:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|DWORD = MOVE input: int[-89123|0xfffffffffffea3dd] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r11|DWORD = MOVE input: int[-91923|0xfffffffffffe98ed] <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r11|DWORD = MOVE input: int[-87563|0xfffffffffffea9f5] <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-84019|0xfffffffffffeb7cd] <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction r11|DWORD = MOVE input: int[-27443|0xffffffffffff94cd] <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r10|DWORD = MOVE input: int[-78627|0xfffffffffffeccdd] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction r11|DWORD = MOVE input: int[-88339|0xfffffffffffea6ed] <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r10|DWORD = MOVE input: int[-72499|0xfffffffffffee4cd] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  604  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r10|DWORD = MOVE input: int[-46387|0xffffffffffff4acd] <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   12  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   14  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   32  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   34  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   36  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   38  <|@ instruction stack:40|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   42  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: stack:56|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   56  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   58  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [stack:16, stack:28, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:28, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction CMP (x: rsi|DWORD, y: stack:84|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rdx|QWORD[.] 
locals: - stack:32|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  272  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr  284  <|@ instruction CMP (x: rsi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  292  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction stack:84|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  310  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction stack:68|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ st <@st|@reference-map: [stack:12, stack:16, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - stack:68|DWORD stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr  330  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  412  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr  556  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r11|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  260  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  262  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  264  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r9|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  400  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r8|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  236  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  110  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr  134  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  154  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: int[-91403|0xfffffffffffe9af5] <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@reference-map: [rax:0, rdi:0, r9:0, r10:0, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r9|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [rax:0, rsi:0, rdi:0, r8:0, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r8|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction r11|DWORD = MOVE input: int[-12339|0xffffffffffffcfcd] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  580  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  584  <|@ st <@st|@reference-map: [r10:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|DWORD = MOVE input: int[-89123|0xfffffffffffea3dd] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r11|DWORD = MOVE input: int[-91923|0xfffffffffffe98ed] <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r11|DWORD = MOVE input: int[-87563|0xfffffffffffea9f5] <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-84019|0xfffffffffffeb7cd] <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction r11|DWORD = MOVE input: int[-27443|0xffffffffffff94cd] <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r10|DWORD = MOVE input: int[-78627|0xfffffffffffeccdd] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction r11|DWORD = MOVE input: int[-88339|0xfffffffffffea6ed] <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r10|DWORD = MOVE input: int[-72499|0xfffffffffffee4cd] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  604  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r10|DWORD = MOVE input: int[-46387|0xffffffffffff4acd] <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   12  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   14  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   32  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   34  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   36  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   38  <|@ instruction stack:40|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   42  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: stack:56|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   56  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   58  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [stack:16, stack:28, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:28, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction CMP (x: rsi|DWORD, y: stack:84|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rdx|QWORD[.] 
locals: - stack:32|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  272  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr  284  <|@ instruction CMP (x: rsi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  292  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction stack:84|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  310  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction stack:68|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ st <@st|@reference-map: [stack:12, stack:16, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - stack:68|DWORD stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr  330  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  412  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr  556  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r11|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  260  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  262  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  264  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r9|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  400  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r8|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  236  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  110  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr  134  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  154  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: int[-91403|0xfffffffffffe9af5] <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@reference-map: [rax:0, rdi:0, r9:0, r10:0, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r9|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [rax:0, rsi:0, rdi:0, r8:0, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r8|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction r11|DWORD = MOVE input: int[-12339|0xffffffffffffcfcd] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  580  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  584  <|@ st <@st|@reference-map: [r10:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|DWORD = MOVE input: int[-89123|0xfffffffffffea3dd] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r11|DWORD = MOVE input: int[-91923|0xfffffffffffe98ed] <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r11|DWORD = MOVE input: int[-87563|0xfffffffffffea9f5] <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-84019|0xfffffffffffeb7cd] <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction r11|DWORD = MOVE input: int[-27443|0xffffffffffff94cd] <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r10|DWORD = MOVE input: int[-78627|0xfffffffffffeccdd] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction r11|DWORD = MOVE input: int[-88339|0xfffffffffffea6ed] <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r10|DWORD = MOVE input: int[-72499|0xfffffffffffee4cd] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  604  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r10|DWORD = MOVE input: int[-46387|0xffffffffffff4acd] <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B48" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   12  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   14  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4602846315477573784
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B47" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B16" 
    xhandlers
    flags 
    probability 4602343826562793167
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   32  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   34  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   36  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   38  <|@ instruction stack:40|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr   42  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B14" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: stack:56|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   56  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   58  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   60  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [stack:16, stack:28, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:28, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14] <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599460497313694866
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction CMP (x: rsi|DWORD, y: stack:84|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4598165617625925707
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B8" "B16" "B9" "B10" "B11" "B12" "B6" 
    successors "B18" 
    xhandlers
    flags 
    probability 4602343826562793168
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rdx|QWORD[.] 
locals: - stack:32|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  272  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>} <|@ <|@
      nr  284  <|@ instruction CMP (x: rsi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  292  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction stack:84|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  310  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction stack:68|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ st <@st|@reference-map: [stack:12, stack:16, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2]
locals: - stack:68|DWORD stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14] <|@ <|@
      nr  330  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594341884601991471
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592706108983648584
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233] <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B28 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" "B42" "B35" "B36" "B37" "B38" "B28" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596918887582040584
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  412  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:19] <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 19]
stack: rsi|QWORD[.] 
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19] <|@ <|@
      nr  556  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B43 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B43" 
    successors "B19" "B20" "B45" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601721890045267409
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r11|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  260  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  262  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  264  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r9|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589818426623263155
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  542  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" "B36" "B37" "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584772901640651308
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  400  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579321847790790500
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r8|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577733581622230516
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:80|QWORD[.] stack:64|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569895765150934786
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564763840445892209
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4564624212650853969
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B38 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 4597517693253753241
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4594934678788732027
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14] <|@ <|@
      nr  236  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" "B10" "B11" "B12" "B13" 
    xhandlers
    flags 
    probability 4589824735575540146
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:32, stack:40, stack:52, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14] <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  110  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  112  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4584730409264728400
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B8 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4583019335777261996
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [rax:0, stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - stack:84|DWORD stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:7, 13, 14] <|@ <|@
      nr  134  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [stack:16, stack:32, stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8]
locals: - - 
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:64|QWORD[.] stack:80|QWORD[.] 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575320522895762780
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  154  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4570113909694710136
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B17" 
    xhandlers
    flags 
    probability 4569957684456114103
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16]
locals: - - - - 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14] <|@ <|@
      nr  182  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE input: int[-91403|0xfffffffffffe9af5] <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B25" "B40" "B30" "B34" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@reference-map: [rax:0, rdi:0, r9:0, r10:0, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r9|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [rax:0, rsi:0, rdi:0, r8:0, stack:64]
live-base-pointers: []
scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7]
stack: rax|QWORD[.] 
locals: - rcx|DWORD rdi|QWORD[.] r8|QWORD[.] 
scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13]
locals: - - 
scala.collection.immutable.List.foreach(List.scala:378) [bci: 14]
locals: - stack:32|QWORD[.] rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:7, 13, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction r11|DWORD = MOVE input: int[-12339|0xffffffffffffcfcd] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" "B23" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  580  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  584  <|@ st <@st|@reference-map: [r10:0, stack:64]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:377) [bci: 2]
locals: - stack:32|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|DWORD = MOVE input: int[-89123|0xfffffffffffea3dd] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r11|DWORD = MOVE input: int[-91923|0xfffffffffffe98ed] <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r11|DWORD = MOVE input: int[-87563|0xfffffffffffea9f5] <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B23 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction r11|DWORD = MOVE input: int[-84019|0xfffffffffffeb7cd] <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction r11|DWORD = MOVE input: int[-27443|0xffffffffffff94cd] <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r10|DWORD = MOVE input: int[-78627|0xfffffffffffeccdd] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction r11|DWORD = MOVE input: int[-88339|0xfffffffffffea6ed] <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B25 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r10|DWORD = MOVE input: int[-72499|0xfffffffffffee4cd] <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  600  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  604  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.immutable.List.foreach(List.scala:376) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r10|DWORD = MOVE input: int[-46387|0xffffffffffff4acd] <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: astore_2      
     2: aload_2       
     3: invokevirtual #55         // isEmpty:()boolean
     6: ifne          31
     9: aload_1       
    10: aload_2       
    11: invokevirtual #59         // head:()java.lang.Object
    14: invokeinterface#7, 2       // scala.Function1.apply:(java.lang.Object)java.lang.Object
    19: pop           
    20: aload_2       
    21: invokevirtual #61         // scala.collection.AbstractTraversable.tail:()java.lang.Object
    24: checkcast     #2          // scala.collection.immutable.List
    27: astore_2      
    28: goto          2
    31: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e20349bc00000000080000004d03d449bc0000000000000000493bc20f85d8ffffff906666660f1f840000000000660f1f440000660f1f44000089842400c0feff4883ec5848896c24504889542440448b560849bb00000000080000004f8d04d34d3b05000000000f84120000004d3b05000000000f841b000000e934050000488b6c24504883c458498b8f080100008501c5f877c34181faaddeadde0f85f3040000448b5208448b5e0c458bc349c1e00349b900000000080000004f8d14d14c8954243849b9addeaddeaddeadde4d3bca0f85d502000044895c24344889742428448b4a10438504cc0fbe4a0c8b5a1449c1e1030fb6c98bfb48c1e703498bf1498bd048897c2420895c241c4c89442410894c240c48b8ffffffffffffffff90e80000000090817808addeadde0f854c0400000fb6700c3b74240c0f859d02000048beaddeaddeaddeadde488bd6488b742428448b5610438504d449c1e203e9ce0000000f1f44000081feaddeadde0f85f7030000458b420c458bc849c1e10348beaddeaddeaddeadde493bf30f85da0000008b721085f60f84c6030000448944240c4c895424280fbe4a0c8b5a1448c1e6030fb6c98bfb48c1e703498bd148897c2410895c24344c894c2420894c241c48b8ffffffffffffffff0f1f440000e800000000904885c00f849b030000817808addeadde0f85520300000fb6700c3b74241c0f859400000048beaddeaddeaddeadde4c8b542428458b5a10438504dc4d8b870801000041850049c1e3034d8bd34c8b5c2438488b542440418b720849b800000000080000004d8d0cf04d3b0d000000000f843b0100004d3b0d000000000f8401ffffffe9c30200004c894c24204c89542428488b742440488b54242048b8ffffffffffffffff0f1f440000e80000000090488bf0e976ffffff8b5c243485db0f84240200008b34dd0800000048ba0000000008000000488d34f2493b35000000000f8439000000493b35000000000f8445000000493b35000000000f8462000000493b35000000000f8473000000493b35000000000f847e000000e96f020000488b742410488b54242090e80000000090488bf0e9f6feffff448b44240c4585c00f842d020000488b742410488b5424206690e80000000090488b742410e9ccfeffff488b742410488b542420660f1f440000e80000000090488bf0e9aefeffff488b742410488b542420e80000000090488bf0e996feffff488b742410488b542420e80000000090488bf0e97efeffff488b6c24504883c458498b8f080100008501c5f877c34c894424104889742428488b742440488b54241048b8ffffffffffffffff660f1f440000e80000000090488bd0e970fdffff8b5c241c8b34dd0800000048ba0000000008000000488d34f2493b35000000000f8439000000493b35000000000f8445000000493b35000000000f8462000000493b35000000000f8473000000493b35000000000f847e000000e9c2000000488b742420488b54241090e80000000090488bd0e9f8fcffff448b5c2434438504dc488b742420488b5424100f1f8000000000e80000000090488b542420e9cefcffff488b742420488b542410660f1f440000e80000000090488bd0e9b0fcffff488b742420488b542410e80000000090488bd0e998fcffff488b742420488b542410e80000000090488bd0e980fcffff41bbf59afeff488b7c24108b4c241c4c8b4c24204c8b54242845899fec03000049c787f803000000000000e8000000009041bacd1cffff488b7c24208b4c240c4c8b442410488b742428458997ec03000049c787f803000000000000e8000000009041bbcdcfffff45899fec03000049c787f803000000000000e8000000009041bbdda3feffe97bffffff41bbed98feffe970ffffff41bbf5a9feffebca41bbcdb7feffebc241bbcd94ffffe955ffffff41baddccfeffe97bffffff41bbeda6feffe93fffffff41bacde4feff458997ec03000049c787f803000000000000e8000000009041bacd4affffebe0e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 34 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f43f72afdb8, value=0x7f43d3888080]:0x7f43d3888080}  <||@
  Comment 64 [stack overflow check]  <||@
  Comment 64 3  <||@
  Comment 64 1  <||@
  Comment 75 block B0 null  <||@
  Comment 75 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 80 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD  <||@
  Comment 80 6 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 85 8 r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 89 10 r11|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 99 12 r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3  <||@
  Comment 103 14 AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 103 {DataSection[0x0]}  <||@
  Comment 116 {DataSection[0x8]}  <||@
  Comment 134 block B1 null  <||@
  Comment 134 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 18 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5  <||@
  Comment 150 15  <||@
  Comment 156 block B2 null  <||@
  Comment 156 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 156 22 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed}  <||@
  Comment 156 {meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed}}  <||@
  Comment 163 24 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47  <||@
  Comment 169 block B3 null  <||@
  Comment 169 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 169 28 r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 169 [rdx:0, rsi:0, stack:64]at scala.collection.immutable.List.foreach(List.scala:376) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 169 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 173 30 r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 177 32 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3  <||@
  Comment 184 34 r9|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 194 36 r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3  <||@
  Comment 198 38 stack:40|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 203 40 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>}  <||@
  Comment 203 {meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>}}  <||@
  Comment 213 42 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 216 44 BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16  <||@
  Comment 222 block B4 null  <||@
  Comment 222 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 222 48 stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 227 50 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 232 52 r9|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 236 54 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:0]  <||@
  Comment 236 [rdx:0, r8:0, r9:0, stack:40, stack:52, stack:64]at scala.collection.immutable.List.foreach(List.scala:376) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2 
     locals:  |stack:56|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 236 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 240 56 rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 244 58 rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 247 60 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3  <||@
  Comment 251 62 rcx|DWORD = MOVZXB rcx|DWORD size: DWORD  <||@
  Comment 254 64 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3  <||@
  Comment 260 66 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 263 68 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 266 70 stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 271 72 stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 275 74 stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 280 76 stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 284 78 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14]  <||@
  Comment 284 7  <||@
  Comment 295 {HotSpotMethod<Function1.apply(Object)>}  <||@
  Comment 300 [stack:16, stack:28, stack:32, stack:40, stack:52, stack:64]at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2, duringCall: true, rethrow: false]
              |0  |1               |2                  |3                 
     locals:  |-  |stack:84|DWORD  |stack:64|QWORD[.]  |stack:80|QWORD[.] 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 301 80 CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14]  <||@
  Comment 301 [rax:0, stack:16, stack:28, stack:32, stack:40, stack:52, stack:64]at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7, duringCall: false, rethrow: false]
              |0             |1               |2                  |3                 
     locals:  |-             |stack:84|DWORD  |stack:64|QWORD[.]  |stack:80|QWORD[.] 
     stack:   |rax|QWORD[.]  |                |                   |                  
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 301 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 301 {meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed}}  <||@
  Comment 308 82 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14  <||@
  Comment 314 block B5 null  <||@
  Comment 314 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 314 86 rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 318 88 CMP (x: rsi|DWORD, y: stack:84|DWORD) size: DWORD  <||@
  Comment 322 90 BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 328 block B6 null  <||@
  Comment 328 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 328 94 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233]  <||@
  Comment 328 {Object[BoxedUnit@732865233]}  <||@
  Comment 338 96 rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 341 100 JUMP ~[] destination: B6 -> B17  <||@
  Comment 341 block B17 null  <||@
  Comment 341 242 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 341 124 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 346 244 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 350 246 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:19]  <||@
  Comment 350 [rdx:0, rsi:0, r10:0, stack:64]at scala.collection.immutable.List.foreach(List.scala:378) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                  |2            
     locals:  |-             |stack:32|QWORD[.]  |rsi|QWORD[.] 
     stack:   |rdx|QWORD[.]  |                   |               <||@
  Comment 350 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 354 248 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3  <||@
  Comment 358 254 JUMP ~[] destination: B17 -> B18  <||@
  Comment 363 block B20 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 363 270 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 368 272 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed}  <||@
  Comment 368 {meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed}}  <||@
  Comment 374 274 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44  <||@
  Comment 380 block B21 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 380 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 380 278 r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 384 280 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3  <||@
  Comment 391 282 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>}  <||@
  Comment 391 {meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>}}  <||@
  Comment 401 284 CMP (x: rsi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 404 286 BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42  <||@
  Comment 410 block B22 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 410 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 410 290 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 413 292 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 415 294 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 421 block B24 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 421 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 421 304 stack:84|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 426 306 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 431 308 rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 435 310 rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 438 312 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3  <||@
  Comment 442 314 rcx|DWORD = MOVZXB rcx|DWORD size: DWORD  <||@
  Comment 445 316 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3  <||@
  Comment 451 318 rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 454 320 stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 459 322 stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 463 324 stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 468 326 stack:68|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 472 328 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14]  <||@
  Comment 472 7  <||@
  Comment 487 {HotSpotMethod<Function1.apply(Object)>}  <||@
  Comment 492 [stack:12, stack:16, stack:32, stack:40, stack:52, stack:64]at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2, duringCall: true, rethrow: false]
              |0  |1               |2                  |3                 
     locals:  |-  |stack:68|DWORD  |stack:80|QWORD[.]  |stack:64|QWORD[.] 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 493 330 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 496 332 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 502 block B26 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 502 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 502 350 CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed}  <||@
  Comment 502 {meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed}}  <||@
  Comment 509 352 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40  <||@
  Comment 515 block B27 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 515 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 515 356 rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 519 358 CMP (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 523 360 BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 529 block B28 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 529 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 529 364 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233]  <||@
  Comment 529 {Object[BoxedUnit@732865233]}  <||@
  Comment 539 368 JUMP ~[] destination: B28 -> B43  <||@
  Comment 539 block B43 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 539 548 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 539 412 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 544 550 r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 548 552 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:19]  <||@
  Comment 548 [rsi:0, r10:0, r11:0, stack:64]at scala.collection.immutable.List.foreach(List.scala:378) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                  |2            
     locals:  |-             |stack:32|QWORD[.]  |r10|QWORD[.] 
     stack:   |rsi|QWORD[.]  |                   |               <||@
  Comment 548 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 552 554 SAFEPOINT r8|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19]  <||@
  Comment 559 [rsi:0, r10:0, r11:0, stack:64]at scala.collection.immutable.List.foreach(List.scala:378) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                  |2            
     locals:  |-             |stack:32|QWORD[.]  |r10|QWORD[.] 
     stack:   |rsi|QWORD[.]  |                   |               <||@
  Comment 559 {infopoint: SAFEPOINT}  <||@
  Comment 559 14  <||@
  Comment 562 556 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3  <||@
  Comment 566 558 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 569 564 JUMP ~[] destination: B43 -> B18  <||@
  Comment 569 block B18 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 569 256 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 569 250 r11|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 574 252 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 579 258 rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD  <||@
  Comment 583 260 r8|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 593 262 r9|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3  <||@
  Comment 597 264 AMD64HOTSPOTSTRATEGYSWITCH ~r9|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 597 {DataSection[0x0]}  <||@
  Comment 610 {DataSection[0x8]}  <||@
  Comment 628 block B42 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 628 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 628 532 stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 633 534 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 638 536 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 643 538 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 648 540 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14]  <||@
  Comment 648 7  <||@
  Comment 663 {HotSpotMethod<Function1.apply(Object)>}  <||@
  Comment 668 [stack:40, stack:64]at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 669 542 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 672 546 JUMP ~[] destination: B42 -> B43  <||@
  Comment 677 block B29 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 677 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 677 372 rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 681 374 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 683 376 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 689 block B31 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 689 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 689 394 rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 696 396 rdx|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 706 398 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3  <||@
  Comment 710 400 AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 710 {DataSection[0x10]}  <||@
  Comment 723 {DataSection[0x18]}  <||@
  Comment 736 {DataSection[0x20]}  <||@
  Comment 749 {DataSection[0x28]}  <||@
  Comment 762 {DataSection[0x30]}  <||@
  Comment 780 block B32 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 780 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 780 404 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 785 406 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 790 408 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14]  <||@
  Comment 790 10  <||@
  Comment 791 {HotSpotMethod<ListBuffer.$plus$eq(Object)>}  <||@
  Comment 796 [stack:40, stack:64]at scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 797 410 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 800 414 JUMP ~[] destination: B32 -> B43  <||@
  Comment 805 block B33 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 805 416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 805 418 r8|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 810 420 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 813 422 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 819 block B35 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 819 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 819 440 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 824 442 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 829 444 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14]  <||@
  Comment 829 10  <||@
  Comment 831 {HotSpotMethod<FlatHashTable.addEntry(Object)>}  <||@
  Comment 836 [stack:16, stack:32, stack:40, stack:64]at scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:80|QWORD[.]  |stack:64|QWORD[.] 
  at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:80|QWORD[.]  |stack:64|QWORD[.] 
  at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:80|QWORD[.]  |stack:64|QWORD[.] 
  at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:80|QWORD[.]  |stack:64|QWORD[.] 
  at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 837 446 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 842 450 JUMP ~[] destination: B35 -> B43  <||@
  Comment 847 block B36 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 847 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 847 454 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 852 456 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 857 458 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14]  <||@
  Comment 857 10  <||@
  Comment 863 {HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)>}  <||@
  Comment 868 [stack:40, stack:64]at scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 869 460 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 872 464 JUMP ~[] destination: B36 -> B43  <||@
  Comment 877 block B37 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 877 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 877 468 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 882 470 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 887 472 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14]  <||@
  Comment 887 {HotSpotMethod<VectorBuilder.$plus$eq(Object)>}  <||@
  Comment 887 10  <||@
  Comment 892 [stack:40, stack:64]at scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 893 474 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 896 478 JUMP ~[] destination: B37 -> B43  <||@
  Comment 901 block B38 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 901 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 901 482 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 906 484 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 911 486 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14]  <||@
  Comment 911 {HotSpotMethod<SetBuilder.$plus$eq(Object)>}  <||@
  Comment 911 10  <||@
  Comment 916 [stack:40, stack:64]at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 917 488 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 920 492 JUMP ~[] destination: B38 -> B43  <||@
  Comment 925 block B19 null  <||@
  Comment 925 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 925 268 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5  <||@
  Comment 941 15  <||@
  Comment 947 block B16 null  <||@
  Comment 947 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 947 226 stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 952 228 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 957 230 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 962 232 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 967 234 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14]  <||@
  Comment 967 7  <||@
  Comment 983 {HotSpotMethod<Function1.apply(Object)>}  <||@
  Comment 988 [stack:40, stack:64]at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 989 236 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 992 240 JUMP ~[] destination: B16 -> B17  <||@
  Comment 997 block B7 null  <||@
  Comment 997 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 997 104 rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1001 106 rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14]  <||@
  Comment 1001 [rax:0, stack:16, stack:32, stack:40, stack:52, stack:64]at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7, duringCall: false, rethrow: false]
              |0             |1               |2                  |3                 
     locals:  |-             |stack:84|DWORD  |stack:64|QWORD[.]  |stack:80|QWORD[.] 
     stack:   |rax|QWORD[.]  |                |                   |                  
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1001 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1008 108 rdx|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 1018 110 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3  <||@
  Comment 1022 112 AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 1022 {DataSection[0x10]}  <||@
  Comment 1035 {DataSection[0x18]}  <||@
  Comment 1048 {DataSection[0x20]}  <||@
  Comment 1061 {DataSection[0x28]}  <||@
  Comment 1074 {DataSection[0x30]}  <||@
  Comment 1092 block B8 null  <||@
  Comment 1092 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1092 116 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1097 118 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1102 120 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14]  <||@
  Comment 1102 10  <||@
  Comment 1103 {HotSpotMethod<ListBuffer.$plus$eq(Object)>}  <||@
  Comment 1108 [stack:40, stack:64]at scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1109 122 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1112 126 JUMP ~[] destination: B8 -> B17  <||@
  Comment 1117 block B9 null  <||@
  Comment 1117 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1117 130 r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1122 132 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:7, 13, 14]  <||@
  Comment 1122 [rax:0, stack:16, stack:32, stack:40, stack:64]at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7, duringCall: false, rethrow: false]
              |0             |1               |2                  |3                 
     locals:  |-             |stack:84|DWORD  |stack:64|QWORD[.]  |stack:80|QWORD[.] 
     stack:   |rax|QWORD[.]  |                |                   |                  
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1122 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1126 134 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1131 136 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1136 138 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14]  <||@
  Comment 1136 10  <||@
  Comment 1143 {HotSpotMethod<FlatHashTable.addEntry(Object)>}  <||@
  Comment 1148 [stack:16, stack:32, stack:40, stack:64]at scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:80|QWORD[.] 
  at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:80|QWORD[.] 
  at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:80|QWORD[.] 
  at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:80|QWORD[.] 
  at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1149 140 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1154 144 JUMP ~[] destination: B9 -> B17  <||@
  Comment 1159 block B10 null  <||@
  Comment 1159 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1159 148 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1164 150 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1169 152 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14]  <||@
  Comment 1169 10  <||@
  Comment 1175 {HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)>}  <||@
  Comment 1180 [stack:40, stack:64]at scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1181 154 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1184 158 JUMP ~[] destination: B10 -> B17  <||@
  Comment 1189 block B11 null  <||@
  Comment 1189 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1189 162 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1194 164 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1199 166 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14]  <||@
  Comment 1199 {HotSpotMethod<VectorBuilder.$plus$eq(Object)>}  <||@
  Comment 1199 10  <||@
  Comment 1204 [stack:40, stack:64]at scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1205 168 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1208 172 JUMP ~[] destination: B11 -> B17  <||@
  Comment 1213 block B12 null  <||@
  Comment 1213 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1213 176 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1218 178 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1223 180 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14]  <||@
  Comment 1223 {HotSpotMethod<SetBuilder.$plus$eq(Object)>}  <||@
  Comment 1223 10  <||@
  Comment 1228 [stack:40, stack:64]at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1229 182 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1232 186 JUMP ~[] destination: B12 -> B17  <||@
  Comment 1237 block B30 null  <||@
  Comment 1237 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1237 380 r11|DWORD = MOVE input: int[-91403|0xfffffffffffe9af5]  <||@
  Comment 1243 390 JUMP ~[] destination: B30 -> B41  <||@
  Comment 1243 block B41 null  <||@
  Comment 1243 522 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1243 498 rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1248 500 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1252 502 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1257 504 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1262 524 MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD  <||@
  Comment 1269 526 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 1280 528 DEOPT info [bci:7, 13, 14]  <||@
  Comment 1280 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f43f72afda0, value=0x7f43d3887084]:0x7f43d3887084}  <||@
  Comment 1285 [rax:0, rdi:0, r9:0, r10:0, stack:64]at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7, duringCall: false, rethrow: false]
              |0             |1          |2             |3           
     locals:  |-             |rcx|DWORD  |rdi|QWORD[.]  |r9|QWORD[.] 
     stack:   |rax|QWORD[.]  |           |              |            
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2            
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]   <||@
  Comment 1286 block B13 null  <||@
  Comment 1286 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1286 190 r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd]  <||@
  Comment 1292 200 JUMP ~[] destination: B13 -> B15  <||@
  Comment 1292 block B15 null  <||@
  Comment 1292 216 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1292 192 rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1297 194 rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1301 196 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1306 198 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1311 218 MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD  <||@
  Comment 1318 220 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 1329 222 DEOPT info [bci:7, 13, 14]  <||@
  Comment 1329 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f43f72afda0, value=0x7f43d3887084]:0x7f43d3887084}  <||@
  Comment 1334 [rax:0, rsi:0, rdi:0, r8:0, stack:64]at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7, duringCall: false, rethrow: false]
              |0             |1          |2             |3           
     locals:  |-             |rcx|DWORD  |rdi|QWORD[.]  |r8|QWORD[.] 
     stack:   |rax|QWORD[.]  |           |              |            
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2            
     locals:  |-  |stack:32|QWORD[.]  |rsi|QWORD[.]   <||@
  Comment 1335 block B45 null  <||@
  Comment 1335 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1335 574 r11|DWORD = MOVE input: int[-12339|0xffffffffffffcfcd]  <||@
  Comment 1341 576 JUMP ~[] destination: B45 -> B46  <||@
  Comment 1341 block B46 null  <||@
  Comment 1341 578 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1341 580 MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD  <||@
  Comment 1348 582 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 1359 584 DEOPT info [bci:2]  <||@
  Comment 1359 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f43f72afda0, value=0x7f43d3887084]:0x7f43d3887084}  <||@
  Comment 1364 [r10:0, stack:64]at scala.collection.immutable.List.foreach(List.scala:377) [bci: 2, duringCall: false, rethrow: false]
              |0  |1                  |2            
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]   <||@
  Comment 1365 block B40 null  <||@
  Comment 1365 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1365 510 r11|DWORD = MOVE input: int[-89123|0xfffffffffffea3dd]  <||@
  Comment 1371 520 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1376 block B34 null  <||@
  Comment 1376 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1376 426 r11|DWORD = MOVE input: int[-91923|0xfffffffffffe98ed]  <||@
  Comment 1382 436 JUMP ~[] destination: B34 -> B41  <||@
  Comment 1387 block B23 null  <||@
  Comment 1387 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1387 298 r11|DWORD = MOVE input: int[-87563|0xfffffffffffea9f5]  <||@
  Comment 1393 300 JUMP ~[] destination: B23 -> B46  <||@
  Comment 1395 block B44 null  <||@
  Comment 1395 566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1395 568 r11|DWORD = MOVE input: int[-84019|0xfffffffffffeb7cd]  <||@
  Comment 1401 570 JUMP ~[] destination: B44 -> B46  <||@
  Comment 1403 block B39 null  <||@
  Comment 1403 494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1403 496 r11|DWORD = MOVE input: int[-27443|0xffffffffffff94cd]  <||@
  Comment 1409 506 JUMP ~[] destination: B39 -> B41  <||@
  Comment 1414 block B14 null  <||@
  Comment 1414 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1414 204 r10|DWORD = MOVE input: int[-78627|0xfffffffffffeccdd]  <||@
  Comment 1420 214 JUMP ~[] destination: B14 -> B15  <||@
  Comment 1425 block B25 null  <||@
  Comment 1425 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1425 336 r11|DWORD = MOVE input: int[-88339|0xfffffffffffea6ed]  <||@
  Comment 1431 346 JUMP ~[] destination: B25 -> B41  <||@
  Comment 1436 block B47 null  <||@
  Comment 1436 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1436 588 r10|DWORD = MOVE input: int[-72499|0xfffffffffffee4cd]  <||@
  Comment 1442 590 JUMP ~[] destination: B47 -> B49  <||@
  Comment 1442 block B49 null  <||@
  Comment 1442 598 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1442 600 MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD  <||@
  Comment 1449 602 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 1460 604 DEOPT info [bci:0]  <||@
  Comment 1460 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f43f72afda0, value=0x7f43d3887084]:0x7f43d3887084}  <||@
  Comment 1465 [rdx:0, rsi:0]at scala.collection.immutable.List.foreach(List.scala:376) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 1466 block B48 null  <||@
  Comment 1466 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1466 594 r10|DWORD = MOVE input: int[-46387|0xffffffffffff4acd]  <||@
  Comment 1472 596 JUMP ~[] destination: B48 -> B49  <||@
  Comment 1474 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f43d3976b80:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1474 4  <||@
  Comment 1480 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f43f72afda8, value=0x7f43d3886e20]:0x7f43d3886e20}  <||@
  Comment 1480 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-21250[scala.collection.immutable.List.foreach(Function1)]"
  method "HotSpotCompilation-21250[scala.collection.immutable.List.foreach(Function1)]"
  date 1648701836028
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f43dedafa80 448b560849c1e20349bc00000000080000004d03d449bc0000000000000000493bc20f85d885adf4906666660f1f840000000000660f1f440000660f1f44000089842400c0feff4883ec5848896c24504889542440448b560849bb00000000080000004f8d04d34d3b0552ffffff0f84120000004d3b054dffffff0f841b000000e934050000488b6c24504883c458498b8f080100008501c5f877c34181fab2f739080f85f3040000448b5208448b5e0c458bc349c1e00349b900000000080000004f8d14d14c8954243849b94010d641080000004d3bca0f85d502000044895c24344889742428448b4a10438504cc0fbe4a0c8b5a1449c1e1030fb6c98bfb48c1e703498bf1498bd048897c2420895c241c4c89442410894c240c48b8ffffffffffffffff90e8d47eadf49081780835f706000f854c0400000fb6700c3b74240c0f859d02000048be803d615407000000488bd6488b742428448b5610438504d449c1e203e9ce0000000f1f44000081feb2f739080f85f7030000458b420c458bc849c1e10348be4010d64108000000493bf30f85da0000008b721085f60f84c6030000448944240c4c895424280fbe4a0c8b5a1448c1e6030fb6c98bfb48c1e703498bd148897c2410895c24344c894c2420894c241c48b8ffffffffffffffff0f1f440000e8147eadf4904885c00f849b03000081780835f706000f85520300000fb6700c3b74241c0f859400000048be803d6154070000004c8b542428458b5a10438504dc4d8b870801000041850049c1e3034d8bd34c8b5c2438488b542440418b720849b800000000080000004d8d0cf04d3b0d64fdffff0f843b0100004d3b0d5ffdffff0f8401ffffffe9c30200004c894c24204c89542428488b742440488b54242048b8ffffffffffffffff0f1f440000e8647dadf490488bf0e976ffffff8b5c243485db0f84240200008b34dd0800000048ba0000000008000000488d34f2493b3503fdffff0f8439000000493b35fefcffff0f8445000000493b35f9fcffff0f8462000000493b35f4fcffff0f8473000000493b35effcffff0f847e000000e96f020000488b742410488b54242090e8e47fadf490488bf0e9f6feffff448b44240c4585c00f842d020000488b742410488b5424206690e8bc7fadf490488b742410e9ccfeffff488b742410488b542420660f1f440000e89c7fadf490488bf0e9aefeffff488b742410488b542420e8847fadf490488bf0e996feffff488b742410488b542420e86c7fadf490488bf0e97efeffff488b6c24504883c458498b8f080100008501c5f877c34c894424104889742428488b742440488b54241048b8ffffffffffffffff660f1f440000e8247cadf490488bd0e970fdffff8b5c241c8b34dd0800000048ba0000000008000000488d34f2493b35cbfbffff0f8439000000493b35c6fbffff0f8445000000493b35c1fbffff0f8462000000493b35bcfbffff0f8473000000493b35b7fbffff0f847e000000e9c2000000488b742420488b54241090e8ac7eadf490488bd0e9f8fcffff448b5c2434438504dc488b742420488b5424100f1f8000000000e8847eadf490488b542420e9cefcffff488b742420488b542410660f1f440000e8647eadf490488bd0e9b0fcffff488b742420488b542410e84c7eadf490488bd0e998fcffff488b742420488b542410e8347eadf490488bd0e980fcffff41bbf59afeff488b7c24108b4c241c4c8b4c24204c8b54242845899fec03000049c787f803000000000000e8ff70adf49041bacd1cffff488b7c24208b4c240c4c8b442410488b742428458997ec03000049c787f803000000000000e8ce70adf49041bbcdcfffff45899fec03000049c787f803000000000000e8b070adf49041bbdda3feffe97bffffff41bbed98feffe970ffffff41bbf5a9feffebca41bbcdb7feffebc241bbcd94ffffe955ffffff41baddccfeffe97bffffff41bbeda6feffe93fffffff41bacde4feff458997ec03000049c787f803000000000000e84b70adf49041bacd4affffebe0e8396bbcf490e8d36dadf490f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 2  <||@
  Comment 34 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f43f72afdb8, value=0x7f43d3888080]:0x7f43d3888080}  <||@
  Comment 64 [stack overflow check]  <||@
  Comment 64 3  <||@
  Comment 64 1  <||@
  Comment 75 block B0 null  <||@
  Comment 75 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 80 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@30a549c1 slotKind: QWORD  <||@
  Comment 80 6 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 85 8 r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 89 10 r11|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 99 12 r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3  <||@
  Comment 103 14 AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B48 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 103 {DataSection[0x0]}  <||@
  Comment 116 {DataSection[0x8]}  <||@
  Comment 134 block B1 null  <||@
  Comment 134 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 18 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5  <||@
  Comment 150 15  <||@
  Comment 156 block B2 null  <||@
  Comment 156 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 156 22 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed}  <||@
  Comment 156 {meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed}}  <||@
  Comment 163 24 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B47  <||@
  Comment 169 block B3 null  <||@
  Comment 169 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 169 28 r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 169 [rdx:0, rsi:0, stack:64]at scala.collection.immutable.List.foreach(List.scala:376) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 169 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 173 30 r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 177 32 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3  <||@
  Comment 184 34 r9|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 194 36 r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3  <||@
  Comment 198 38 stack:40|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 203 40 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>}  <||@
  Comment 203 {meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>}}  <||@
  Comment 213 42 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 216 44 BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B16  <||@
  Comment 222 block B4 null  <||@
  Comment 222 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 222 48 stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 227 50 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 232 52 r9|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 236 54 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:0]  <||@
  Comment 236 [rdx:0, r8:0, r9:0, stack:40, stack:52, stack:64]at scala.collection.immutable.List.foreach(List.scala:376) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2 
     locals:  |stack:56|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 236 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 240 56 rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 244 58 rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 247 60 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3  <||@
  Comment 251 62 rcx|DWORD = MOVZXB rcx|DWORD size: DWORD  <||@
  Comment 254 64 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3  <||@
  Comment 260 66 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 263 68 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 266 70 stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 271 72 stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 275 74 stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 280 76 stack:84|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 284 78 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14]  <||@
  Comment 284 7  <||@
  Comment 295 {HotSpotMethod<Function1.apply(Object)>}  <||@
  Comment 300 [stack:16, stack:28, stack:32, stack:40, stack:52, stack:64]at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2, duringCall: true, rethrow: false]
              |0  |1               |2                  |3                 
     locals:  |-  |stack:84|DWORD  |stack:64|QWORD[.]  |stack:80|QWORD[.] 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 301 80 CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed} state [bci:7, 13, 14]  <||@
  Comment 301 [rax:0, stack:16, stack:28, stack:32, stack:40, stack:52, stack:64]at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7, duringCall: false, rethrow: false]
              |0             |1               |2                  |3                 
     locals:  |-             |stack:84|DWORD  |stack:64|QWORD[.]  |stack:80|QWORD[.] 
     stack:   |rax|QWORD[.]  |                |                   |                  
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 301 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 301 {meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed}}  <||@
  Comment 308 82 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B14  <||@
  Comment 314 block B5 null  <||@
  Comment 314 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 314 86 rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 318 88 CMP (x: rsi|DWORD, y: stack:84|DWORD) size: DWORD  <||@
  Comment 322 90 BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 328 block B6 null  <||@
  Comment 328 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 328 94 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233]  <||@
  Comment 328 {Object[BoxedUnit@732865233]}  <||@
  Comment 338 96 rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 341 100 JUMP ~[] destination: B6 -> B17  <||@
  Comment 341 block B17 null  <||@
  Comment 341 242 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 341 124 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 346 244 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 350 246 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:19]  <||@
  Comment 350 [rdx:0, rsi:0, r10:0, stack:64]at scala.collection.immutable.List.foreach(List.scala:378) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                  |2            
     locals:  |-             |stack:32|QWORD[.]  |rsi|QWORD[.] 
     stack:   |rdx|QWORD[.]  |                   |               <||@
  Comment 350 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 354 248 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3  <||@
  Comment 358 254 JUMP ~[] destination: B17 -> B18  <||@
  Comment 363 block B20 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 363 270 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 368 272 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed}  <||@
  Comment 368 {meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed}}  <||@
  Comment 374 274 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B44  <||@
  Comment 380 block B21 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 380 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 380 278 r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 384 280 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3  <||@
  Comment 391 282 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>}  <||@
  Comment 391 {meta{HotSpotType<Lscala/collection/TraversableLike$$Lambda$5955/0x0000000841d61040;, resolved>}}  <||@
  Comment 401 284 CMP (x: rsi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 404 286 BRANCH trueDestinationProbability: 0.6675206937327554 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B42  <||@
  Comment 410 block B22 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 410 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 410 290 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 413 292 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 415 294 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 421 block B24 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 421 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 421 304 stack:84|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 426 306 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 431 308 rcx|DWORD = MOVSXB [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 435 310 rbx|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 438 312 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3  <||@
  Comment 442 314 rcx|DWORD = MOVZXB rcx|DWORD size: DWORD  <||@
  Comment 445 316 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3  <||@
  Comment 451 318 rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 454 320 stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 459 322 stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 463 324 stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 468 326 stack:68|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 472 328 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 13, 14]  <||@
  Comment 472 7  <||@
  Comment 487 {HotSpotMethod<Function1.apply(Object)>}  <||@
  Comment 492 [stack:12, stack:16, stack:32, stack:40, stack:52, stack:64]at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 2, duringCall: true, rethrow: false]
              |0  |1               |2                  |3                 
     locals:  |-  |stack:68|DWORD  |stack:80|QWORD[.]  |stack:64|QWORD[.] 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 493 330 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 496 332 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 502 block B26 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 502 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 502 350 CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed}  <||@
  Comment 502 {meta{HotSpotType<Ljava/lang/Boolean;, resolved>;compressed}}  <||@
  Comment 509 352 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B40  <||@
  Comment 515 block B27 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 515 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 515 356 rsi|DWORD = MOVZXB [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 519 358 CMP (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 523 360 BRANCH trueDestinationProbability: 0.7771452667088341 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 529 block B28 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 529 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 529 364 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoxedUnit@732865233]  <||@
  Comment 529 {Object[BoxedUnit@732865233]}  <||@
  Comment 539 368 JUMP ~[] destination: B28 -> B43  <||@
  Comment 539 block B43 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 539 548 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 539 412 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 544 550 r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 548 552 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:19]  <||@
  Comment 548 [rsi:0, r10:0, r11:0, stack:64]at scala.collection.immutable.List.foreach(List.scala:378) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                  |2            
     locals:  |-             |stack:32|QWORD[.]  |r10|QWORD[.] 
     stack:   |rsi|QWORD[.]  |                   |               <||@
  Comment 548 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 552 554 SAFEPOINT r8|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 thread: r15 state [bci:19]  <||@
  Comment 559 [rsi:0, r10:0, r11:0, stack:64]at scala.collection.immutable.List.foreach(List.scala:378) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                  |2            
     locals:  |-             |stack:32|QWORD[.]  |r10|QWORD[.] 
     stack:   |rsi|QWORD[.]  |                   |               <||@
  Comment 559 {infopoint: SAFEPOINT}  <||@
  Comment 559 14  <||@
  Comment 562 556 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 0 shift: 3  <||@
  Comment 566 558 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 569 564 JUMP ~[] destination: B43 -> B18  <||@
  Comment 569 block B18 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 569 256 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 569 250 r11|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 574 252 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 579 258 rsi|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD  <||@
  Comment 583 260 r8|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 593 262 r9|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3  <||@
  Comment 597 264 AMD64HOTSPOTSTRATEGYSWITCH ~r9|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}] keyTargets: [B18 -> B19, B18 -> B20] defaultTarget: B18 -> B45 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 597 {DataSection[0x0]}  <||@
  Comment 610 {DataSection[0x8]}  <||@
  Comment 628 block B42 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 628 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 628 532 stack:64|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 633 534 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 638 536 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 643 538 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 648 540 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14]  <||@
  Comment 648 7  <||@
  Comment 663 {HotSpotMethod<Function1.apply(Object)>}  <||@
  Comment 668 [stack:40, stack:64]at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 669 542 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 672 546 JUMP ~[] destination: B42 -> B43  <||@
  Comment 677 block B29 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 677 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 677 372 rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 681 374 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 683 376 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 689 block B31 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 689 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 689 394 rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 696 396 rdx|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 706 398 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3  <||@
  Comment 710 400 AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B31 -> B32, B31 -> B33, B31 -> B36, B31 -> B37, B31 -> B38] defaultTarget: B31 -> B39 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 710 {DataSection[0x10]}  <||@
  Comment 723 {DataSection[0x18]}  <||@
  Comment 736 {DataSection[0x20]}  <||@
  Comment 749 {DataSection[0x28]}  <||@
  Comment 762 {DataSection[0x30]}  <||@
  Comment 780 block B32 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 780 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 780 404 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 785 406 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 790 408 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14]  <||@
  Comment 790 10  <||@
  Comment 791 {HotSpotMethod<ListBuffer.$plus$eq(Object)>}  <||@
  Comment 796 [stack:40, stack:64]at scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 797 410 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 800 414 JUMP ~[] destination: B32 -> B43  <||@
  Comment 805 block B33 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 805 416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 805 418 r8|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 810 420 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 813 422 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 819 block B35 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 819 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 819 440 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 824 442 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 829 444 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14]  <||@
  Comment 829 10  <||@
  Comment 831 {HotSpotMethod<FlatHashTable.addEntry(Object)>}  <||@
  Comment 836 [stack:16, stack:32, stack:40, stack:64]at scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:80|QWORD[.]  |stack:64|QWORD[.] 
  at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:80|QWORD[.]  |stack:64|QWORD[.] 
  at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:80|QWORD[.]  |stack:64|QWORD[.] 
  at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:80|QWORD[.]  |stack:64|QWORD[.] 
  at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 837 446 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 842 450 JUMP ~[] destination: B35 -> B43  <||@
  Comment 847 block B36 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 847 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 847 454 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 852 456 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 857 458 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14]  <||@
  Comment 857 10  <||@
  Comment 863 {HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)>}  <||@
  Comment 868 [stack:40, stack:64]at scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 869 460 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 872 464 JUMP ~[] destination: B36 -> B43  <||@
  Comment 877 block B37 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 877 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 877 468 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 882 470 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 887 472 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14]  <||@
  Comment 887 {HotSpotMethod<VectorBuilder.$plus$eq(Object)>}  <||@
  Comment 887 10  <||@
  Comment 892 [stack:40, stack:64]at scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 893 474 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 896 478 JUMP ~[] destination: B37 -> B43  <||@
  Comment 901 block B38 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 901 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 901 482 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 906 484 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 911 486 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14]  <||@
  Comment 911 {HotSpotMethod<SetBuilder.$plus$eq(Object)>}  <||@
  Comment 911 10  <||@
  Comment 916 [stack:40, stack:64]at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 917 488 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 920 492 JUMP ~[] destination: B38 -> B43  <||@
  Comment 925 block B19 null  <||@
  Comment 925 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 925 268 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5  <||@
  Comment 941 15  <||@
  Comment 947 block B16 null  <||@
  Comment 947 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 947 226 stack:80|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 952 228 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 957 230 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 962 232 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 967 234 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Function1.apply(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:14]  <||@
  Comment 967 7  <||@
  Comment 983 {HotSpotMethod<Function1.apply(Object)>}  <||@
  Comment 988 [stack:40, stack:64]at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 989 236 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 992 240 JUMP ~[] destination: B16 -> B17  <||@
  Comment 997 block B7 null  <||@
  Comment 997 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 997 104 rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1001 106 rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:7, 13, 14]  <||@
  Comment 1001 [rax:0, stack:16, stack:32, stack:40, stack:52, stack:64]at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7, duringCall: false, rethrow: false]
              |0             |1               |2                  |3                 
     locals:  |-             |stack:84|DWORD  |stack:64|QWORD[.]  |stack:80|QWORD[.] 
     stack:   |rax|QWORD[.]  |                |                   |                  
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1001 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1008 108 rdx|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 1018 110 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@480dc3ea encoding: base: 34359738368 shift: 3  <||@
  Comment 1022 112 AMD64HOTSPOTSTRATEGYSWITCH ~rsi|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/WrappedArrayBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/VectorBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}] keyTargets: [B7 -> B8, B7 -> B9, B7 -> B10, B7 -> B11, B7 -> B12] defaultTarget: B7 -> B13 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 1022 {DataSection[0x10]}  <||@
  Comment 1035 {DataSection[0x18]}  <||@
  Comment 1048 {DataSection[0x20]}  <||@
  Comment 1061 {DataSection[0x28]}  <||@
  Comment 1074 {DataSection[0x30]}  <||@
  Comment 1092 block B8 null  <||@
  Comment 1092 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1092 116 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1097 118 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1102 120 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14]  <||@
  Comment 1102 10  <||@
  Comment 1103 {HotSpotMethod<ListBuffer.$plus$eq(Object)>}  <||@
  Comment 1108 [stack:40, stack:64]at scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1109 122 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1112 126 JUMP ~[] destination: B8 -> B17  <||@
  Comment 1117 block B9 null  <||@
  Comment 1117 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1117 130 r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1122 132 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:7, 13, 14]  <||@
  Comment 1122 [rax:0, stack:16, stack:32, stack:40, stack:64]at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7, duringCall: false, rethrow: false]
              |0             |1               |2                  |3                 
     locals:  |-             |stack:84|DWORD  |stack:64|QWORD[.]  |stack:80|QWORD[.] 
     stack:   |rax|QWORD[.]  |                |                   |                  
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1122 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1126 134 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1131 136 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1136 138 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addEntry(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 2, 8, 2, 2, 2, 2, 16, 13, 14]  <||@
  Comment 1136 10  <||@
  Comment 1143 {HotSpotMethod<FlatHashTable.addEntry(Object)>}  <||@
  Comment 1148 [stack:16, stack:32, stack:40, stack:64]at scala.collection.mutable.FlatHashTable.addEntry$(FlatHashTable.scala:147) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.HashSet.addEntry(HashSet.scala:40) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:80|QWORD[.] 
  at scala.collection.mutable.FlatHashTable.addElem(FlatHashTable.scala:139) [bci: 8, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:80|QWORD[.] 
  at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:80|QWORD[.] 
  at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:80|QWORD[.] 
  at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1149 140 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1154 144 JUMP ~[] destination: B9 -> B17  <||@
  Comment 1159 block B10 null  <||@
  Comment 1159 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1159 148 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1164 150 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1169 152 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14]  <||@
  Comment 1169 10  <||@
  Comment 1175 {HotSpotMethod<WrappedArrayBuilder.$plus$eq(Object)>}  <||@
  Comment 1180 [stack:40, stack:64]at scala.collection.mutable.WrappedArrayBuilder.$plus$eq(WrappedArrayBuilder.scala:26) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1181 154 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1184 158 JUMP ~[] destination: B10 -> B17  <||@
  Comment 1189 block B11 null  <||@
  Comment 1189 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1189 162 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1194 164 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1199 166 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<VectorBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14]  <||@
  Comment 1199 {HotSpotMethod<VectorBuilder.$plus$eq(Object)>}  <||@
  Comment 1199 10  <||@
  Comment 1204 [stack:40, stack:64]at scala.collection.immutable.VectorBuilder.$plus$eq(Vector.scala:710) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1205 168 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1208 172 JUMP ~[] destination: B11 -> B17  <||@
  Comment 1213 block B12 null  <||@
  Comment 1213 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1213 176 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1218 178 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1223 180 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<SetBuilder.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@21f8fae5 state [bci:2, 16, 13, 14]  <||@
  Comment 1223 {HotSpotMethod<SetBuilder.$plus$eq(Object)>}  <||@
  Comment 1223 10  <||@
  Comment 1228 [stack:40, stack:64]at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:32|QWORD[.]  |stack:56|QWORD[.]   <||@
  Comment 1229 182 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1232 186 JUMP ~[] destination: B12 -> B17  <||@
  Comment 1237 block B30 null  <||@
  Comment 1237 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1237 380 r11|DWORD = MOVE input: int[-91403|0xfffffffffffe9af5]  <||@
  Comment 1243 390 JUMP ~[] destination: B30 -> B41  <||@
  Comment 1243 block B41 null  <||@
  Comment 1243 522 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1243 498 rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1248 500 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1252 502 r9|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1257 504 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1262 524 MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD  <||@
  Comment 1269 526 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 1280 528 DEOPT info [bci:7, 13, 14]  <||@
  Comment 1280 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f43f72afda0, value=0x7f43d3887084]:0x7f43d3887084}  <||@
  Comment 1285 [rax:0, rdi:0, r9:0, r10:0, stack:64]at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7, duringCall: false, rethrow: false]
              |0             |1          |2             |3           
     locals:  |-             |rcx|DWORD  |rdi|QWORD[.]  |r9|QWORD[.] 
     stack:   |rax|QWORD[.]  |           |              |            
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2            
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]   <||@
  Comment 1286 block B13 null  <||@
  Comment 1286 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1286 190 r10|DWORD = MOVE input: int[-58163|0xffffffffffff1ccd]  <||@
  Comment 1292 200 JUMP ~[] destination: B13 -> B15  <||@
  Comment 1292 block B15 null  <||@
  Comment 1292 216 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1292 192 rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1297 194 rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1301 196 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1306 198 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1311 218 MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD  <||@
  Comment 1318 220 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 1329 222 DEOPT info [bci:7, 13, 14]  <||@
  Comment 1329 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f43f72afda0, value=0x7f43d3887084]:0x7f43d3887084}  <||@
  Comment 1334 [rax:0, rsi:0, rdi:0, r8:0, stack:64]at scala.collection.TraversableLike.$anonfun$filterImpl$1(TraversableLike.scala:248) [bci: 7, duringCall: false, rethrow: false]
              |0             |1          |2             |3           
     locals:  |-             |rcx|DWORD  |rdi|QWORD[.]  |r8|QWORD[.] 
     stack:   |rax|QWORD[.]  |           |              |            
  at scala.collection.TraversableLike$$Lambda$5955/0x0000000841d61040.apply(Object) [bci: 13, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.immutable.List.foreach(List.scala:378) [bci: 14, duringCall: true, rethrow: false]
              |0  |1                  |2            
     locals:  |-  |stack:32|QWORD[.]  |rsi|QWORD[.]   <||@
  Comment 1335 block B45 null  <||@
  Comment 1335 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1335 574 r11|DWORD = MOVE input: int[-12339|0xffffffffffffcfcd]  <||@
  Comment 1341 576 JUMP ~[] destination: B45 -> B46  <||@
  Comment 1341 block B46 null  <||@
  Comment 1341 578 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1341 580 MOV (x: [r15|QWORD + 1004], y: r11|DWORD) size: DWORD  <||@
  Comment 1348 582 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 1359 584 DEOPT info [bci:2]  <||@
  Comment 1359 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f43f72afda0, value=0x7f43d3887084]:0x7f43d3887084}  <||@
  Comment 1364 [r10:0, stack:64]at scala.collection.immutable.List.foreach(List.scala:377) [bci: 2, duringCall: false, rethrow: false]
              |0  |1                  |2            
     locals:  |-  |stack:32|QWORD[.]  |r10|QWORD[.]   <||@
  Comment 1365 block B40 null  <||@
  Comment 1365 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1365 510 r11|DWORD = MOVE input: int[-89123|0xfffffffffffea3dd]  <||@
  Comment 1371 520 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1376 block B34 null  <||@
  Comment 1376 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1376 426 r11|DWORD = MOVE input: int[-91923|0xfffffffffffe98ed]  <||@
  Comment 1382 436 JUMP ~[] destination: B34 -> B41  <||@
  Comment 1387 block B23 null  <||@
  Comment 1387 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1387 298 r11|DWORD = MOVE input: int[-87563|0xfffffffffffea9f5]  <||@
  Comment 1393 300 JUMP ~[] destination: B23 -> B46  <||@
  Comment 1395 block B44 null  <||@
  Comment 1395 566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1395 568 r11|DWORD = MOVE input: int[-84019|0xfffffffffffeb7cd]  <||@
  Comment 1401 570 JUMP ~[] destination: B44 -> B46  <||@
  Comment 1403 block B39 null  <||@
  Comment 1403 494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1403 496 r11|DWORD = MOVE input: int[-27443|0xffffffffffff94cd]  <||@
  Comment 1409 506 JUMP ~[] destination: B39 -> B41  <||@
  Comment 1414 block B14 null  <||@
  Comment 1414 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1414 204 r10|DWORD = MOVE input: int[-78627|0xfffffffffffeccdd]  <||@
  Comment 1420 214 JUMP ~[] destination: B14 -> B15  <||@
  Comment 1425 block B25 null  <||@
  Comment 1425 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1425 336 r11|DWORD = MOVE input: int[-88339|0xfffffffffffea6ed]  <||@
  Comment 1431 346 JUMP ~[] destination: B25 -> B41  <||@
  Comment 1436 block B47 null  <||@
  Comment 1436 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1436 588 r10|DWORD = MOVE input: int[-72499|0xfffffffffffee4cd]  <||@
  Comment 1442 590 JUMP ~[] destination: B47 -> B49  <||@
  Comment 1442 block B49 null  <||@
  Comment 1442 598 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1442 600 MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD  <||@
  Comment 1449 602 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 1460 604 DEOPT info [bci:0]  <||@
  Comment 1460 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f43f72afda0, value=0x7f43d3887084]:0x7f43d3887084}  <||@
  Comment 1465 [rdx:0, rsi:0]at scala.collection.immutable.List.foreach(List.scala:376) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 1466 block B48 null  <||@
  Comment 1466 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1466 594 r10|DWORD = MOVE input: int[-46387|0xffffffffffff4acd]  <||@
  Comment 1472 596 JUMP ~[] destination: B48 -> B49  <||@
  Comment 1474 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f43d3976b80:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1474 4  <||@
  Comment 1480 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f43f72afda8, value=0x7f43d3886e20]:0x7f43d3886e20}  <||@
  Comment 1480 5  <||@
  HexCodeFile>>> <|@
end_nmethod
