begin_compilation
  name " HotSpotCompilation-12867[scala.collection.mutable.HashSet.index(int)]"
  method "HotSpotCompilation-12867[scala.collection.mutable.HashSet.index(int)]"
  date 1648613897595
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a74 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a74  <|@  <|@
f <@~|@floating>@ <|@
tid a36 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 0]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
rawvalue: Class:scala.util.hashing.package$
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:scala.util.hashing.package$]
=== Inputs ===
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: a36 
index: - 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a36 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a74 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: package$.MODULE$
nodeSourcePosition: at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 0]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
nullCheck: false
stamp: n# Lscala/util/hashing/package$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v79 
=== Succesors ===
next: v82 
=== Usages ===
v82 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v79 #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lscala/collection/mutable/HashSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v78 v80 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i29 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashSet.index(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 41
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v71 v82 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a74 
=== Succesors ===
next: a75 
=== Usages ===
=== Predecessor ===
a74 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a74 #next: a75  <|@  <|@
f <@~|@floating>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a75 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a75 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.table
nodeSourcePosition: at scala.collection.mutable.HashSet.table(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 15]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v80 
=== Succesors ===
next: v64 
=== Usages ===
v81 v46 
=== Predecessor ===
v82 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v80 #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 20]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a75 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a75  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 20]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v61 
=== Usages ===
=== Predecessor ===
a75 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v63 #falseSuccessor: v61  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 20]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid j68 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -12043
stableDimension: 0
stamp: i32 [-12043] ⇊00000000ffffd0f5 ⇈00000000ffffd0f5
stampKind: i32
value: int[-12043|0xffffffffffffd0f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i73 
speculation: j68 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i73 speculation: j68  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 20]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i76 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i76  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a75 
=== Succesors ===
=== Usages ===
i76 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i76 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 20]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v81 
=== Succesors ===
next: i77 
=== Usages ===
i13 
=== Predecessor ===
v61 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v81 #next: i77  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i77 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.seedvalue
nodeSourcePosition: at scala.collection.mutable.HashSet.seedvalue(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 3]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v78 
=== Succesors ===
next: v10 
=== Usages ===
i22 i23 
=== Predecessor ===
i76 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v78 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 22]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i13 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$126/0x000000084023e040@7f857885
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 22]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i76 
y: i12 
=== Succesors ===
=== Usages ===
i15 i18 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i76 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.util.hashing.package$.byteswap32(package.scala:26) [bci: 1]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
rawvalue: -1640532531
stableDimension: 0
stamp: i32 [-1640532531] ⇊000000009e3775cd ⇈000000009e3775cd
stampKind: i32
value: int[-1640532531|0xffffffff9e3775cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i29 i31 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$171/0x00000008402cc040@386c690f
nodeSourcePosition: at scala.util.hashing.package$.byteswap32(package.scala:26) [bci: 3]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32
=== Inputs ===
x: i2 
y: i28 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i2 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.reverseBytes(int) [bci: -1]
at scala.util.hashing.package$.byteswap32(package.scala:27) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32
=== Inputs ===
value: i29 
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@ReverseBytes|@org.graalvm.compiler.replacements.nodes.ReverseBytesNode>@ value: i29  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$171/0x00000008402cc040@386c690f
nodeSourcePosition: at scala.util.hashing.package$.byteswap32(package.scala:28) [bci: 9]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32
=== Inputs ===
x: i30 
y: i28 
=== Succesors ===
=== Usages ===
i22 i24 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i30 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$180/0x0000000840351c40@2520e02d
nodeSourcePosition: at java.base@11.0.14.1/java.lang.Integer.rotateRight(Integer.java:1734) [bci: 2]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 8]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32
=== Inputs ===
x: i31 
y: i77 
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i31 y: i77  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$2321/0x0000000840d45840@69aa18af
nodeSourcePosition: at java.base@11.0.14.1/java.lang.Integer.rotateRight(Integer.java:1734) [bci: 5]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 8]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32
=== Inputs ===
value: i77 
=== Succesors ===
=== Usages ===
i24 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i77  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$127/0x000000084023e440@319dbfa
nodeSourcePosition: at java.base@11.0.14.1/java.lang.Integer.rotateRight(Integer.java:1734) [bci: 6]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 8]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32
=== Inputs ===
x: i31 
y: i23 
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i31 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$128/0x000000084023d840@7016ec64
nodeSourcePosition: at java.base@11.0.14.1/java.lang.Integer.rotateRight(Integer.java:1734) [bci: 7]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 8]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32
=== Inputs ===
x: i22 
y: i24 
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i22 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:334) [bci: 25]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.bitCount(int) [bci: -1]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:334) [bci: 28]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32 [0 - 32] ⇈000000000000003f
=== Inputs ===
value: i13 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@BitCount|@org.graalvm.compiler.replacements.nodes.BitCountNode>@ value: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$200/0x0000000840380440@19c69469
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:334) [bci: 31]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32 [0 - 32] ⇈000000000000003f
=== Inputs ===
x: i14 
y: i15 
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i14 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$180/0x0000000840351c40@2520e02d
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:334) [bci: 32]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32
=== Inputs ===
x: i25 
y: i16 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i25 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$125/0x000000084023fc40@6aa172d5
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:334) [bci: 34]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32
=== Inputs ===
x: i13 
y: i17 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i13 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 5]
stamp: void
=== Inputs ===
result: i18 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i77 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i18 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = IMUL v1|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = BSWAP v8|DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = IMUL v9|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHR (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = NEG v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHL (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = OR (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = POPCNT v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v16|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHR (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = AND (x: v7|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a74 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a74  <|@  <|@
f <@~|@floating>@ <|@
tid a36 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 0]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
rawvalue: Class:scala.util.hashing.package$
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:scala.util.hashing.package$]
=== Inputs ===
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
result [v2|QWORD[.] + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: a36 
index: - 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a36 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a74 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: package$.MODULE$
nodeSourcePosition: at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 0]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
nullCheck: false
stamp: n# Lscala/util/hashing/package$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v79 
=== Succesors ===
next: v82 
=== Usages ===
v82 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v79 #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lscala/collection/mutable/HashSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v78 v80 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i29 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashSet.index(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 41
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v71 v82 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a74 
=== Succesors ===
next: a75 
=== Usages ===
=== Predecessor ===
a74 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a74 #next: a75  <|@  <|@
f <@~|@floating>@ <|@
tid v80 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a75 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a75 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.table
nodeSourcePosition: at scala.collection.mutable.HashSet.table(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 15]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v80 
=== Succesors ===
next: v64 
=== Usages ===
v81 v46 
=== Predecessor ===
v82 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v80 #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 20]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a75 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a75  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 20]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v61 
=== Usages ===
=== Predecessor ===
a75 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v63 #falseSuccessor: v61  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 20]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid j68 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
result int[-12043|0xffffffffffffd0f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -12043
stableDimension: 0
stamp: i32 [-12043] ⇊00000000ffffd0f5 ⇈00000000ffffd0f5
stampKind: i32
value: int[-12043|0xffffffffffffd0f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i73 
speculation: j68 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i73 speculation: j68  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 20]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i76 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i76  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a75 
=== Succesors ===
=== Usages ===
i76 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i76 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 20]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v81 
=== Succesors ===
next: i77 
=== Usages ===
i13 
=== Predecessor ===
v61 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v81 #next: i77  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i77 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.seedvalue
nodeSourcePosition: at scala.collection.mutable.HashSet.seedvalue(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 3]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v78 
=== Succesors ===
next: v10 
=== Usages ===
i22 i23 
=== Predecessor ===
i76 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v78 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 22]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i13 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$126/0x000000084023e040@7f857885
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 22]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i76 
y: i12 
=== Succesors ===
=== Usages ===
i15 i18 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i76 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result int[-1640532531|0xffffffff9e3775cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.util.hashing.package$.byteswap32(package.scala:26) [bci: 1]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
rawvalue: -1640532531
stableDimension: 0
stamp: i32 [-1640532531] ⇊000000009e3775cd ⇈000000009e3775cd
stampKind: i32
value: int[-1640532531|0xffffffff9e3775cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i29 i31 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$171/0x00000008402cc040@386c690f
nodeSourcePosition: at scala.util.hashing.package$.byteswap32(package.scala:26) [bci: 3]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32
=== Inputs ===
x: i2 
y: i28 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i2 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.reverseBytes(int) [bci: -1]
at scala.util.hashing.package$.byteswap32(package.scala:27) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32
=== Inputs ===
value: i29 
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@ReverseBytes|@org.graalvm.compiler.replacements.nodes.ReverseBytesNode>@ value: i29  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$171/0x00000008402cc040@386c690f
nodeSourcePosition: at scala.util.hashing.package$.byteswap32(package.scala:28) [bci: 9]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32
=== Inputs ===
x: i30 
y: i28 
=== Succesors ===
=== Usages ===
i22 i24 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i30 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$180/0x0000000840351c40@2520e02d
nodeSourcePosition: at java.base@11.0.14.1/java.lang.Integer.rotateRight(Integer.java:1734) [bci: 2]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 8]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32
=== Inputs ===
x: i31 
y: i77 
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i31 y: i77  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$2321/0x0000000840d45840@69aa18af
nodeSourcePosition: at java.base@11.0.14.1/java.lang.Integer.rotateRight(Integer.java:1734) [bci: 5]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 8]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32
=== Inputs ===
value: i77 
=== Succesors ===
=== Usages ===
i24 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i77  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$127/0x000000084023e440@319dbfa
nodeSourcePosition: at java.base@11.0.14.1/java.lang.Integer.rotateRight(Integer.java:1734) [bci: 6]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 8]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32
=== Inputs ===
x: i31 
y: i23 
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i31 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$128/0x000000084023d840@7016ec64
nodeSourcePosition: at java.base@11.0.14.1/java.lang.Integer.rotateRight(Integer.java:1734) [bci: 7]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 8]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32
=== Inputs ===
x: i22 
y: i24 
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i22 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result int[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:334) [bci: 25]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.bitCount(int) [bci: -1]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:334) [bci: 28]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32 [0 - 32] ⇈000000000000003f
=== Inputs ===
value: i13 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@BitCount|@org.graalvm.compiler.replacements.nodes.BitCountNode>@ value: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$200/0x0000000840380440@19c69469
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:334) [bci: 31]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32 [0 - 32] ⇈000000000000003f
=== Inputs ===
x: i14 
y: i15 
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i14 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$180/0x0000000840351c40@2520e02d
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:334) [bci: 32]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32
=== Inputs ===
x: i25 
y: i16 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i25 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$125/0x000000084023fc40@6aa172d5
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:334) [bci: 34]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
stamp: i32
=== Inputs ===
x: i13 
y: i17 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i13 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 5]
stamp: void
=== Inputs ===
result: i18 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i77 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i18 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = IMUL v1|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = BSWAP v8|DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = IMUL v9|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHR (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = NEG v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHL (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = OR (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = POPCNT v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v16|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHR (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = AND (x: v7|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = IMUL v1|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = BSWAP v8|DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = IMUL v9|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHR (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = NEG v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHL (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = OR (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = POPCNT v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v16|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHR (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = AND (x: v7|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = IMUL v1|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = BSWAP v8|DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = IMUL v9|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHR (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = NEG v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHL (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = OR (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = POPCNT v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v16|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHR (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = AND (x: v7|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = IMUL v1|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = BSWAP v8|DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = IMUL v9|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHR (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = NEG v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHL (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = OR (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = POPCNT v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v16|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHR (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = AND (x: v7|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = IMUL v1|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = BSWAP v8|DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = IMUL v9|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHR (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = NEG v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHL (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = OR (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = POPCNT v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v16|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHR (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = AND (x: v7|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ instruction v7|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction v8|DWORD = IMUL v1|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   32  <|@ instruction v9|DWORD = BSWAP v8|DWORD <|@ <|@
      nr   34  <|@ instruction v10|DWORD = IMUL v9|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v11|DWORD = SHR (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction v12|DWORD = NEG v6|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction v13|DWORD = SHL (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction v14|DWORD = OR (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction v15|DWORD = POPCNT v7|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v16|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   52  <|@ instruction v17|DWORD = SUB (x: v16|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction v18|DWORD = SHR (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction v19|DWORD = AND (x: v7|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ instruction v7|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction v8|DWORD = IMUL v1|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   32  <|@ instruction v9|DWORD = BSWAP v8|DWORD <|@ <|@
      nr   34  <|@ instruction v10|DWORD = IMUL v9|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v11|DWORD = SHR (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction v12|DWORD = NEG v6|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction v13|DWORD = SHL (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction v14|DWORD = OR (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction v15|DWORD = POPCNT v7|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v16|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   52  <|@ instruction v17|DWORD = SUB (x: v16|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction v18|DWORD = SHR (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction v19|DWORD = AND (x: v7|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v19|d [0, 1[[60, 62[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v6|d [0, 1[[36, 39[[42, 45[[54, 57[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 26[[64, 71[6 MustHaveRegister 16 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [8, 30[[64, 71[8 MustHaveRegister 30 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q -1 [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [12, 14[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [16, 24[16 MustHaveRegister 18 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [24, 28[24 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [26, 40[26 MustHaveRegister 36 ShouldHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d v5|d [28, 58[28 MustHaveRegister 48 ShouldHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [30, 32[30 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v8|d [32, 34[32 MustHaveRegister 34 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [34, 44[34 MustHaveRegister 38 ShouldHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v10|d [38, 46[38 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v6|d [40, 42[40 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d v10|d [44, 46[44 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d v11|d [46, 56[46 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d -1 [48, 53[48 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [50, 52[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d v16|d [52, 54[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v14|d [56, 58[56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d v7|d [58, 60[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v19|d [0, 1[[60, 62[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v6|d [0, 1[[36, 39[[42, 45[[54, 57[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 26[[64, 71[6 MustHaveRegister 16 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 30[[64, 71[8 MustHaveRegister 30 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q -1 [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rcx|d]" v3|d -1 [12, 14[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rcx|d]" v4|d -1 [16, 24[16 MustHaveRegister 18 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rcx|d]" v5|d -1 [24, 28[24 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [26, 40[26 MustHaveRegister 36 ShouldHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r10|d]" v7|d v5|d [28, 58[28 MustHaveRegister 48 ShouldHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rcx|d]" v8|d -1 [30, 32[30 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d v8|d [32, 34[32 MustHaveRegister 34 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d -1 [34, 44[34 MustHaveRegister 38 ShouldHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r8|d]" v11|d v10|d [38, 46[38 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d v6|d [40, 42[40 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r11|d]" v13|d v10|d [44, 46[44 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[r8|d]" v14|d v11|d [46, 56[46 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rcx|d]" v15|d -1 [48, 53[48 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d -1 [50, 52[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v16|d [52, 54[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r8|d]" v18|d v14|d [56, 58[56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d v7|d [58, 60[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ instruction v7|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction v8|DWORD = IMUL v1|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   32  <|@ instruction v9|DWORD = BSWAP v8|DWORD <|@ <|@
      nr   34  <|@ instruction v10|DWORD = IMUL v9|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v11|DWORD = SHR (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction v12|DWORD = NEG v6|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction v13|DWORD = SHL (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction v14|DWORD = OR (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction v15|DWORD = POPCNT v7|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v16|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   52  <|@ instruction v17|DWORD = SUB (x: v16|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction v18|DWORD = SHR (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction v19|DWORD = AND (x: v7|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v19|d [0, 1[[60, 62[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v6|d [0, 1[[36, 39[[42, 45[[54, 57[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 26[[64, 71[6 MustHaveRegister 16 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 30[[64, 71[8 MustHaveRegister 30 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q -1 [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rcx|d]" v3|d -1 [12, 14[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rcx|d]" v4|d -1 [16, 24[16 MustHaveRegister 18 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rcx|d]" v5|d -1 [24, 28[24 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [26, 40[26 MustHaveRegister 36 ShouldHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r10|d]" v7|d v5|d [28, 58[28 MustHaveRegister 48 ShouldHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rcx|d]" v8|d -1 [30, 32[30 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d v8|d [32, 34[32 MustHaveRegister 34 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d -1 [34, 44[34 MustHaveRegister 38 ShouldHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r8|d]" v11|d v10|d [38, 46[38 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d v6|d [40, 42[40 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r11|d]" v13|d v10|d [44, 46[44 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[r8|d]" v14|d v11|d [46, 56[46 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rcx|d]" v15|d -1 [48, 53[48 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d -1 [50, 52[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v16|d [52, 54[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r8|d]" v18|d v14|d [56, 58[56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d v7|d [58, 60[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ instruction v7|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction v8|DWORD = IMUL v1|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   32  <|@ instruction v9|DWORD = BSWAP v8|DWORD <|@ <|@
      nr   34  <|@ instruction v10|DWORD = IMUL v9|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v11|DWORD = SHR (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction v12|DWORD = NEG v6|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction v13|DWORD = SHL (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction v14|DWORD = OR (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction v15|DWORD = POPCNT v7|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v16|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   52  <|@ instruction v17|DWORD = SUB (x: v16|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction v18|DWORD = SHR (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction v19|DWORD = AND (x: v7|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v19|d [0, 1[[60, 62[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v6|d [0, 1[[36, 39[[42, 45[[54, 57[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 26[[64, 71[6 MustHaveRegister 16 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 30[[64, 71[8 MustHaveRegister 30 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q -1 [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rcx|d]" v3|d -1 [12, 14[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rcx|d]" v4|d -1 [16, 24[16 MustHaveRegister 18 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rcx|d]" v5|d -1 [24, 28[24 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [26, 40[26 MustHaveRegister 36 ShouldHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r10|d]" v7|d v5|d [28, 58[28 MustHaveRegister 48 ShouldHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rcx|d]" v8|d -1 [30, 32[30 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d v8|d [32, 34[32 MustHaveRegister 34 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d -1 [34, 44[34 MustHaveRegister 38 ShouldHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r8|d]" v11|d v10|d [38, 46[38 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d v6|d [40, 42[40 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r11|d]" v13|d v10|d [44, 46[44 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[r8|d]" v14|d v11|d [46, 56[46 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rcx|d]" v15|d -1 [48, 53[48 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d -1 [50, 52[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v16|d [52, 54[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r8|d]" v18|d v14|d [56, 58[56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d v7|d [58, 60[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ instruction v7|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction v8|DWORD = IMUL v1|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   32  <|@ instruction v9|DWORD = BSWAP v8|DWORD <|@ <|@
      nr   34  <|@ instruction v10|DWORD = IMUL v9|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v11|DWORD = SHR (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction v12|DWORD = NEG v6|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction v13|DWORD = SHL (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction v14|DWORD = OR (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction v15|DWORD = POPCNT v7|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v16|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   52  <|@ instruction v17|DWORD = SUB (x: v16|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction v18|DWORD = SHR (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction v19|DWORD = AND (x: v7|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ instruction v7|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction v8|DWORD = IMUL v1|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   32  <|@ instruction v9|DWORD = BSWAP v8|DWORD <|@ <|@
      nr   34  <|@ instruction v10|DWORD = IMUL v9|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v11|DWORD = SHR (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction v12|DWORD = NEG v6|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE v12|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction v13|DWORD = SHL (x: v10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction v14|DWORD = OR (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction v15|DWORD = POPCNT v7|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v16|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   52  <|@ instruction v17|DWORD = SUB (x: v16|DWORD, ~y: v15|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction v18|DWORD = SHR (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction v19|DWORD = AND (x: v7|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   12  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = IMUL rdx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = NEG rax|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = POPCNT r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r8|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction r10|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   12  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = IMUL rdx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = NEG rax|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = POPCNT r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r8|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction r10|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   12  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = IMUL rdx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = NEG rax|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = POPCNT r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r8|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction r10|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   12  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = IMUL rdx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = NEG rax|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = POPCNT r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r8|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction r10|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   12  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = IMUL rdx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = NEG rax|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = POPCNT r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r8|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction r10|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   12  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = IMUL rdx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = NEG rax|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = POPCNT r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r8|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction r10|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   12  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = IMUL rdx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = NEG rax|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = POPCNT r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r8|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction r10|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   12  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = IMUL rdx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = NEG rax|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = POPCNT r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r8|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction r10|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   12  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = IMUL rdx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = NEG rax|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = POPCNT r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r8|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction r10|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   12  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = IMUL rdx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = NEG rax|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = POPCNT r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r8|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction r10|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   12  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = IMUL rdx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction r8|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = NEG rax|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = POPCNT r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   52  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r8|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction r10|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction MOV [r15|QWORD + 1004] y: -12043 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokestatic  #27         // scala.collection.mutable.FlatHashTable.index$:(scala.collection.mutable.FlatHashTable, int)int
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e20349bc00000000080000004d03d449bc0000000000000000493bc20f85d8ffffff906666660f1f840000000000660f1f440000660f1f44000089842400c0feff4883ec1848896c241048b9addeaddeaddeadde8b4970418504cc8b4e1c85c90f845e0000008b0ccd0c0000008b4618448bd141ffca69cacd75379e0fc94469d9cd75379e8bc8458bc341d3e8f7d88bc841d3e3450bc3f3410fb8cab8200000002bc18bc841d3e84523d0418bc2488b6c24104883c418498b8f080100008501c5f877c341c787ec030000f5d0ffff49c787f803000000000000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 34 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f5120c7edb8, value=0x7f50fb888080]:0x7f50fb888080}  <||@
  Comment 64 [stack overflow check]  <||@
  Comment 64 3  <||@
  Comment 64 1  <||@
  Comment 75 block B0 null  <||@
  Comment 75 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 80 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD  <||@
  Comment 80 10 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$]  <||@
  Comment 80 {Object[Class:scala.util.hashing.package$]}  <||@
  Comment 90 12 rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD  <||@
  Comment 93 14 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0]  <||@
  Comment 93 [rsi:0]at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 93 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 97 16 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 100 18 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 102 20 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 108 block B2 null  <||@
  Comment 108 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 108 24 rcx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 115 26 rax|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 118 28 r10|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 124 30 rcx|DWORD = IMUL rdx|DWORD y: -1640532531 size: DWORD  <||@
  Comment 130 32 rcx|DWORD = BSWAP rcx|DWORD  <||@
  Comment 132 34 r11|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD  <||@
  Comment 139 36 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 141 38 r8|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 147 40 rax|DWORD = NEG rax|DWORD size: DWORD  <||@
  Comment 149 42 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 151 44 r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 154 46 r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 157 48 rcx|DWORD = POPCNT r10|DWORD size: DWORD  <||@
  Comment 162 50 rax|DWORD = MOVE input: int[32|0x20]  <||@
  Comment 167 52 rax|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 169 54 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 171 56 r8|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 174 58 r10|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 177 60 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 180 62 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8  <||@
  Comment 196 15  <||@
  Comment 202 block B1 null  <||@
  Comment 202 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 202 66 MOV [r15|QWORD + 1004] y: -12043 size: DWORD  <||@
  Comment 213 68 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 224 70 DEOPT info [bci:0]  <||@
  Comment 224 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f5120c7eda0, value=0x7f50fb887084]:0x7f50fb887084}  <||@
  Comment 229 [rsi:0]at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 230 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f50fb977a80:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 230 4  <||@
  Comment 236 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f5120c7eda8, value=0x7f50fb886e20]:0x7f50fb886e20}  <||@
  Comment 236 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-12867[scala.collection.mutable.HashSet.index(int)]"
  method "HotSpotCompilation-12867[scala.collection.mutable.HashSet.index(int)]"
  date 1648613897638
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f51067687a0 448b560849c1e20349bc00000000080000004d03d449bc0000000000000000493bc20f85b8f811f5906666660f1f840000000000660f1f440000660f1f44000089842400c0feff4883ec1848896c241048b908214f47070000008b4970418504cc8b4e1c85c90f845e0000008b0ccd0c0000008b4618448bd141ffca69cacd75379e0fc94469d9cd75379e8bc8458bc341d3e8f7d88bc841d3e3450bc3f3410fb8cab8200000002bc18bc841d3e84523d0418bc2488b6c24104883c418498b8f080100008501c5f877c341c787ec030000f5d0ffff49c787f803000000000000e8ffe711f590e8f5f120f590e88fe511f590f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 34 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f5120c7edb8, value=0x7f50fb888080]:0x7f50fb888080}  <||@
  Comment 64 [stack overflow check]  <||@
  Comment 64 3  <||@
  Comment 64 1  <||@
  Comment 75 block B0 null  <||@
  Comment 75 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 80 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@60cc69d1 slotKind: QWORD  <||@
  Comment 80 10 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$]  <||@
  Comment 80 {Object[Class:scala.util.hashing.package$]}  <||@
  Comment 90 12 rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD  <||@
  Comment 93 14 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0]  <||@
  Comment 93 [rsi:0]at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 93 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 97 16 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 100 18 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 102 20 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 108 block B2 null  <||@
  Comment 108 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 108 24 rcx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 115 26 rax|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 118 28 r10|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 124 30 rcx|DWORD = IMUL rdx|DWORD y: -1640532531 size: DWORD  <||@
  Comment 130 32 rcx|DWORD = BSWAP rcx|DWORD  <||@
  Comment 132 34 r11|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD  <||@
  Comment 139 36 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 141 38 r8|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 147 40 rax|DWORD = NEG rax|DWORD size: DWORD  <||@
  Comment 149 42 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 151 44 r11|DWORD = SHL (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 154 46 r8|DWORD = OR (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 157 48 rcx|DWORD = POPCNT r10|DWORD size: DWORD  <||@
  Comment 162 50 rax|DWORD = MOVE input: int[32|0x20]  <||@
  Comment 167 52 rax|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 169 54 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 171 56 r8|DWORD = SHR (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 174 58 r10|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 177 60 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 180 62 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@5208eac8  <||@
  Comment 196 15  <||@
  Comment 202 block B1 null  <||@
  Comment 202 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 202 66 MOV [r15|QWORD + 1004] y: -12043 size: DWORD  <||@
  Comment 213 68 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 224 70 DEOPT info [bci:0]  <||@
  Comment 224 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f5120c7eda0, value=0x7f50fb887084]:0x7f50fb887084}  <||@
  Comment 229 [rsi:0]at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 230 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f50fb977a80:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 230 4  <||@
  Comment 236 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f5120c7eda8, value=0x7f50fb886e20]:0x7f50fb886e20}  <||@
  Comment 236 5  <||@
  HexCodeFile>>> <|@
end_nmethod
