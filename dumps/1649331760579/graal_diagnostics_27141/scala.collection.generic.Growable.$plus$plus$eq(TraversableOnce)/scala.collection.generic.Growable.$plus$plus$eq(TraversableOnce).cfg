begin_compilation
  name " HotSpotCompilation-41666[scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce)]"
  method "HotSpotCompilation-41666[scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce)]"
  date 1649334769411
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v891 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v891  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! -
uncheckedStamp: a! Lscala/collection/generic/Growable;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v945 ?150 ?170 v172 a486 ?175 v171 ?68 v43 ?508 ?166 ?72 ?159 ?79 ?103 ?162 v187 v910 a111 ?164 ?131 a111 v909 v191 ?137 ?138 a111 ?163 ?514 ?514 j824 a111 a111 a111 a111 a111 v230 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Lscala/collection/TraversableOnce;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v236 v931 ?59 v241 a71 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Growable.$plus$plus$eq(TraversableOnce)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Growable.scala
sourceLine: 58
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v520 a627 v891 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@~|@floating>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v891 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v931 
=== Succesors ===
next: v892 
=== Usages ===
v570 v880 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v931 #next: v892  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v891 
=== Succesors ===
=== Usages ===
v57 v915 v916 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v891  <|@  <|@
f <@~|@floating>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: v570 
index: - 
=== Succesors ===
=== Usages ===
v346 v892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v570 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SecondarySuperCache
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:66) [bci: 10]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v915 
=== Succesors ===
next: v313 
=== Usages ===
v310 
=== Predecessor ===
v891 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v915 #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
rawvalue: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v310 v346 v334 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:66) [bci: 14]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v892 
y: v302 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v892 y: v302  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 5]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i134 i145 i338 i394 i461 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i329 i385 i452 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.metaspaceArrayBaseOffset(GraalHotSpotVMConfig) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 4]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i330 i386 i453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 6]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
?91 v104 i322 i380 i447 v606 v644 v672 v735 v782 v841 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:66) [bci: 17]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v310 
=== Succesors ===
trueSuccessor: v311 
falseSuccessor: v312 
=== Usages ===
=== Predecessor ===
v892 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v310 #trueSuccessor: v311 #falseSuccessor: v312  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:67) [bci: 20]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v353  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
v311 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 29]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 2]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
rawvalue: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 34359738368 shift: 3)
stampKind: Klass*(compressed base: 34359738368 shift: 3)
value: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 2]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v891 
y: v879 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v891 y: v879  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 5]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v880 
=== Succesors ===
trueSuccessor: v315 
falseSuccessor: v316 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v880 #trueSuccessor: v315 #falseSuccessor: v316  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:101) [bci: 8]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v354  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
v315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 17]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j343 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j343  <|@  <|@
f <@~|@floating>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: v570 
index: - 
=== Succesors ===
=== Usages ===
j343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v570 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j343 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 27]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v916 
=== Succesors ===
next: i344 
=== Usages ===
v917 v918 
=== Predecessor ===
v316 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v916 #next: i344  <|@  <|@
f <@~|@floating>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j343 
index: - 
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j343 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i344 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 41]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v917 
=== Succesors ===
next: v320 
=== Usages ===
v323 
=== Predecessor ===
j343 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v917 #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
i344 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v321 
values: i73 i338 
=== Succesors ===
=== Usages ===
v323 i329 i338 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v321 values: i73 i338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v320 
=== Succesors ===
next: v326 
=== Usages ===
i322 v325 v336 v339 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v320 #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@c50510
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i322 
y: i344 
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i322 y: i344  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v323 
=== Succesors ===
trueSuccessor: v324 
falseSuccessor: v325 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v323 #trueSuccessor: v324 #falseSuccessor: v325  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 56]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j345 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j345  <|@  <|@
f <@~|@floating>@ <|@
tid i329 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$126/0x000000084014a840@131afb18
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i322 
y: i328 
=== Succesors ===
=== Usages ===
i330 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i322 y: i328  <|@  <|@
f <@~|@floating>@ <|@
tid i330 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 12]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i329 
y: i327 
=== Succesors ===
=== Usages ===
j331 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i329 y: i327  <|@  <|@
f <@~|@floating>@ <|@
tid j331 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 32
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i330 
=== Succesors ===
=== Usages ===
v918 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i330  <|@  <|@
f <@~|@floating>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j343 
index: j331 
=== Succesors ===
=== Usages ===
j345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j343 index: j331  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j345 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v918 
=== Succesors ===
next: v337 
=== Usages ===
v333 
=== Predecessor ===
v324 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v918 #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 22]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: Klass*
=== Inputs ===
input: j345 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j345  <|@  <|@
f <@~|@floating>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 66]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v333 
y: v302 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v333 y: v302  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 72]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v334 
=== Succesors ===
trueSuccessor: v336 
falseSuccessor: v335 
=== Usages ===
=== Predecessor ===
j345 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v334 #trueSuccessor: v336 #falseSuccessor: v335  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:110) [bci: 75]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v321 
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v321 #next: v346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:110) [bci: 86]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v915 
value: v302 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v915 value: v302 stateAfter: - lastLocationAccess: - #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
v346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v353 v354 v355 
=== Succesors ===
next: v893 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v353 v354 v355 #next: v893  <|@  <|@
f <@~|@floating>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v893 v895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:183) [bci: 40]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v945 
=== Succesors ===
next: v894 
=== Usages ===
v654 v883 
=== Predecessor ===
v503 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v945 #next: v894  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:183) [bci: 40]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v893 
=== Succesors ===
=== Usages ===
v919 v920 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v893  <|@  <|@
f <@~|@floating>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: v654 
index: - 
=== Succesors ===
=== Usages ===
v399 v894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v654 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SecondarySuperCache
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:66) [bci: 10]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v919 
=== Succesors ===
next: v371 
=== Usages ===
v368 
=== Predecessor ===
v893 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v919 #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v368 v399 v390 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:66) [bci: 14]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v894 
y: v360 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v894 y: v360  <|@  <|@
f <@~|@floating>@ <|@
tid j342 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 41]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v740 v846 v832 v538 v520 v528 v726 v792 v788 v678 v682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:66) [bci: 17]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v368 
=== Succesors ===
trueSuccessor: v369 
falseSuccessor: v370 
=== Usages ===
=== Predecessor ===
v894 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v368 #trueSuccessor: v369 #falseSuccessor: v370  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:67) [bci: 20]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v406  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
v369 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 29]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 2]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 34359738368 shift: 3)
stampKind: Klass*(compressed base: 34359738368 shift: 3)
value: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 2]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v893 
y: v882 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v893 y: v882  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 5]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v883 
=== Succesors ===
trueSuccessor: v373 
falseSuccessor: v374 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v883 #trueSuccessor: v373 #falseSuccessor: v374  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:101) [bci: 8]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v407  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
v373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 17]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j396 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j396  <|@  <|@
f <@~|@floating>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: v654 
index: - 
=== Succesors ===
=== Usages ===
j396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v654 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j396 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 27]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v920 
=== Succesors ===
next: i397 
=== Usages ===
v921 v922 
=== Predecessor ===
v374 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v920 #next: i397  <|@  <|@
f <@~|@floating>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j396 
index: - 
=== Succesors ===
=== Usages ===
i397 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j396 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i397 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 41]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v921 
=== Succesors ===
next: v378 
=== Usages ===
v381 
=== Predecessor ===
j396 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v921 #next: v378  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
i397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v379 
values: i73 i394 
=== Succesors ===
=== Usages ===
v381 i385 i394 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v379 values: i73 i394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v378 
=== Succesors ===
next: v384 
=== Usages ===
i380 v383 v392 v395 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v378 #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@c50510
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i380 
y: i397 
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i380 y: i397  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v381 
=== Succesors ===
trueSuccessor: v382 
falseSuccessor: v383 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v381 #trueSuccessor: v382 #falseSuccessor: v383  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 56]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j398 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j398  <|@  <|@
f <@~|@floating>@ <|@
tid i385 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$126/0x000000084014a840@131afb18
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i380 
y: i328 
=== Succesors ===
=== Usages ===
i386 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i380 y: i328  <|@  <|@
f <@~|@floating>@ <|@
tid i386 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 12]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i385 
y: i327 
=== Succesors ===
=== Usages ===
j387 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i385 y: i327  <|@  <|@
f <@~|@floating>@ <|@
tid j387 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 32
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i386 
=== Succesors ===
=== Usages ===
v922 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i386  <|@  <|@
f <@~|@floating>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j396 
index: j387 
=== Succesors ===
=== Usages ===
j398 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j396 index: j387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j398 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v922 
=== Succesors ===
next: v393 
=== Usages ===
v389 
=== Predecessor ===
v382 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v922 #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 22]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: Klass*
=== Inputs ===
input: j398 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j398  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 66]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v389 
y: v360 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v389 y: v360  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 72]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v390 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v391 
=== Usages ===
=== Predecessor ===
j398 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v390 #trueSuccessor: v392 #falseSuccessor: v391  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:110) [bci: 75]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v379 
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v379 #next: v399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:110) [bci: 86]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v919 
value: v360 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v919 value: v360 stateAfter: - lastLocationAccess: - #next: v408  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
v399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v406 v407 v408 
=== Succesors ===
next: v895 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v406 v407 v408 #next: v895  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v945 
=== Succesors ===
next: v69 
=== Usages ===
v657 
=== Predecessor ===
v505 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v945 #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v895 
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v895  <|@  <|@
f <@~|@floating>@ <|@
tid i764 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:289) [bci: 409]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v759 v861 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i720 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:264) [bci: 170]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j721 j827 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j748 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:116) [bci: 6]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:265) [bci: 180]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: 139991352238080
stableDimension: 0
stamp: i64 [139991352238080] ⇊00007f5246d26000 ⇈00007f5246d26000
stampKind: i64
value: long[139991352238080|0x7f5246d26000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j722 v957 j828 v966 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j749 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:275) [bci: 254]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: -1048576
stableDimension: 0
stamp: i64 [-1048576] ⇊fffffffffff00000 ⇈fffffffffff00000
stampKind: i64
value: long[-1048576|0xfffffffffff00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v750 v854 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j695 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:220) [bci: 375]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j696 j754 j802 j856 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a667 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a669 a779 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.secondarySuperCacheOffset(GraalHotSpotVMConfig) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:77) [bci: 18]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 v730 v836 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i898 i902 v220 a906 v229 j780 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 11]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 34359738368 shift: 3)
stampKind: Klass*(compressed base: 34359738368 shift: 3)
value: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v885 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?170 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<Growable.$plus$plus$eq(TraversableOnce)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Growable.scala
sourceLine: 58
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
?72 ?166 ?79 ?103 ?131 ?150 ?159 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v895 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a71 <|@
d <@d|@=== Debug Properties ===
stamp: a! Lscala/collection/LinearSeq;
valueDescription: a -
=== Inputs ===
merge: v70 
values: a2 a233 
=== Succesors ===
=== Usages ===
?72 ?79 v946 ?90 v235 ?103 v914 ?131 ?150 ?159 ?166 v908 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v70 values: a2 a233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.34527518172378
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v69 
=== Succesors ===
next: v896 
=== Usages ===
a71 v74 v83 v281 v291 v286 v271 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v69 #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a71 
index: - 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a71 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v946 
=== Succesors ===
next: v89 
=== Usages ===
v660 v885 
=== Predecessor ===
v70 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v946 #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v896 
=== Succesors ===
=== Usages ===
v89 v101 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v896  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hubs: [Ljdk.vm.ci.meta.Constant;@1215ac80
keyProbabilities: [D@6e33c9d3
keySuccessors: [I@18d77e8c
keys: [Ljdk.vm.ci.meta.ResolvedJavaType;@48734acd
stamp: void
=== Inputs ===
value: v660 
=== Succesors ===
successors: v85 v87 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@TypeSwitch|@org.graalvm.compiler.nodes.java.TypeSwitchNode>@ value: v660 #successors: v85 v87  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
tid ?103 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Growable.loop$1(LinearSeq)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Growable.scala
sourceLine: 52
stackSize: 0
=== Inputs ===
outerFrameState: ?170 
values: a1 a71 
=== Succesors ===
=== Usages ===
?90 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?170 values: a1 a71  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<AbstractTraversable.nonEmpty()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
at scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rethrowException: false
sourceFile: Traversable.scala
sourceLine: 104
stackSize: 0
=== Inputs ===
outerFrameState: ?103 
values: a71 
=== Succesors ===
=== Usages ===
?102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?103 values: a71  <|@  <|@
tid ?102 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<TraversableOnce.nonEmpty$(TraversableOnce)>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: TraversableOnce.scala
sourceLine: 111
stackSize: 0
=== Inputs ===
outerFrameState: ?90 
values: - 
=== Succesors ===
=== Usages ===
?91 ?510 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?90 values: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
hubs: [Ljdk.vm.ci.meta.Constant;@77bd8eef
keyProbabilities: [D@730ac9a
keySuccessors: [I@243081ee
keys: [Ljdk.vm.ci.meta.ResolvedJavaType;@76479287
stamp: void
=== Inputs ===
value: v660 
=== Succesors ===
successors: v94 v99 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@TypeSwitch|@org.graalvm.compiler.nodes.java.TypeSwitchNode>@ value: v660 #successors: v94 v99  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607018771416986051
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v95  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v967 
=== Predecessor ===
v94 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i96 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i96  <|@  <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
at scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
at scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
referencedType: [null]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@6d16b056
stamp: void
targetMethod: HotSpotMethod<TraversableOnce.isEmpty()>
=== Inputs ===
arguments: a71 
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a71  <|@  <|@
tid ?510 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<TraversableOnce.nonEmpty()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: TraversableOnce.scala
sourceLine: 111
stackSize: 0
=== Inputs ===
outerFrameState: ?102 
values: - 
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?102 values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i96 <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
at scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
at scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#TraversableOnce.isEmpty
useForInlining: false
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v235 
stateDuring: ?510 
=== Succesors ===
next: v77 
=== Usages ===
v104 
=== Predecessor ===
v99 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v235 stateDuring: ?510 #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 6]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i96 
y: i73 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i96 y: i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 6]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.5736108036307284
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v76 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
i96 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v76 #falseSuccessor: v74  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 9]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v968  <|@  <|@
f <@*|@fixed>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 6]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v967 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 6]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v968 v95 
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v968 v95 #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 11]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v896 
y: v884 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v896 y: v884  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 11]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v885 
=== Succesors ===
trueSuccessor: v268 
falseSuccessor: v271 
=== Usages ===
=== Predecessor ===
v967 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v885 #trueSuccessor: v268 #falseSuccessor: v271  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 11]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a897 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a897  <|@  <|@
f <@~|@floating>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a71 
index: - 
=== Succesors ===
=== Usages ===
a897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a71 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a897 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: $colon$colon.head
nodeSourcePosition: at scala.collection.immutable.$colon$colon.head(List.scala:436) [bci: 1]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 11]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v908 
=== Succesors ===
next: v123 
=== Usages ===
a186 v209 v218 v948 
=== Predecessor ===
v268 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v908 #next: v123  <|@  <|@
f <@~|@floating>@ <|@
tid a186 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.immutable.$colon$colon.head(List.scala:436) [bci: 1]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 11]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a897 
=== Succesors ===
=== Usages ===
?164 v187 ?137 a716 ?163 v227 v230 ?162 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a897  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
hubs: [Ljdk.vm.ci.meta.Constant;@6f409512
keyProbabilities: [D@4f5f56e5
keySuccessors: [I@5462623
keys: [Ljdk.vm.ci.meta.ResolvedJavaType;@5d0aa2dd
stamp: void
=== Inputs ===
value: v657 
=== Succesors ===
successors: v112 v114 v116 v118 v121 
=== Usages ===
=== Predecessor ===
a897 >@ <|@
instruction <@TypeSwitch|@org.graalvm.compiler.nodes.java.TypeSwitchNode>@ value: v657 #successors: v112 v114 v116 v118 v121  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a129 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a129  <|@  <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
referencedType: [null]
returnStamp: a# Lscala/collection/mutable/ListBuffer;
signature: [Ljdk.vm.ci.meta.JavaType;@3689446b
stamp: void
targetMethod: HotSpotMethod<ListBuffer.$plus$eq(Object)>
=== Inputs ===
arguments: a1 a186 
=== Succesors ===
=== Usages ===
a129 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a186  <|@  <|@
tid ?131 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Growable.loop$1(LinearSeq)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Growable.scala
sourceLine: 53
stackSize: 0
=== Inputs ===
outerFrameState: ?170 
values: a1 a71 
=== Succesors ===
=== Usages ===
?511 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?170 values: a1 a71  <|@  <|@
tid ?511 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ListBuffer.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ListBuffer.scala
sourceLine: 44
stackSize: 0
=== Inputs ===
outerFrameState: ?131 
values: - - 
=== Succesors ===
=== Usages ===
a129 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?131 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a129 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
polymorphic: false
stamp: a# Lscala/collection/mutable/ListBuffer;
targetMethod: Direct#ListBuffer.$plus$eq
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v187 
stateDuring: ?511 
=== Succesors ===
next: v113 
=== Usages ===
a111 
=== Predecessor ===
v112 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v187 stateDuring: ?511 #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
a129 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i898 
=== Usages ===
v904 
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i898  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i898 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayBuffer.size0
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.size0(ArrayBuffer.scala:48) [bci: 1]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 2]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v909 
=== Succesors ===
next: v136 
=== Usages ===
i134 
=== Predecessor ===
v114 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v909 #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 6]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i32
=== Inputs ===
x: i898 
y: i133 
=== Succesors ===
=== Usages ===
v191 ?138 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i898 y: i133  <|@  <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
at scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
referencedType: [null]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@3d4d421
stamp: void
targetMethod: HotSpotMethod<ResizableArray.ensureSize(int)>
=== Inputs ===
arguments: a1 i134 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i134  <|@  <|@
tid ?150 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Growable.loop$1(LinearSeq)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Growable.scala
sourceLine: 53
stackSize: 0
=== Inputs ===
outerFrameState: ?170 
values: a1 a71 
=== Succesors ===
=== Usages ===
?149 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?170 values: a1 a71  <|@  <|@
tid ?149 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ArrayBuffer.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayBuffer.scala
sourceLine: 48
stackSize: 0
=== Inputs ===
outerFrameState: ?150 
values: - - 
=== Succesors ===
=== Usages ===
?137 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?150 values: - -  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<ArrayBuffer.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
at scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rethrowException: false
sourceFile: ArrayBuffer.scala
sourceLine: 84
stackSize: 0
=== Inputs ===
outerFrameState: ?149 
values: a1 a186 
=== Succesors ===
=== Usages ===
?138 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?149 values: a1 a186  <|@  <|@
tid ?138 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ArrayBuffer.ensureSize(int)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
at scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rethrowException: false
sourceFile: ArrayBuffer.scala
sourceLine: 48
stackSize: 0
=== Inputs ===
outerFrameState: ?137 
values: a1 i134 
=== Succesors ===
=== Usages ===
?139 ?512 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?137 values: a1 i134  <|@  <|@
tid ?512 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ResizableArray.ensureSize$(ResizableArray, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ResizableArray.scala
sourceLine: 93
stackSize: 0
=== Inputs ===
outerFrameState: ?138 
values: - - 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?138 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
at scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
polymorphic: false
stamp: void
targetMethod: Direct#ResizableArray.ensureSize
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v191 
stateDuring: ?512 
=== Succesors ===
next: a899 
=== Usages ===
=== Predecessor ===
i898 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v191 stateDuring: ?512 #next: a899  <|@  <|@
f <@~|@floating>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayBuffer.array
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.array(ArrayBuffer.scala:48) [bci: 1]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 11]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v910 
=== Succesors ===
next: i900 
=== Usages ===
a195 v947 v911 
=== Predecessor ===
v136 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v910 #next: i900  <|@  <|@
tid ?139 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<ResizableArray.ensureSize$(ResizableArray, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
at scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rethrowException: false
sourceFile: ResizableArray.scala
sourceLine: 93
stackSize: 0
=== Inputs ===
outerFrameState: ?138 
values: - - 
=== Succesors ===
=== Usages ===
v538 i900 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?138 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a899 
=== Succesors ===
=== Usages ===
i900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i900 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?139 
guard: - 
address: v911 
=== Succesors ===
next: v901 
=== Usages ===
v202 
=== Predecessor ===
a899 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?139 guard: - address: v911 #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a899 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v947 
=== Succesors ===
next: i902 
=== Usages ===
v663 
=== Predecessor ===
i900 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v947 #next: i902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i902 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayBuffer.size0
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.size0(ArrayBuffer.scala:48) [bci: 1]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 15]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v909 
=== Succesors ===
next: v282 
=== Usages ===
v913 i145 v202 
=== Predecessor ===
v901 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v909 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@15088f07
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i902 
y: i900 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i902 y: i900  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v202 
=== Succesors ===
trueSuccessor: v278 
falseSuccessor: v281 
=== Usages ===
=== Predecessor ===
i902 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v202 #trueSuccessor: v278 #falseSuccessor: v281  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v420 
=== Usages ===
v218 
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a897 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a897  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:206) [bci: 15]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v419 
falseSuccessor: v418 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v419 #falseSuccessor: v418  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581910371599640205
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:207) [bci: 18]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v548 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v548  <|@  <|@
f <@*|@fixed>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
v419 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:214) [bci: 35]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v903 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a897 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:215) [bci: 46]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v948 
=== Succesors ===
next: v904 
=== Usages ===
v666 
=== Predecessor ===
v418 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v948 #next: v904  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v901 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: v663 
index: - 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v663 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ObjArrayKlass::_element_klass:final
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: Klass*!
=== Inputs ===
stateBefore: - 
guard: v114 
address: v912 
=== Succesors ===
next: i464 
=== Usages ===
v468 v457 v923 v432 v439 
=== Predecessor ===
v903 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v114 address: v912 #next: i464  <|@  <|@
f <@~|@floating>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: v904 
index: - 
=== Succesors ===
=== Usages ===
i464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v904 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i464 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: Klass::_super_check_offset:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:76) [bci: 10]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v923 
=== Succesors ===
next: v905 
=== Usages ===
v429 j430 
=== Predecessor ===
v904 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v923 #next: v905  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:215) [bci: 46]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v903 
=== Succesors ===
=== Usages ===
v924 v439 v925 v928 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v903  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 32
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 36]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i464 
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i464  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: v666 
index: j430 
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v666 index: j430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 36]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v924 
=== Succesors ===
next: v435 
=== Usages ===
v432 
=== Predecessor ===
i464 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v924 #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 40]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v904 
y: v905 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v904 y: v905  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 43]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v432 
=== Succesors ===
trueSuccessor: v433 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
v905 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v432 #trueSuccessor: v433 #falseSuccessor: v434  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:81) [bci: 46]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v475  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
v433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:90) [bci: 70]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:77) [bci: 21]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i464 
y: i428 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i464 y: i428  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:90) [bci: 72]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v429 
=== Succesors ===
trueSuccessor: v436 
falseSuccessor: v437 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v429 #trueSuccessor: v436 #falseSuccessor: v437  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 84]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v442 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v442  <|@  <|@
f <@~|@floating>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 2]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v666 
y: v904 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v666 y: v904  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 5]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v439 
=== Succesors ===
trueSuccessor: v440 
falseSuccessor: v441 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v439 #trueSuccessor: v440 #falseSuccessor: v441  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:101) [bci: 8]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v476  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
v440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 17]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j465 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j465  <|@  <|@
f <@~|@floating>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: v666 
index: - 
=== Succesors ===
=== Usages ===
j465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v666 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j465 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 27]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v925 
=== Succesors ===
next: i466 
=== Usages ===
v926 v927 
=== Predecessor ===
v441 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v925 #next: i466  <|@  <|@
f <@~|@floating>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i466 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 41]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v926 
=== Succesors ===
next: v445 
=== Usages ===
v448 
=== Predecessor ===
j465 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v926 #next: v445  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
i466 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B57" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v446 
values: i73 i461 
=== Succesors ===
=== Usages ===
v448 i452 i461 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v446 values: i73 i461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v445 
=== Succesors ===
next: v451 
=== Usages ===
i447 v450 v459 v462 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v445 #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@c50510
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i447 
y: i466 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i447 y: i466  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v448 
=== Succesors ===
trueSuccessor: v449 
falseSuccessor: v450 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v448 #trueSuccessor: v449 #falseSuccessor: v450  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 56]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j467 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j467  <|@  <|@
f <@~|@floating>@ <|@
tid i452 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$126/0x000000084014a840@131afb18
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i447 
y: i328 
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i447 y: i328  <|@  <|@
f <@~|@floating>@ <|@
tid i453 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 12]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i452 
y: i327 
=== Succesors ===
=== Usages ===
j454 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i452 y: i327  <|@  <|@
f <@~|@floating>@ <|@
tid j454 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 32
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i453 
=== Succesors ===
=== Usages ===
v927 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i453  <|@  <|@
f <@~|@floating>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j465 
index: j454 
=== Succesors ===
=== Usages ===
j467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: j454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v927 
=== Succesors ===
next: v460 
=== Usages ===
v456 
=== Predecessor ===
v449 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v927 #next: v460  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 22]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: Klass*
=== Inputs ===
input: j467 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j467  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 66]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v456 
y: v904 
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v456 y: v904  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 72]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v457 
=== Succesors ===
trueSuccessor: v459 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
j467 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v457 #trueSuccessor: v459 #falseSuccessor: v458  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:110) [bci: 75]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v446 
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v446 #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: v666 
index: - 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v666 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:110) [bci: 86]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v928 
value: v904 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v928 value: v904 stateAfter: - lastLocationAccess: - #next: v477  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
v468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B32" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v548 v475 v476 v477 
=== Succesors ===
next: j668 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v548 v475 v476 v477 #next: j668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j668 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:773) [bci: 3]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:182) [bci: 11]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a669 
=== Usages ===
v949 v951 v953 
=== Predecessor ===
v546 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: a669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:184) [bci: 22]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
predefinedStamp: [null]
stamp: a - NULL
=== Inputs ===
object: a667 
=== Succesors ===
next: j670 
=== Usages ===
=== Predecessor ===
j668 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a667 #next: j670  <|@  <|@
f <@~|@floating>@ <|@
tid a195 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.array(ArrayBuffer.scala:48) [bci: 1]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 11]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a899 
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a899  <|@  <|@
f <@~|@floating>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a195 
index: i902 
=== Succesors ===
=== Usages ===
v218 j670 j717 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a195 index: i902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:185) [bci: 28]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v913 
=== Succesors ===
next: i697 
=== Usages ===
v950 
=== Predecessor ===
a669 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v913 #next: i697  <|@  <|@
f <@~|@floating>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j668 
index: - 
=== Succesors ===
=== Usages ===
i697 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j668 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i697 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:187) [bci: 48]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v949 
=== Succesors ===
next: v675 
=== Usages ===
i698 
=== Predecessor ===
j670 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v949 #next: v675  <|@  <|@
f <@~|@floating>@ <|@
tid i698 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:187) [bci: 48]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i697 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i697  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:200) [bci: 206]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i698 
y: i73 
=== Succesors ===
=== Usages ===
v675 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i698 y: i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:200) [bci: 217]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v672 
=== Succesors ===
trueSuccessor: v673 
falseSuccessor: v674 
=== Usages ===
=== Predecessor ===
i697 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v672 #trueSuccessor: v673 #falseSuccessor: v674  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:230) [bci: 427]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v707 
=== Usages ===
=== Predecessor ===
v675 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v707  <|@  <|@
f <@*|@fixed>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
v673 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:203) [bci: 220]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a699 
=== Usages ===
=== Predecessor ===
v675 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a699  <|@  <|@
f <@~|@floating>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j670 
index: - 
=== Succesors ===
=== Usages ===
a699 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j670 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a699 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:204) [bci: 236]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v950 
=== Succesors ===
next: j677 
=== Usages ===
a700 
=== Predecessor ===
v674 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v950 #next: j677  <|@  <|@
f <@~|@floating>@ <|@
tid a700 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:204) [bci: 236]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: Uncompress
stamp: a -
=== Inputs ===
value: a699 
=== Succesors ===
=== Usages ===
j677 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:204) [bci: 239]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a700 
=== Succesors ===
next: v681 
=== Usages ===
v678 a689 v703 
=== Predecessor ===
a699 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a700 #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:212) [bci: 296]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j677 
y: j342 
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j677 y: j342  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:212) [bci: 304]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v678 
=== Succesors ===
trueSuccessor: v680 
falseSuccessor: v679 
=== Usages ===
=== Predecessor ===
j677 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v678 #trueSuccessor: v680 #falseSuccessor: v679  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564592752682893746
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:230) [bci: 427]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v708  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
v680 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:213) [bci: 307]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j701 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j701  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j668 
index: - 
=== Succesors ===
=== Usages ===
j701 v704 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j668 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j701 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:217) [bci: 331]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v953 
=== Succesors ===
next: v685 
=== Usages ===
v682 j696 v952 
=== Predecessor ===
v679 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v953 #next: v685  <|@  <|@
f <@~|@floating>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:218) [bci: 345]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j701 
y: j342 
=== Succesors ===
=== Usages ===
v685 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j701 y: j342  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:218) [bci: 351]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v682 
=== Succesors ===
trueSuccessor: v683 
falseSuccessor: v684 
=== Usages ===
=== Predecessor ===
j701 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v682 #trueSuccessor: v683 #falseSuccessor: v684  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:226) [bci: 414]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a689 
=== Usages ===
=== Predecessor ===
v685 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:226) [bci: 419]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: a -
trackedPointer: true
=== Inputs ===
input: j677 
=== Succesors ===
next: v690 
=== Usages ===
v690 
=== Predecessor ===
v683 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j677 #next: v690  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: write_barrier_pre(Object)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e095940
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:226) [bci: 424]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a689 
=== Succesors ===
next: v710 
=== Usages ===
=== Predecessor ===
a689 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a689 #next: v710  <|@  <|@
f <@*|@fixed>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
v690 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:219) [bci: 354]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j702 
=== Usages ===
=== Predecessor ===
v685 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j702  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: j668 
index: - 
=== Succesors ===
=== Usages ===
j702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j668 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j702 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:219) [bci: 362]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v951 
=== Succesors ===
next: v703 
=== Usages ===
v952 
=== Predecessor ===
v684 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v951 #next: v703  <|@  <|@
f <@~|@floating>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
=== Inputs ===
base: j701 
index: j702 
=== Succesors ===
=== Usages ===
v703 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j701 index: j702  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Log
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:223) [bci: 397]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v952 
value: j677 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v704 
=== Usages ===
=== Predecessor ===
j702 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v952 value: j677 stateAfter: - lastLocationAccess: - #next: v704  <|@  <|@
f <@~|@floating>@ <|@
tid j696 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:220) [bci: 375]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
=== Inputs ===
x: j701 
y: j695 
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j701 y: j695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Index
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:224) [bci: 408]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v953 
value: j696 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v709 
=== Usages ===
=== Predecessor ===
v703 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v953 value: j696 stateAfter: - lastLocationAccess: - #next: v709  <|@  <|@
f <@*|@fixed>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
v704 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v707 v708 v709 v710 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v707 v708 v709 v710 #next: v218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v278 
address: v913 
value: a897 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j715 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v278 address: v913 value: a897 stateAfter: - lastLocationAccess: - #next: j715  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j715 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:773) [bci: 3]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:235) [bci: 2]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a716 
=== Usages ===
v954 v955 
=== Predecessor ===
v218 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: a716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:236) [bci: 8]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
predefinedStamp: [null]
stamp: a Ljava/lang/Object;
=== Inputs ===
object: a186 
=== Succesors ===
next: j717 
=== Usages ===
j718 
=== Predecessor ===
j715 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a186 #next: j717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:242) [bci: 35]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v913 
=== Succesors ===
next: j718 
=== Usages ===
j719 j721 
=== Predecessor ===
a716 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v913 #next: j718  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:256) [bci: 137]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a716 
=== Succesors ===
next: v725 
=== Usages ===
j719 v726 
=== Predecessor ===
j717 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a716 #next: v725  <|@  <|@
f <@~|@floating>@ <|@
tid j719 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$185/0x00000008402b6c40@7f610884
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:260) [bci: 151]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
=== Inputs ===
x: j717 
y: j718 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j717 y: j718  <|@  <|@
f <@~|@floating>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:275) [bci: 254]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
x: j719 
y: j749 
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j719 y: j749  <|@  <|@
f <@*|@fixed>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:275) [bci: 262]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v750 
=== Succesors ===
trueSuccessor: v723 
falseSuccessor: v724 
=== Usages ===
=== Predecessor ===
j718 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v750 #trueSuccessor: v723 #falseSuccessor: v724  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v767 
=== Usages ===
=== Predecessor ===
v725 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v767  <|@  <|@
f <@*|@fixed>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
v723 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:276) [bci: 265]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v725 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@~|@floating>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:279) [bci: 279]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j718 
y: j342 
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j718 y: j342  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:279) [bci: 287]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v726 
=== Succesors ===
trueSuccessor: v728 
falseSuccessor: v727 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v726 #trueSuccessor: v728 #falseSuccessor: v727  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v768 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v768  <|@  <|@
f <@*|@fixed>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
v728 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:280) [bci: 290]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i755 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i755  <|@  <|@
f <@~|@floating>@ <|@
tid j721 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$172/0x0000000840292440@2e0f974
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:264) [bci: 173]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j717 
y: i720 
=== Succesors ===
=== Usages ===
j722 v957 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j717 y: i720  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j721 
index: j748 
=== Succesors ===
=== Usages ===
i755 i757 v759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j721 index: j748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i755 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: GC-Card
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:280) [bci: 296]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
=== Succesors ===
next: v733 
=== Usages ===
i756 
=== Predecessor ===
v727 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v957 #next: v733  <|@  <|@
f <@~|@floating>@ <|@
tid i756 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:280) [bci: 296]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i755 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i755  <|@  <|@
f <@~|@floating>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:284) [bci: 320]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i756 
y: i428 
=== Succesors ===
=== Usages ===
v733 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i756 y: i428  <|@  <|@
f <@*|@fixed>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:284) [bci: 331]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v730 
=== Succesors ===
trueSuccessor: v732 
falseSuccessor: v731 
=== Usages ===
=== Predecessor ===
i755 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v730 #trueSuccessor: v732 #falseSuccessor: v731  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v769 
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v769  <|@  <|@
f <@*|@fixed>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
v732 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:285) [bci: 334]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v734 
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v734  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
barriers: 4
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:285) [bci: 338]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i757 
=== Usages ===
=== Predecessor ===
v731 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i757 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: GC-Card
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:286) [bci: 347]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
=== Succesors ===
next: v738 
=== Usages ===
i758 
=== Predecessor ===
v734 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v957 #next: v738  <|@  <|@
f <@~|@floating>@ <|@
tid i758 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:286) [bci: 347]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i757 
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i757  <|@  <|@
f <@~|@floating>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:287) [bci: 363]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i758 
y: i73 
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i758 y: i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:287) [bci: 374]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v735 
=== Succesors ===
trueSuccessor: v737 
falseSuccessor: v736 
=== Usages ===
=== Predecessor ===
i757 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v735 #trueSuccessor: v737 #falseSuccessor: v736  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577486745296679515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v770 
=== Usages ===
=== Predecessor ===
v738 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v770  <|@  <|@
f <@*|@fixed>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
v737 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:288) [bci: 377]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v738 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:289) [bci: 409]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
value: i764 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j760 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v957 value: i764 stateAfter: - lastLocationAccess: - #next: j760  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j715 
index: - 
=== Succesors ===
=== Usages ===
j760 v763 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j715 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j760 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:295) [bci: 441]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v954 
=== Succesors ===
next: v743 
=== Usages ===
v740 j754 v956 
=== Predecessor ===
v759 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v954 #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:296) [bci: 455]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j760 
y: j342 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j760 y: j342  <|@  <|@
f <@~|@floating>@ <|@
tid j722 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:270) [bci: 219]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64 [139991352238080 - 36168788371202047] ⇈00ffffffffffffff
=== Inputs ===
x: j721 
y: j748 
=== Succesors ===
=== Usages ===
v747 v762 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j721 y: j748  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:296) [bci: 461]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v740 
=== Succesors ===
trueSuccessor: v741 
falseSuccessor: v742 
=== Usages ===
=== Predecessor ===
j760 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v740 #trueSuccessor: v741 #falseSuccessor: v742  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:305) [bci: 524]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: write_barrier_post(Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e095940
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:305) [bci: 529]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j722 
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j722 #next: v772  <|@  <|@
f <@*|@fixed>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
v747 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:297) [bci: 464]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j761 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j761  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
displacement: 128
scale: Times1
stamp: void*
=== Inputs ===
base: j715 
index: - 
=== Succesors ===
=== Usages ===
j761 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j715 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j761 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:297) [bci: 472]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v955 
=== Succesors ===
next: v762 
=== Usages ===
v956 
=== Predecessor ===
v742 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v955 #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
=== Inputs ===
base: j760 
index: j761 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j760 index: j761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Log
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:302) [bci: 507]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v956 
value: j722 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v763 
=== Usages ===
=== Predecessor ===
j761 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v956 value: j722 stateAfter: - lastLocationAccess: - #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:298) [bci: 485]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
=== Inputs ===
x: j760 
y: j695 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j760 y: j695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Index
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:303) [bci: 518]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v954 
value: j754 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v954 value: j754 stateAfter: - lastLocationAccess: - #next: v771  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
v763 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v767 v768 v769 v770 v771 v772 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v767 v768 v769 v770 v771 v772 #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:86) [bci: 26]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i32
=== Inputs ===
x: i902 
y: i133 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i902 y: i133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayBuffer.size0
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.size0_$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:86) [bci: 27]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v909 
value: i145 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v909 value: i145 stateAfter: - lastLocationAccess: - #next: v115  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
v220 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 98]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid i461 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 98]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i32
=== Inputs ===
x: i447 
y: i133 
=== Succesors ===
=== Usages ===
i447 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i447 y: i133  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
loopBegin: v446 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v446  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580682074240651296
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 104]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v446 
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v446 #next: v562  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
v450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 4587195615000912736
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:91) [bci: 75]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v557  <|@  <|@
f <@*|@fixed>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
v437 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v557 v562 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v557 v562 #next: v286  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v70 
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v70 #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid i542 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -56107
stableDimension: 0
stamp: i32 [-56107] ⇊00000000ffff24d5 ⇈00000000ffff24d5
stampKind: i32
value: int[-56107|0xffffffffffff24d5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i536 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
v286 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v70 
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v70 #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid i540 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51995
stableDimension: 0
stamp: i32 [-51995] ⇊00000000ffff34e5 ⇈00000000ffff34e5
stampKind: i32
value: int[-51995|0xffffffffffff34e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i536 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i536 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-56107 - -50699] ⇊00000000ffff20c5 ⇈00000000ffff3df5
valueDescription: i32
=== Inputs ===
merge: v533 
values: i540 i542 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v533 values: i540 i542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v539 v541 
=== Succesors ===
next: v538 
=== Usages ===
i536 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v539 v541 #next: v538  <|@  <|@
f <@*|@fixed>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateBefore: ?139 
actionAndReason: i536 
speculation: j342 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?139 actionAndReason: i536 speculation: j342  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a906 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a906 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SetBuilder.elems
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems(SetBuilder.scala:23) [bci: 1]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v909 
=== Succesors ===
next: v292 
=== Usages ===
a223 v224 
=== Predecessor ===
v116 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v909 #next: v292  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a906 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a906  <|@  <|@
f <@*|@fixed>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v224 
=== Succesors ===
trueSuccessor: v291 
falseSuccessor: v288 
=== Usages ===
=== Predecessor ===
a906 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v224 #trueSuccessor: v291 #falseSuccessor: v288  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v70 
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v70 #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid i532 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -57611
stableDimension: 0
stamp: i32 [-57611] ⇊00000000ffff1ef5 ⇈00000000ffff1ef5
stampKind: i32
value: int[-57611|0xffffffffffff1ef5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
v291 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a153 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a153  <|@  <|@
f <@~|@floating>@ <|@
tid a223 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems(SetBuilder.scala:23) [bci: 1]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: Uncompress
stamp: a -
=== Inputs ===
value: a906 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a906  <|@  <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
referencedType: [null]
returnStamp: a - (unchecked=a Lscala/collection/Set;)
signature: [Ljdk.vm.ci.meta.JavaType;@37178d46
stamp: void
targetMethod: HotSpotMethod<Set.$plus(Object)>
=== Inputs ===
arguments: a223 a186 
=== Succesors ===
=== Usages ===
a153 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a223 a186  <|@  <|@
tid ?159 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Growable.loop$1(LinearSeq)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Growable.scala
sourceLine: 53
stackSize: 0
=== Inputs ===
outerFrameState: ?170 
values: a1 a71 
=== Succesors ===
=== Usages ===
?158 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?170 values: a1 a71  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<SetBuilder.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: SetBuilder.scala
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: ?159 
values: - - 
=== Succesors ===
=== Usages ===
?514 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?159 values: - -  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<SetBuilder.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: SetBuilder.scala
sourceLine: 24
stackSize: 1
=== Inputs ===
outerFrameState: ?158 
values: a1 - a1 
=== Succesors ===
=== Usages ===
a153 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?158 values: a1 - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a153 <|@
d <@d|@=== Debug Properties ===
bci: 6
nodeSourcePosition: at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
polymorphic: true
stamp: a -
targetMethod: Direct#Set.$plus
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v227 
stateDuring: ?514 
=== Succesors ===
next: j778 
=== Usages ===
a823 a228 
=== Predecessor ===
v288 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v227 stateDuring: ?514 #next: j778  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j778 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:773) [bci: 3]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:182) [bci: 11]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a779 
=== Usages ===
v958 v960 v962 
=== Predecessor ===
a153 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: a779  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:184) [bci: 22]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
predefinedStamp: [null]
stamp: a - NULL
=== Inputs ===
object: a667 
=== Succesors ===
next: j780 
=== Usages ===
=== Predecessor ===
j778 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a667 #next: j780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:185) [bci: 28]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v909 
=== Succesors ===
next: i803 
=== Usages ===
v959 
=== Predecessor ===
a779 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v909 #next: i803  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j778 
index: - 
=== Succesors ===
=== Usages ===
i803 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i803 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:187) [bci: 48]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
=== Succesors ===
next: v785 
=== Usages ===
i804 
=== Predecessor ===
j780 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v958 #next: v785  <|@  <|@
f <@~|@floating>@ <|@
tid i804 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:187) [bci: 48]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i803 
=== Succesors ===
=== Usages ===
v782 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i803  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:200) [bci: 206]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i804 
y: i73 
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i804 y: i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:200) [bci: 217]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v782 
=== Succesors ===
trueSuccessor: v783 
falseSuccessor: v784 
=== Usages ===
=== Predecessor ===
i803 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v782 #trueSuccessor: v783 #falseSuccessor: v784  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426301
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:230) [bci: 427]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v813 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v813  <|@  <|@
f <@*|@fixed>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v783 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:203) [bci: 220]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a805 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a805  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
a805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a805 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:204) [bci: 236]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v959 
=== Succesors ===
next: j787 
=== Usages ===
a806 
=== Predecessor ===
v784 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v959 #next: j787  <|@  <|@
f <@~|@floating>@ <|@
tid a806 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:204) [bci: 236]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: Uncompress
stamp: a -
=== Inputs ===
value: a805 
=== Succesors ===
=== Usages ===
j787 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a805  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:204) [bci: 239]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a806 
=== Succesors ===
next: v791 
=== Usages ===
v788 a799 v809 
=== Predecessor ===
a805 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a806 #next: v791  <|@  <|@
f <@~|@floating>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:212) [bci: 296]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j787 
y: j342 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j787 y: j342  <|@  <|@
f <@*|@fixed>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:212) [bci: 304]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v788 
=== Succesors ===
trueSuccessor: v790 
falseSuccessor: v789 
=== Usages ===
=== Predecessor ===
j787 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v788 #trueSuccessor: v790 #falseSuccessor: v789  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564271162101631196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:230) [bci: 427]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v814 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v814  <|@  <|@
f <@*|@fixed>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v790 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:213) [bci: 307]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j807 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j807  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j778 
index: - 
=== Succesors ===
=== Usages ===
j807 v810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j807 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:217) [bci: 331]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
=== Succesors ===
next: v795 
=== Usages ===
v792 j802 v961 
=== Predecessor ===
v789 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v962 #next: v795  <|@  <|@
f <@~|@floating>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:218) [bci: 345]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j807 
y: j342 
=== Succesors ===
=== Usages ===
v795 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j807 y: j342  <|@  <|@
f <@*|@fixed>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:218) [bci: 351]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v792 
=== Succesors ===
trueSuccessor: v793 
falseSuccessor: v794 
=== Usages ===
=== Predecessor ===
j807 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v792 #trueSuccessor: v793 #falseSuccessor: v794  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:226) [bci: 414]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a799 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a799  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:226) [bci: 419]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: a -
trackedPointer: true
=== Inputs ===
input: j787 
=== Succesors ===
next: v800 
=== Usages ===
v800 
=== Predecessor ===
v793 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j787 #next: v800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: write_barrier_pre(Object)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e095940
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:226) [bci: 424]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a799 
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
a799 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a799 #next: v816  <|@  <|@
f <@*|@fixed>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v800 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:219) [bci: 354]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j808 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j808  <|@  <|@
f <@~|@floating>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: j778 
index: - 
=== Succesors ===
=== Usages ===
j808 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j808 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:219) [bci: 362]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
=== Succesors ===
next: v809 
=== Usages ===
v961 
=== Predecessor ===
v794 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v960 #next: v809  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
=== Inputs ===
base: j807 
index: j808 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: j808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Log
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:223) [bci: 397]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v961 
value: j787 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v810 
=== Usages ===
=== Predecessor ===
j808 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v961 value: j787 stateAfter: - lastLocationAccess: - #next: v810  <|@  <|@
f <@~|@floating>@ <|@
tid j802 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:220) [bci: 375]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
=== Inputs ===
x: j807 
y: j695 
=== Succesors ===
=== Usages ===
v810 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j807 y: j695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Index
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:224) [bci: 408]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
value: j802 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v815 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v962 value: j802 stateAfter: - lastLocationAccess: - #next: v815  <|@  <|@
f <@*|@fixed>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v810 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v813 v814 v815 v816 
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v813 v814 v815 v816 #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid a228 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: Compress
stamp: n -
=== Inputs ===
value: a153 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: SetBuilder.elems
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v909 
value: a228 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j822 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v909 value: a228 stateAfter: - lastLocationAccess: - #next: j822  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j822 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:773) [bci: 3]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:235) [bci: 2]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a823 
=== Usages ===
v963 v964 
=== Predecessor ===
v229 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: a823  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:236) [bci: 8]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
predefinedStamp: [null]
stamp: a Ljava/lang/Object;
=== Inputs ===
object: a153 
=== Succesors ===
next: j824 
=== Usages ===
j825 
=== Predecessor ===
j822 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a153 #next: j824  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j824 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:247) [bci: 53]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j825 
=== Usages ===
j826 j827 
=== Predecessor ===
a823 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: j825  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:256) [bci: 137]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a823 
=== Succesors ===
next: v831 
=== Usages ===
j826 v832 
=== Predecessor ===
j824 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a823 #next: v831  <|@  <|@
f <@~|@floating>@ <|@
tid j826 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$185/0x00000008402b6c40@7f610884
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:260) [bci: 151]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
=== Inputs ===
x: j824 
y: j825 
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j824 y: j825  <|@  <|@
f <@~|@floating>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:275) [bci: 254]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
x: j826 
y: j749 
=== Succesors ===
=== Usages ===
v831 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j826 y: j749  <|@  <|@
f <@*|@fixed>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:275) [bci: 262]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v854 
=== Succesors ===
trueSuccessor: v829 
falseSuccessor: v830 
=== Usages ===
=== Predecessor ===
j825 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v854 #trueSuccessor: v829 #falseSuccessor: v830  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
v829 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:276) [bci: 265]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@~|@floating>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:279) [bci: 279]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j825 
y: j342 
=== Succesors ===
=== Usages ===
v835 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j825 y: j342  <|@  <|@
f <@*|@fixed>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:279) [bci: 287]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v832 
=== Succesors ===
trueSuccessor: v834 
falseSuccessor: v833 
=== Usages ===
=== Predecessor ===
v830 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v832 #trueSuccessor: v834 #falseSuccessor: v833  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v890 
=== Usages ===
=== Predecessor ===
v835 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v890  <|@  <|@
f <@*|@fixed>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
v834 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:280) [bci: 290]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i857 
=== Usages ===
=== Predecessor ===
v835 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i857  <|@  <|@
f <@~|@floating>@ <|@
tid j827 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$172/0x0000000840292440@2e0f974
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:264) [bci: 173]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j824 
y: i720 
=== Succesors ===
=== Usages ===
j828 v966 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j824 y: i720  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j827 
index: j748 
=== Succesors ===
=== Usages ===
i857 i859 v861 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j827 index: j748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i857 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: GC-Card
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:280) [bci: 296]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
=== Succesors ===
next: v839 
=== Usages ===
i858 
=== Predecessor ===
v833 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v966 #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid i858 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:280) [bci: 296]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i857 
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i857  <|@  <|@
f <@~|@floating>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:284) [bci: 320]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i858 
y: i428 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i858 y: i428  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:284) [bci: 331]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v836 
=== Succesors ===
trueSuccessor: v838 
falseSuccessor: v837 
=== Usages ===
=== Predecessor ===
i857 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v836 #trueSuccessor: v838 #falseSuccessor: v837  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v889 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v889  <|@  <|@
f <@*|@fixed>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
v838 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:285) [bci: 334]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v840 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v840  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
barriers: 4
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:285) [bci: 338]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i859 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i859  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i859 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: GC-Card
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:286) [bci: 347]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
=== Succesors ===
next: v844 
=== Usages ===
i860 
=== Predecessor ===
v840 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v966 #next: v844  <|@  <|@
f <@~|@floating>@ <|@
tid i860 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:286) [bci: 347]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i859 
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i859  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:287) [bci: 363]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i860 
y: i73 
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i860 y: i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:287) [bci: 374]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v841 
=== Succesors ===
trueSuccessor: v843 
falseSuccessor: v842 
=== Usages ===
=== Predecessor ===
i859 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v841 #trueSuccessor: v843 #falseSuccessor: v842  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v888 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v888  <|@  <|@
f <@*|@fixed>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
v843 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:288) [bci: 377]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v861 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:289) [bci: 409]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
value: i764 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j862 
=== Usages ===
=== Predecessor ===
v842 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v966 value: i764 stateAfter: - lastLocationAccess: - #next: j862  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j822 
index: - 
=== Succesors ===
=== Usages ===
j862 v865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j862 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:295) [bci: 441]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
=== Succesors ===
next: v849 
=== Usages ===
v846 j856 v965 
=== Predecessor ===
v861 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v963 #next: v849  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:296) [bci: 455]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j862 
y: j342 
=== Succesors ===
=== Usages ===
v849 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j862 y: j342  <|@  <|@
f <@~|@floating>@ <|@
tid j828 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:270) [bci: 219]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64 [139991352238080 - 36168788371202047] ⇈00ffffffffffffff
=== Inputs ===
x: j827 
y: j748 
=== Succesors ===
=== Usages ===
v853 v864 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j827 y: j748  <|@  <|@
f <@*|@fixed>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:296) [bci: 461]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v846 
=== Succesors ===
trueSuccessor: v847 
falseSuccessor: v848 
=== Usages ===
=== Predecessor ===
j862 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v846 #trueSuccessor: v847 #falseSuccessor: v848  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:305) [bci: 524]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v853 
=== Usages ===
=== Predecessor ===
v849 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: write_barrier_post(Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e095940
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:305) [bci: 529]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j828 
=== Succesors ===
next: v886 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j828 #next: v886  <|@  <|@
f <@*|@fixed>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
v853 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:297) [bci: 464]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j863 
=== Usages ===
=== Predecessor ===
v849 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j863  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
displacement: 128
scale: Times1
stamp: void*
=== Inputs ===
base: j822 
index: - 
=== Succesors ===
=== Usages ===
j863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j863 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:297) [bci: 472]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
=== Succesors ===
next: v864 
=== Usages ===
v965 
=== Predecessor ===
v848 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v964 #next: v864  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
=== Inputs ===
base: j862 
index: j863 
=== Succesors ===
=== Usages ===
v864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j862 index: j863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Log
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:302) [bci: 507]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v965 
value: j828 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
j863 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v965 value: j828 stateAfter: - lastLocationAccess: - #next: v865  <|@  <|@
f <@~|@floating>@ <|@
tid j856 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:298) [bci: 485]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
=== Inputs ===
x: j862 
y: j695 
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j862 y: j695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Index
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:303) [bci: 518]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
value: j856 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v887 
=== Usages ===
=== Predecessor ===
v864 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v963 value: j856 stateAfter: - lastLocationAccess: - #next: v887  <|@  <|@
f <@*|@fixed>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
v865 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i161 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i161  <|@  <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
referencedType: [null]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@3f03dd33
stamp: void
targetMethod: HotSpotMethod<FlatHashTable.addElem(Object)>
=== Inputs ===
arguments: a1 a186 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a186  <|@  <|@
tid ?166 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Growable.loop$1(LinearSeq)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Growable.scala
sourceLine: 53
stackSize: 0
=== Inputs ===
outerFrameState: ?170 
values: a1 a71 
=== Succesors ===
=== Usages ===
?162 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?170 values: a1 a71  <|@  <|@
tid ?162 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 40
stackSize: 0
=== Inputs ===
outerFrameState: ?166 
values: a1 a186 
=== Succesors ===
=== Usages ===
?163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?166 values: a1 a186  <|@  <|@
tid ?163 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 59
stackSize: 0
=== Inputs ===
outerFrameState: ?162 
values: a1 a186 
=== Succesors ===
=== Usages ===
?164 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?162 values: a1 a186  <|@  <|@
tid ?164 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.addElem(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 40
stackSize: 0
=== Inputs ===
outerFrameState: ?163 
values: a1 a186 
=== Succesors ===
=== Usages ===
?513 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?163 values: a1 a186  <|@  <|@
tid ?513 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<FlatHashTable.addElem$(FlatHashTable, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 138
stackSize: 0
=== Inputs ===
outerFrameState: ?164 
values: - - 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?164 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i161 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#FlatHashTable.addElem
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v230 
stateDuring: ?513 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v230 stateDuring: ?513 #next: v119  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
i161 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a111 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v110 
values: a129 a1 a1 a1 a1 a1 a1 a1 a1 
=== Succesors ===
=== Usages ===
?79 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v110 values: a129 a1 a1 a1 a1 a1 a1 a1 a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v113 v115 v117 v119 v886 v887 v888 v889 v890 
=== Succesors ===
next: a907 
=== Usages ===
a111 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v113 v115 v117 v119 v886 v887 v888 v889 v890 #next: a907  <|@  <|@
f <@~|@floating>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a71 
index: - 
=== Succesors ===
=== Usages ===
a907 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a71 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a907 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: $colon$colon.tl
nodeSourcePosition: at scala.collection.immutable.$colon$colon.tl(List.scala:436) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:437) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:436) [bci: 1]
at scala.collection.generic.Growable.loop$1(Growable.scala:54) [bci: 23]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: n Lscala/collection/immutable/List;
=== Inputs ===
stateBefore: - 
guard: - 
address: v914 
=== Succesors ===
next: v969 
=== Usages ===
a233 v969 
=== Predecessor ===
v110 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v914 #next: v969  <|@  <|@
tid ?79 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Growable.loop$1(LinearSeq)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rethrowException: false
sourceFile: Growable.scala
sourceLine: 53
stackSize: 1
=== Inputs ===
outerFrameState: ?170 
values: a1 a71 a111 
=== Succesors ===
=== Usages ===
v263 v969 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?170 values: a1 a71 a111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?79 
object: a907 
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
a907 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?79 object: a907 #next: v263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateBefore: ?79 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?79 #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid a233 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.immutable.$colon$colon.tl(List.scala:436) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:437) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:436) [bci: 1]
at scala.collection.generic.Growable.loop$1(Growable.scala:54) [bci: 23]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: Uncompress
stamp: a Lscala/collection/immutable/List;
=== Inputs ===
value: a907 
=== Succesors ===
=== Usages ===
a71 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a907  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
loopBegin: v70 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v70  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v524 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v524  <|@  <|@
f <@~|@floating>@ <|@
tid i525 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -30771
stableDimension: 0
stamp: i32 [-30771] ⇊00000000ffff87cd ⇈00000000ffff87cd
stampKind: i32
value: int[-30771|0xffffffffffff87cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
v121 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 11]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v70 
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v70 #next: v529  <|@  <|@
f <@~|@floating>@ <|@
tid i530 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -46643
stableDimension: 0
stamp: i32 [-46643] ⇊00000000ffff49cd ⇈00000000ffff49cd
stampKind: i32
value: int[-46643|0xffffffffffff49cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
v271 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i526 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-57611 - -30771] ⇊00000000ffff00c5 ⇈00000000ffffdffd
valueDescription: i32
=== Inputs ===
merge: v523 
values: i525 i530 i532 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v523 values: i525 i530 i532  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v524 v529 v531 
=== Succesors ===
next: v528 
=== Usages ===
i526 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v524 v529 v531 #next: v528  <|@  <|@
tid ?91 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<TraversableOnce.nonEmpty()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
at scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
at scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rethrowException: false
sourceFile: TraversableOnce.scala
sourceLine: 111
stackSize: 1
=== Inputs ===
outerFrameState: ?102 
values: - i73 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?102 values: - i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?91 
actionAndReason: i526 
speculation: j342 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?91 actionAndReason: i526 speculation: j342  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 35]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v70 
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v70 #next: v43  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:61) [bci: 33]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Growable.loop$1(LinearSeq)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Growable.scala
sourceLine: 52
stackSize: 0
=== Inputs ===
outerFrameState: ?170 
values: a1 a71 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?170 values: a1 a71  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
reason: TypeCheckedInliningViolated
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@3a797466
stamp: void
=== Inputs ===
stateBefore: ?72 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?72  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 98]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 98]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i32
=== Inputs ===
x: i380 
y: i133 
=== Succesors ===
=== Usages ===
i380 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i380 y: i133  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
loopBegin: v379 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v379  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 104]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v379 
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v379 #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid i522 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105761
stableDimension: 0
stamp: i32 [-105761] ⇊00000000fffe62df ⇈00000000fffe62df
stampKind: i32
value: int[-105761|0xfffffffffffe62df]
=== Inputs ===
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i522 
speculation: j342 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i522 speculation: j342  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 98]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid i338 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 98]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: i32
=== Inputs ===
x: i322 
y: i133 
=== Succesors ===
=== Usages ===
i322 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i322 y: i133  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
loopBegin: v321 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v321  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 104]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v321 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v321 #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid a486 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
op: Compress
stamp: n! -
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v487 v492 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:471) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:522) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
rawvalue: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 34359738368 shift: 3)
stampKind: Klass*(compressed base: 34359738368 shift: 3)
value: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v605 v643 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
rawvalue: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 a585 a627 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
displacement: 184
scale: Times1
stamp: void*
=== Inputs ===
base: v571 
index: - 
=== Succesors ===
=== Usages ===
j639 j601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v571 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j188 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.size0(ArrayBuffer.scala:48) [bci: 1]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 2]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j617 j575 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
hubs: [Ljdk.vm.ci.meta.Constant;@43d56ca4
keyProbabilities: [D@6685cd23
keySuccessors: [I@6d730108
keys: [Ljdk.vm.ci.meta.ResolvedJavaType;@4cb8b3d0
stamp: void
=== Inputs ===
value: v570 
=== Succesors ===
successors: v48 v52 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@TypeSwitch|@org.graalvm.compiler.nodes.java.TypeSwitchNode>@ value: v570 #successors: v48 v52  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a62 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a62  <|@  <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
at scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
at scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
referencedType: [null]
returnStamp: a - (unchecked=a Lscala/collection/Iterator;)
signature: [Ljdk.vm.ci.meta.JavaType;@24e056af
stamp: void
targetMethod: HotSpotMethod<IterableLike.iterator()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
a62 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?68 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<Growable.$plus$plus$eq(TraversableOnce)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Growable.scala
sourceLine: 59
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
?59 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
tid a174 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@6c446bc5
hasIdentity: true
objectId: 0
stamp: a!# Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;
type: HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?63 ?59 ?175 ?178 ?507 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractIterable.foreach(Function1)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
at scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
rethrowException: false
sourceFile: Iterable.scala
sourceLine: 54
stackSize: 0
=== Inputs ===
outerFrameState: ?68 
values: a2 a174 
=== Succesors ===
=== Usages ===
?67 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?68 values: a2 a174  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<IterableLike.foreach$(IterableLike, Function1)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: IterableLike.scala
sourceLine: 70
stackSize: 0
=== Inputs ===
outerFrameState: ?59 
values: - - 
=== Succesors ===
=== Usages ===
?63 ?509 ?507 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?59 values: - -  <|@  <|@
tid ?175 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a174 
values: a1 
=== Succesors ===
=== Usages ===
?63 ?507 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a174 values: a1  <|@  <|@
tid ?507 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<IterableLike.foreach(Function1)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: IterableLike.scala
sourceLine: 71
stackSize: 0
=== Inputs ===
outerFrameState: ?67 
values: - a174 
virtualObjectMappings: ?175 
=== Succesors ===
=== Usages ===
a62 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?67 values: - a174 virtualObjectMappings: ?175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a62 <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
at scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
at scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
polymorphic: true
stamp: a -
targetMethod: Direct#IterableLike.iterator
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v236 
stateDuring: ?507 
=== Succesors ===
next: v970 
=== Usages ===
?63 v240 v970 
=== Predecessor ===
v48 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v236 stateDuring: ?507 #next: v970  <|@  <|@
tid ?63 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<IterableLike.foreach(Function1)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
at scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
at scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
rethrowException: false
sourceFile: IterableLike.scala
sourceLine: 71
stackSize: 1
=== Inputs ===
outerFrameState: ?67 
values: - a174 a62 
virtualObjectMappings: ?175 
=== Succesors ===
=== Usages ===
v970 a585 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?67 values: - a174 a62 virtualObjectMappings: ?175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?63 
object: a62 
=== Succesors ===
next: j572 
=== Usages ===
=== Predecessor ===
a62 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?63 object: a62 #next: j572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j572 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:773) [bci: 3]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:211) [bci: 2]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j598 
=== Usages ===
v932 v933 
=== Predecessor ===
v970 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j598  <|@  <|@
f <@~|@floating>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j572 
index: - 
=== Succesors ===
=== Usages ===
j598 v600 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j572 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j598 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:246) [bci: 10]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:212) [bci: 9]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v932 
=== Succesors ===
next: j599 
=== Usages ===
j575 v934 v935 a584 v936 v937 
=== Predecessor ===
j572 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v932 #next: j599  <|@  <|@
f <@~|@floating>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
displacement: 296
scale: Times1
stamp: void*
=== Inputs ===
base: j572 
index: - 
=== Succesors ===
=== Usages ===
j599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j572 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j599 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:250) [bci: 10]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:213) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v933 
=== Succesors ===
next: v579 
=== Usages ===
v576 
=== Predecessor ===
j598 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v933 #next: v579  <|@  <|@
f <@~|@floating>@ <|@
tid j575 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:214) [bci: 24]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: i64
=== Inputs ===
x: j598 
y: j188 
=== Succesors ===
=== Usages ===
v576 v600 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j598 y: j188  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:215) [bci: 45]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@15088f07
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j599 
y: j575 
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j599 y: j575  <|@  <|@
f <@*|@fixed>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:215) [bci: 51]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v576 
=== Succesors ===
trueSuccessor: v577 
falseSuccessor: v578 
=== Usages ===
=== Predecessor ===
j599 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v576 #trueSuccessor: v577 #falseSuccessor: v578  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:220) [bci: 85]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a585 
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a585 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_instance(KlassPointer)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e095940
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newInstance(ForeignCallDescriptor, KlassPointer) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:223) [bci: 110]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?63 
arguments: v571 
=== Succesors ===
next: v588 
=== Usages ===
a589 
=== Predecessor ===
v577 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?63 arguments: v571 #next: v588  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
a585 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:216) [bci: 54]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:258) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:216) [bci: 58]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v932 
value: j575 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v932 value: j575 stateAfter: - lastLocationAccess: - #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
displacement: 208
scale: Times1
stamp: void*
=== Inputs ===
base: j598 
index: - 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j598 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:217) [bci: 64]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
address: v936 
=== Succesors ===
next: j601 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v936 #next: j601  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j601 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:521) [bci: 19]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v940 
=== Succesors ===
next: v602 
=== Usages ===
v602 
=== Predecessor ===
v595 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v940 #next: v602  <|@  <|@
f <@~|@floating>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j598 
index: - 
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j598 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:522) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v934 
value: j601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
j601 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v934 value: j601 stateAfter: - lastLocationAccess: - #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j598 
index: - 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j598 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:471) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:522) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v937 
value: v881 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v606 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v937 value: v881 stateAfter: - lastLocationAccess: - #next: v606  <|@  <|@
f <@~|@floating>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j598 
index: - 
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j598 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:456) [bci: 37]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:524) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v935 
value: i73 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v583 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v935 value: i73 stateAfter: - lastLocationAccess: - #next: v583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:528) [bci: 86]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a584 
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:529) [bci: 90]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j598 
=== Succesors ===
next: v586 
=== Usages ===
a589 
=== Predecessor ===
v583 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j598 #next: v586  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
a584 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v587 
values: a584 a585 
=== Succesors ===
=== Usages ===
v929 a488 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v587 values: a584 a585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v586 v588 
=== Succesors ===
next: v487 
=== Usages ===
a589 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v586 v588 #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a589 
index: - 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a589 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v929 
value: a486 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a488 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v929 value: a486 stateAfter: - lastLocationAccess: - #next: a488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a589 
=== Succesors ===
next: v489 
=== Usages ===
v240 ?178 
=== Predecessor ===
v487 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a589 #next: v489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
a488 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v65  <|@  <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
at scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
at scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
referencedType: [null]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@194a5c04
stamp: void
targetMethod: HotSpotMethod<Iterator.foreach(Function1)>
=== Inputs ===
arguments: a62 a488 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a62 a488  <|@  <|@
tid ?178 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a174 
materializedValue: a488 
=== Succesors ===
=== Usages ===
?509 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a174 materializedValue: a488  <|@  <|@
tid ?509 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<IterableLike.foreach(Function1)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: IterableLike.scala
sourceLine: 71
stackSize: 0
=== Inputs ===
outerFrameState: ?67 
values: - - 
virtualObjectMappings: ?178 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?67 values: - - virtualObjectMappings: ?178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
bci: 7
nodeSourcePosition: at scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
at scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
at scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
polymorphic: true
stamp: void
targetMethod: Direct#Iterator.foreach
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v240 
stateDuring: ?509 
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v240 stateDuring: ?509 #next: v171  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:61) [bci: 33]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j614 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j614 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:773) [bci: 3]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:211) [bci: 2]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j636 
=== Usages ===
v938 v939 
=== Predecessor ===
v52 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j636  <|@  <|@
f <@~|@floating>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j614 
index: - 
=== Succesors ===
=== Usages ===
j636 v638 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j614 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j636 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:246) [bci: 10]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:212) [bci: 9]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v938 
=== Succesors ===
next: j637 
=== Usages ===
j617 v941 v942 a626 v943 v944 
=== Predecessor ===
j614 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v938 #next: j637  <|@  <|@
f <@~|@floating>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
displacement: 296
scale: Times1
stamp: void*
=== Inputs ===
base: j614 
index: - 
=== Succesors ===
=== Usages ===
j637 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j614 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j637 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:250) [bci: 10]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:213) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v939 
=== Succesors ===
next: v621 
=== Usages ===
v618 
=== Predecessor ===
j636 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v939 #next: v621  <|@  <|@
f <@~|@floating>@ <|@
tid j617 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:214) [bci: 24]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: i64
=== Inputs ===
x: j636 
y: j188 
=== Succesors ===
=== Usages ===
v618 v638 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j636 y: j188  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:215) [bci: 45]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@15088f07
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j637 
y: j617 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j637 y: j617  <|@  <|@
f <@*|@fixed>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:215) [bci: 51]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v618 
=== Succesors ===
trueSuccessor: v619 
falseSuccessor: v620 
=== Usages ===
=== Predecessor ===
j637 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v618 #trueSuccessor: v619 #falseSuccessor: v620  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:220) [bci: 85]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a627 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a627 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_instance(KlassPointer)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e095940
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newInstance(ForeignCallDescriptor, KlassPointer) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:223) [bci: 110]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v571 
=== Succesors ===
next: v630 
=== Usages ===
a631 
=== Predecessor ===
v619 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v571 #next: v630  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
a627 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:216) [bci: 54]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:258) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:216) [bci: 58]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v938 
value: j617 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v938 value: j617 stateAfter: - lastLocationAccess: - #next: v634  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
displacement: 208
scale: Times1
stamp: void*
=== Inputs ===
base: j636 
index: - 
=== Succesors ===
=== Usages ===
v634 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j636 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:217) [bci: 64]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
address: v943 
=== Succesors ===
next: j639 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v943 #next: j639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j639 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:521) [bci: 19]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v940 
=== Succesors ===
next: v640 
=== Usages ===
v640 
=== Predecessor ===
v634 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v940 #next: v640  <|@  <|@
f <@~|@floating>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j636 
index: - 
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j636 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:522) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v941 
value: j639 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
j639 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v941 value: j639 stateAfter: - lastLocationAccess: - #next: v643  <|@  <|@
f <@~|@floating>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j636 
index: - 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j636 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:471) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:522) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v944 
value: v881 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v944 value: v881 stateAfter: - lastLocationAccess: - #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j636 
index: - 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j636 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:456) [bci: 37]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:524) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v942 
value: i73 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v625 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v942 value: i73 stateAfter: - lastLocationAccess: - #next: v625  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:528) [bci: 86]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a626 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:529) [bci: 90]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j636 
=== Succesors ===
next: v628 
=== Usages ===
a631 
=== Predecessor ===
v625 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j636 #next: v628  <|@  <|@
f <@*|@fixed>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
a626 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v629 
values: a626 a627 
=== Succesors ===
=== Usages ===
v930 a493 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v629 values: a626 a627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v628 v630 
=== Succesors ===
next: v492 
=== Usages ===
a631 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v628 v630 #next: v492  <|@  <|@
f <@~|@floating>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a631 
index: - 
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a631 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v930 
value: a486 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a493 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v930 value: a486 stateAfter: - lastLocationAccess: - #next: a493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a631 
=== Succesors ===
next: v494 
=== Usages ===
v241 
=== Predecessor ===
v492 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a631 #next: v494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
a493 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v50  <|@  <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
referencedType: [null]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@10654ace
stamp: void
targetMethod: HotSpotMethod<TraversableOnce.foreach(Function1)>
=== Inputs ===
arguments: a2 a493 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a493  <|@  <|@
tid ?508 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<Growable.$plus$plus$eq(TraversableOnce)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Growable.scala
sourceLine: 59
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
bci: 27
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
polymorphic: true
stamp: void
targetMethod: Direct#TraversableOnce.foreach
useForInlining: false
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v241 
stateDuring: ?508 
=== Succesors ===
next: v172 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v241 stateDuring: ?508 #next: v172  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:61) [bci: 33]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: [v3|QWORD + 32]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [v3|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v6|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHL v8|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v6|QWORD + v11|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = UNCOMPRESSPOINTER (input: v13|DWORD, ~baseRegister: v15|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: [v14|QWORD + 32]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v14|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v17|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL v19|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA [v20|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [v17|QWORD + v22|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|DWORD] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v18|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607018771416986051
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v29|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v28|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v25|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[.] = MOV [v28|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v100|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT v101|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v102|QWORD[.]] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV [v28|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v30|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = ADD (x: v37|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v40|DWORD = MOV [v39|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV [v39|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|DWORD[.], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v34|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v41|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [v44|QWORD + 232] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV [v46|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v49|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v47|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: [v48|QWORD + v50|QWORD * 1]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [v48|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV [v51|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SHL v53|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = LEA [v54|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVSXD v55|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [v51|QWORD + v56|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|DWORD] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B57" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v79|DWORD[.], y: v79|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426301
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[.] = COMPRESSPOINTER (input: v81|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[*] = XOR (x: v0|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v90|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVSXB [v91|QWORD[*] + v27|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v92|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B32" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD[.] + v42|DWORD * 4 + 16], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = XOR (x: v66|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v67|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = SHR v69|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVSXB [v68|QWORD[*] + v27|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581910371599640205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[.] = MOV [v60|QWORD[.]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|QWORD[.], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD + v64|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 56], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LEA [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = MOV [v83|QWORD[.]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v85|QWORD[.], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v86|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD + v87|QWORD * 1 - 8], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = LEA [v86|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 56], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVSXB [v68|QWORD[*] + v27|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577486745296679515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVSXB [v91|QWORD[*] + v27|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 32], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564592752682893746
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564271162101631196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v68|QWORD[*] + v27|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[*] = ADD (x: v68|QWORD[*], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v72|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD + v74|QWORD * 1 - 8], y: v73|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 112], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v91|QWORD[*] + v27|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[*] = ADD (x: v91|QWORD[*], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v94|QWORD, y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v94|QWORD + v96|QWORD * 1 - 8], y: v95|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = LEA [v94|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 112], y: v97|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v73|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v95|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [v108|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = LEA [v109|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v110|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 280], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v109|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD], y: v112|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v109|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v109|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE v109|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|QWORD[.]] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] v114|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD + 32], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD + 32], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = LEA [v115|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v116|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 280], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v115|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE v115|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v119|QWORD[.]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr   -1  <|@ instruction [v120|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v120|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 4587195615000912736
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-56107|0xffffffffffff24d5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580682074240651296
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|QWORD[.]] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v117|QWORD[.]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51995|0xffffffffffff34e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30771|0xffffffffffff87cd]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46643|0xffffffffffff49cd]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-57611|0xffffffffffff1ef5]] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v891 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v891  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! -
uncheckedStamp: a! Lscala/collection/generic/Growable;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v945 ?150 ?170 v172 a486 ?175 v171 ?68 v43 ?508 ?166 ?72 ?159 ?79 ?103 ?162 v187 v910 a111 ?164 ?131 a111 v909 v191 ?137 ?138 a111 ?163 ?514 ?514 j824 a111 a111 a111 a111 a111 v230 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Lscala/collection/TraversableOnce;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v236 v931 ?59 v241 a71 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Growable.$plus$plus$eq(TraversableOnce)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Growable.scala
sourceLine: 58
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v520 a627 v891 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@~|@floating>@ <|@
tid v931 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v891 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v891 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v931 
=== Succesors ===
next: v892 
=== Usages ===
v570 v880 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v931 #next: v892  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v891 
=== Succesors ===
=== Usages ===
v57 v915 v916 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v891  <|@  <|@
f <@~|@floating>@ <|@
tid v915 <|@
result [v3|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: v570 
index: - 
=== Succesors ===
=== Usages ===
v346 v892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v570 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v892 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SecondarySuperCache
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:66) [bci: 10]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v915 
=== Succesors ===
next: v313 
=== Usages ===
v310 
=== Predecessor ===
v891 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v915 #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
rawvalue: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v310 v346 v334 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:66) [bci: 14]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v892 
y: v302 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v892 y: v302  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 5]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i134 i145 i338 i394 i461 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i329 i385 i452 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.metaspaceArrayBaseOffset(GraalHotSpotVMConfig) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 4]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i330 i386 i453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 6]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
?91 v104 i322 i380 i447 v606 v644 v672 v735 v782 v841 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@fb83e9ab <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:66) [bci: 17]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v310 
=== Succesors ===
trueSuccessor: v311 
falseSuccessor: v312 
=== Usages ===
=== Predecessor ===
v892 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v310 #trueSuccessor: v311 #falseSuccessor: v312  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: [v3|QWORD + 32]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:67) [bci: 20]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v353  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
v311 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 29]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v879 <|@
result meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 2]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
rawvalue: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 34359738368 shift: 3)
stampKind: Klass*(compressed base: 34359738368 shift: 3)
value: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 2]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v891 
y: v879 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v891 y: v879  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 5]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v880 
=== Succesors ===
trueSuccessor: v315 
falseSuccessor: v316 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v880 #trueSuccessor: v315 #falseSuccessor: v316  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:101) [bci: 8]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v354  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
v315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 17]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j343 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j343  <|@  <|@
f <@~|@floating>@ <|@
tid v916 <|@
result [v3|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: v570 
index: - 
=== Succesors ===
=== Usages ===
j343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v570 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j343 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 27]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v916 
=== Succesors ===
next: i344 
=== Usages ===
v917 v918 
=== Predecessor ===
v316 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v916 #next: i344  <|@  <|@
f <@~|@floating>@ <|@
tid v917 <|@
result [v6|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j343 
index: - 
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j343 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i344 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 41]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v917 
=== Succesors ===
next: v320 
=== Usages ===
v323 
=== Predecessor ===
j343 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v917 #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
i344 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [v3|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v6|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i322 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v321 
values: i73 i338 
=== Succesors ===
=== Usages ===
v323 i329 i338 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v321 values: i73 i338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v320 
=== Succesors ===
next: v326 
=== Usages ===
i322 v325 v336 v339 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v320 #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@c50510
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i322 
y: i344 
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i322 y: i344  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v323 
=== Succesors ===
trueSuccessor: v324 
falseSuccessor: v325 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v323 #trueSuccessor: v324 #falseSuccessor: v325  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 56]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: j345 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j345  <|@  <|@
f <@~|@floating>@ <|@
tid i329 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$126/0x000000084014a840@131afb18
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i322 
y: i328 
=== Succesors ===
=== Usages ===
i330 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i322 y: i328  <|@  <|@
f <@~|@floating>@ <|@
tid i330 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 12]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i329 
y: i327 
=== Succesors ===
=== Usages ===
j331 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i329 y: i327  <|@  <|@
f <@~|@floating>@ <|@
tid j331 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 32
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i330 
=== Succesors ===
=== Usages ===
v918 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i330  <|@  <|@
f <@~|@floating>@ <|@
tid v918 <|@
result [v6|QWORD + v11|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j343 
index: j331 
=== Succesors ===
=== Usages ===
j345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j343 index: j331  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j345 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v918 
=== Succesors ===
next: v337 
=== Usages ===
v333 
=== Predecessor ===
v324 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v918 #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid v333 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 22]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: Klass*
=== Inputs ===
input: j345 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j345  <|@  <|@
f <@~|@floating>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 66]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v333 
y: v302 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v333 y: v302  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 72]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v334 
=== Succesors ===
trueSuccessor: v336 
falseSuccessor: v335 
=== Usages ===
=== Predecessor ===
j345 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v334 #trueSuccessor: v336 #falseSuccessor: v335  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHL v8|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v6|QWORD + v11|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:110) [bci: 75]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v321 
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v321 #next: v346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:110) [bci: 86]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v915 
value: v302 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v915 value: v302 stateAfter: - lastLocationAccess: - #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
v346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD + 32], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v353 v354 v355 
=== Succesors ===
next: v893 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v353 v354 v355 #next: v893  <|@  <|@
f <@~|@floating>@ <|@
tid v945 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v893 v895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v893 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:183) [bci: 40]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v945 
=== Succesors ===
next: v894 
=== Usages ===
v654 v883 
=== Predecessor ===
v503 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v945 #next: v894  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:183) [bci: 40]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v893 
=== Succesors ===
=== Usages ===
v919 v920 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v893  <|@  <|@
f <@~|@floating>@ <|@
tid v919 <|@
result [v14|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: v654 
index: - 
=== Succesors ===
=== Usages ===
v399 v894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v654 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v894 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SecondarySuperCache
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:66) [bci: 10]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v919 
=== Succesors ===
next: v371 
=== Usages ===
v368 
=== Predecessor ===
v893 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v919 #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v368 v399 v390 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v368 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:66) [bci: 14]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v894 
y: v360 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v894 y: v360  <|@  <|@
f <@~|@floating>@ <|@
tid j342 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 41]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v740 v846 v832 v538 v520 v528 v726 v792 v788 v678 v682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@fb83e9ab <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:66) [bci: 17]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v368 
=== Succesors ===
trueSuccessor: v369 
falseSuccessor: v370 
=== Usages ===
=== Predecessor ===
v894 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v368 #trueSuccessor: v369 #falseSuccessor: v370  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = UNCOMPRESSPOINTER (input: v13|DWORD, ~baseRegister: v15|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: [v14|QWORD + 32]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:67) [bci: 20]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v406  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
v369 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 29]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v882 <|@
result meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 2]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 34359738368 shift: 3)
stampKind: Klass*(compressed base: 34359738368 shift: 3)
value: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 2]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v893 
y: v882 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v893 y: v882  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 5]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v883 
=== Succesors ===
trueSuccessor: v373 
falseSuccessor: v374 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v883 #trueSuccessor: v373 #falseSuccessor: v374  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:101) [bci: 8]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v407  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
v373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 17]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j396 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j396  <|@  <|@
f <@~|@floating>@ <|@
tid v920 <|@
result [v14|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: v654 
index: - 
=== Succesors ===
=== Usages ===
j396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v654 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j396 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 27]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v920 
=== Succesors ===
next: i397 
=== Usages ===
v921 v922 
=== Predecessor ===
v374 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v920 #next: i397  <|@  <|@
f <@~|@floating>@ <|@
tid v921 <|@
result [v17|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j396 
index: - 
=== Succesors ===
=== Usages ===
i397 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j396 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i397 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 41]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v921 
=== Succesors ===
next: v378 
=== Usages ===
v381 
=== Predecessor ===
j396 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v921 #next: v378  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
i397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v14|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v17|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i380 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v379 
values: i73 i394 
=== Succesors ===
=== Usages ===
v381 i385 i394 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v379 values: i73 i394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v378 
=== Succesors ===
next: v384 
=== Usages ===
i380 v383 v392 v395 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v378 #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@c50510
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i380 
y: i397 
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i380 y: i397  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v381 
=== Succesors ===
trueSuccessor: v382 
falseSuccessor: v383 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v381 #trueSuccessor: v382 #falseSuccessor: v383  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v18|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 56]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j398 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j398  <|@  <|@
f <@~|@floating>@ <|@
tid i385 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$126/0x000000084014a840@131afb18
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i380 
y: i328 
=== Succesors ===
=== Usages ===
i386 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i380 y: i328  <|@  <|@
f <@~|@floating>@ <|@
tid i386 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 12]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i385 
y: i327 
=== Succesors ===
=== Usages ===
j387 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i385 y: i327  <|@  <|@
f <@~|@floating>@ <|@
tid j387 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 32
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i386 
=== Succesors ===
=== Usages ===
v922 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i386  <|@  <|@
f <@~|@floating>@ <|@
tid v922 <|@
result [v17|QWORD + v22|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j396 
index: j387 
=== Succesors ===
=== Usages ===
j398 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j396 index: j387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j398 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v922 
=== Succesors ===
next: v393 
=== Usages ===
v389 
=== Predecessor ===
v382 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v922 #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 22]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: Klass*
=== Inputs ===
input: j398 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j398  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 66]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v389 
y: v360 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v389 y: v360  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 72]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v390 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v391 
=== Usages ===
=== Predecessor ===
j398 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v390 #trueSuccessor: v392 #falseSuccessor: v391  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL v19|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA [v20|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [v17|QWORD + v22|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:110) [bci: 75]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v379 
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v379 #next: v399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:110) [bci: 86]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v919 
value: v360 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v919 value: v360 stateAfter: - lastLocationAccess: - #next: v408  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
v399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD + 32], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v406 v407 v408 
=== Succesors ===
next: v895 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v406 v407 v408 #next: v895  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v895 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v945 
=== Succesors ===
next: v69 
=== Usages ===
v657 
=== Predecessor ===
v505 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v945 #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v895 
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v895  <|@  <|@
f <@~|@floating>@ <|@
tid i764 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:289) [bci: 409]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v759 v861 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i720 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:264) [bci: 170]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j721 j827 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j748 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:116) [bci: 6]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:265) [bci: 180]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: 139991352238080
stableDimension: 0
stamp: i64 [139991352238080] ⇊00007f5246d26000 ⇈00007f5246d26000
stampKind: i64
value: long[139991352238080|0x7f5246d26000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j722 v957 j828 v966 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j749 <|@
result long[-1048576|0xfffffffffff00000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:275) [bci: 254]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: -1048576
stableDimension: 0
stamp: i64 [-1048576] ⇊fffffffffff00000 ⇈fffffffffff00000
stampKind: i64
value: long[-1048576|0xfffffffffff00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v750 v854 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j695 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:220) [bci: 375]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j696 j754 j802 j856 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a667 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a669 a779 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
result int[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.secondarySuperCacheOffset(GraalHotSpotVMConfig) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:77) [bci: 18]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 v730 v836 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v909 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i898 i902 v220 a906 v229 j780 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v884 <|@
result meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 11]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 34359738368 shift: 3)
stampKind: Klass*(compressed base: 34359738368 shift: 3)
value: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v885 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?170 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<Growable.$plus$plus$eq(TraversableOnce)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Growable.scala
sourceLine: 58
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
?72 ?166 ?79 ?103 ?131 ?150 ?159 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v895 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a71 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Lscala/collection/LinearSeq;
valueDescription: a -
=== Inputs ===
merge: v70 
values: a2 a233 
=== Succesors ===
=== Usages ===
?72 ?79 v946 ?90 v235 ?103 v914 ?131 ?150 ?159 ?166 v908 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v70 values: a2 a233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.34527518172378
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v69 
=== Succesors ===
next: v896 
=== Usages ===
a71 v74 v83 v281 v291 v286 v271 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v69 #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v946 <|@
result [v28|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a71 
index: - 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a71 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v946 
=== Succesors ===
next: v89 
=== Usages ===
v660 v885 
=== Predecessor ===
v70 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v946 #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v896 
=== Succesors ===
=== Usages ===
v89 v101 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v896  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hubs: [Ljdk.vm.ci.meta.Constant;@1215ac80
keyProbabilities: [D@6e33c9d3
keySuccessors: [I@18d77e8c
keys: [Ljdk.vm.ci.meta.ResolvedJavaType;@48734acd
stamp: void
=== Inputs ===
value: v660 
=== Succesors ===
successors: v85 v87 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@TypeSwitch|@org.graalvm.compiler.nodes.java.TypeSwitchNode>@ value: v660 #successors: v85 v87  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV [v28|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v30|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
tid ?103 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Growable.loop$1(LinearSeq)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Growable.scala
sourceLine: 52
stackSize: 0
=== Inputs ===
outerFrameState: ?170 
values: a1 a71 
=== Succesors ===
=== Usages ===
?90 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?170 values: a1 a71  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<AbstractTraversable.nonEmpty()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
at scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rethrowException: false
sourceFile: Traversable.scala
sourceLine: 104
stackSize: 0
=== Inputs ===
outerFrameState: ?103 
values: a71 
=== Succesors ===
=== Usages ===
?102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?103 values: a71  <|@  <|@
tid ?102 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<TraversableOnce.nonEmpty$(TraversableOnce)>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: TraversableOnce.scala
sourceLine: 111
stackSize: 0
=== Inputs ===
outerFrameState: ?90 
values: - 
=== Succesors ===
=== Usages ===
?91 ?510 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?90 values: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
hubs: [Ljdk.vm.ci.meta.Constant;@77bd8eef
keyProbabilities: [D@730ac9a
keySuccessors: [I@243081ee
keys: [Ljdk.vm.ci.meta.ResolvedJavaType;@76479287
stamp: void
=== Inputs ===
value: v660 
=== Succesors ===
successors: v94 v99 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@TypeSwitch|@org.graalvm.compiler.nodes.java.TypeSwitchNode>@ value: v660 #successors: v94 v99  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607018771416986051
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v95  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v967 
=== Predecessor ===
v94 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i96 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i96  <|@  <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
at scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
at scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
referencedType: [null]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@6d16b056
stamp: void
targetMethod: HotSpotMethod<TraversableOnce.isEmpty()>
=== Inputs ===
arguments: a71 
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a71  <|@  <|@
tid ?510 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<TraversableOnce.nonEmpty()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: TraversableOnce.scala
sourceLine: 111
stackSize: 0
=== Inputs ===
outerFrameState: ?102 
values: - 
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?102 values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i96 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
at scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
at scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#TraversableOnce.isEmpty
useForInlining: false
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v235 
stateDuring: ?510 
=== Succesors ===
next: v77 
=== Usages ===
v104 
=== Predecessor ===
v99 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v235 stateDuring: ?510 #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 6]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i96 
y: i73 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i96 y: i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 6]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.5736108036307284
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v76 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
i96 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v76 #falseSuccessor: v74  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 9]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v968  <|@  <|@
f <@*|@fixed>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 6]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v967 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 6]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v968 v95 
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v968 v95 #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 11]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v896 
y: v884 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v896 y: v884  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 11]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v885 
=== Succesors ===
trueSuccessor: v268 
falseSuccessor: v271 
=== Usages ===
=== Predecessor ===
v967 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v885 #trueSuccessor: v268 #falseSuccessor: v271  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v29|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 11]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a897 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a897  <|@  <|@
f <@~|@floating>@ <|@
tid v908 <|@
result [v28|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a71 
index: - 
=== Succesors ===
=== Usages ===
a897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a71 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a897 <|@
result v34|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: $colon$colon.head
nodeSourcePosition: at scala.collection.immutable.$colon$colon.head(List.scala:436) [bci: 1]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 11]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v908 
=== Succesors ===
next: v123 
=== Usages ===
a186 v209 v218 v948 
=== Predecessor ===
v268 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v908 #next: v123  <|@  <|@
f <@~|@floating>@ <|@
tid a186 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.immutable.$colon$colon.head(List.scala:436) [bci: 1]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 11]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a897 
=== Succesors ===
=== Usages ===
?164 v187 ?137 a716 ?163 v227 v230 ?162 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a897  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
hubs: [Ljdk.vm.ci.meta.Constant;@6f409512
keyProbabilities: [D@4f5f56e5
keySuccessors: [I@5462623
keys: [Ljdk.vm.ci.meta.ResolvedJavaType;@5d0aa2dd
stamp: void
=== Inputs ===
value: v657 
=== Succesors ===
successors: v112 v114 v116 v118 v121 
=== Usages ===
=== Predecessor ===
a897 >@ <|@
instruction <@TypeSwitch|@org.graalvm.compiler.nodes.java.TypeSwitchNode>@ value: v657 #successors: v112 v114 v116 v118 v121  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v28|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v25|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a129 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a129  <|@  <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
referencedType: [null]
returnStamp: a# Lscala/collection/mutable/ListBuffer;
signature: [Ljdk.vm.ci.meta.JavaType;@3689446b
stamp: void
targetMethod: HotSpotMethod<ListBuffer.$plus$eq(Object)>
=== Inputs ===
arguments: a1 a186 
=== Succesors ===
=== Usages ===
a129 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a186  <|@  <|@
tid ?131 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Growable.loop$1(LinearSeq)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Growable.scala
sourceLine: 53
stackSize: 0
=== Inputs ===
outerFrameState: ?170 
values: a1 a71 
=== Succesors ===
=== Usages ===
?511 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?170 values: a1 a71  <|@  <|@
tid ?511 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ListBuffer.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ListBuffer.scala
sourceLine: 44
stackSize: 0
=== Inputs ===
outerFrameState: ?131 
values: - - 
=== Succesors ===
=== Usages ===
a129 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?131 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a129 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
polymorphic: false
stamp: a# Lscala/collection/mutable/ListBuffer;
targetMethod: Direct#ListBuffer.$plus$eq
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v187 
stateDuring: ?511 
=== Succesors ===
next: v113 
=== Usages ===
a111 
=== Predecessor ===
v112 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v187 stateDuring: ?511 #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
a129 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i898 
=== Usages ===
v904 
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i898  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i898 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayBuffer.size0
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.size0(ArrayBuffer.scala:48) [bci: 1]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 2]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v909 
=== Succesors ===
next: v136 
=== Usages ===
i134 
=== Predecessor ===
v114 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v909 #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 6]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i32
=== Inputs ===
x: i898 
y: i133 
=== Succesors ===
=== Usages ===
v191 ?138 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i898 y: i133  <|@  <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
at scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
referencedType: [null]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@3d4d421
stamp: void
targetMethod: HotSpotMethod<ResizableArray.ensureSize(int)>
=== Inputs ===
arguments: a1 i134 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i134  <|@  <|@
tid ?150 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Growable.loop$1(LinearSeq)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Growable.scala
sourceLine: 53
stackSize: 0
=== Inputs ===
outerFrameState: ?170 
values: a1 a71 
=== Succesors ===
=== Usages ===
?149 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?170 values: a1 a71  <|@  <|@
tid ?149 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ArrayBuffer.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayBuffer.scala
sourceLine: 48
stackSize: 0
=== Inputs ===
outerFrameState: ?150 
values: - - 
=== Succesors ===
=== Usages ===
?137 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?150 values: - -  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<ArrayBuffer.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
at scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rethrowException: false
sourceFile: ArrayBuffer.scala
sourceLine: 84
stackSize: 0
=== Inputs ===
outerFrameState: ?149 
values: a1 a186 
=== Succesors ===
=== Usages ===
?138 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?149 values: a1 a186  <|@  <|@
tid ?138 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ArrayBuffer.ensureSize(int)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
at scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rethrowException: false
sourceFile: ArrayBuffer.scala
sourceLine: 48
stackSize: 0
=== Inputs ===
outerFrameState: ?137 
values: a1 i134 
=== Succesors ===
=== Usages ===
?139 ?512 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?137 values: a1 i134  <|@  <|@
tid ?512 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ResizableArray.ensureSize$(ResizableArray, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ResizableArray.scala
sourceLine: 93
stackSize: 0
=== Inputs ===
outerFrameState: ?138 
values: - - 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?138 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
at scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
polymorphic: false
stamp: void
targetMethod: Direct#ResizableArray.ensureSize
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v191 
stateDuring: ?512 
=== Succesors ===
next: a899 
=== Usages ===
=== Predecessor ===
i898 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v191 stateDuring: ?512 #next: a899  <|@  <|@
f <@~|@floating>@ <|@
tid v910 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a899 <|@
result v39|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayBuffer.array
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.array(ArrayBuffer.scala:48) [bci: 1]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 11]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v910 
=== Succesors ===
next: i900 
=== Usages ===
a195 v947 v911 
=== Predecessor ===
v136 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v910 #next: i900  <|@  <|@
tid ?139 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<ResizableArray.ensureSize$(ResizableArray, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
at scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rethrowException: false
sourceFile: ResizableArray.scala
sourceLine: 93
stackSize: 0
=== Inputs ===
outerFrameState: ?138 
values: - - 
=== Succesors ===
=== Usages ===
v538 i900 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?138 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid v911 <|@
result [v39|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a899 
=== Succesors ===
=== Usages ===
i900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i900 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?139 
guard: - 
address: v911 
=== Succesors ===
next: v901 
=== Usages ===
v202 
=== Predecessor ===
a899 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?139 guard: - address: v911 #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
result [v39|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a899 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v901 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v947 
=== Succesors ===
next: i902 
=== Usages ===
v663 
=== Predecessor ===
i900 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v947 #next: i902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i902 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayBuffer.size0
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.size0(ArrayBuffer.scala:48) [bci: 1]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 15]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v909 
=== Succesors ===
next: v282 
=== Usages ===
v913 i145 v202 
=== Predecessor ===
v901 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v909 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@15088f07
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i902 
y: i900 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i902 y: i900  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v202 
=== Succesors ===
trueSuccessor: v278 
falseSuccessor: v281 
=== Usages ===
=== Predecessor ===
i902 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v202 #trueSuccessor: v278 #falseSuccessor: v281  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = ADD (x: v37|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v40|DWORD = MOV [v39|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV [v39|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v420 
=== Usages ===
v218 
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a897 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a897  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:206) [bci: 15]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v419 
falseSuccessor: v418 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v419 #falseSuccessor: v418  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|DWORD[.], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581910371599640205
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:207) [bci: 18]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v548 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v548  <|@  <|@
f <@*|@fixed>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
v419 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:214) [bci: 35]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v903 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid v948 <|@
result [v34|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a897 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:215) [bci: 46]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v948 
=== Succesors ===
next: v904 
=== Usages ===
v666 
=== Predecessor ===
v418 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v948 #next: v904  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v901 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
result [v44|QWORD + 232] <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: v663 
index: - 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v663 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v904 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ObjArrayKlass::_element_klass:final
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: Klass*!
=== Inputs ===
stateBefore: - 
guard: v114 
address: v912 
=== Succesors ===
next: i464 
=== Usages ===
v468 v457 v923 v432 v439 
=== Predecessor ===
v903 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v114 address: v912 #next: i464  <|@  <|@
f <@~|@floating>@ <|@
tid v923 <|@
result [v46|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: v904 
index: - 
=== Succesors ===
=== Usages ===
i464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v904 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i464 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: Klass::_super_check_offset:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:76) [bci: 10]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v923 
=== Succesors ===
next: v905 
=== Usages ===
v429 j430 
=== Predecessor ===
v904 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v923 #next: v905  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:215) [bci: 46]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v903 
=== Succesors ===
=== Usages ===
v924 v439 v925 v928 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v903  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 32
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 36]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i464 
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i464  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
result [v48|QWORD + v50|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: v666 
index: j430 
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v666 index: j430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v905 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 36]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v924 
=== Succesors ===
next: v435 
=== Usages ===
v432 
=== Predecessor ===
i464 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v924 #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 40]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v904 
y: v905 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v904 y: v905  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@fb83e9ab <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 43]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v432 
=== Succesors ===
trueSuccessor: v433 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
v905 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v432 #trueSuccessor: v433 #falseSuccessor: v434  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v34|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v41|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [v44|QWORD + 232] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV [v46|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v49|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v47|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: [v48|QWORD + v50|QWORD * 1]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:81) [bci: 46]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v475  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
v433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:90) [bci: 70]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:77) [bci: 21]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i464 
y: i428 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i464 y: i428  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:90) [bci: 72]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v429 
=== Succesors ===
trueSuccessor: v436 
falseSuccessor: v437 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v429 #trueSuccessor: v436 #falseSuccessor: v437  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 84]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v442 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v442  <|@  <|@
f <@~|@floating>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 2]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v666 
y: v904 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v666 y: v904  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 5]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v439 
=== Succesors ===
trueSuccessor: v440 
falseSuccessor: v441 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v439 #trueSuccessor: v440 #falseSuccessor: v441  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:101) [bci: 8]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v476  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
v440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 17]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j465 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j465  <|@  <|@
f <@~|@floating>@ <|@
tid v925 <|@
result [v48|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: v666 
index: - 
=== Succesors ===
=== Usages ===
j465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v666 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j465 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 27]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v925 
=== Succesors ===
next: i466 
=== Usages ===
v926 v927 
=== Predecessor ===
v441 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v925 #next: i466  <|@  <|@
f <@~|@floating>@ <|@
tid v926 <|@
result [v51|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i466 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 41]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v926 
=== Succesors ===
next: v445 
=== Usages ===
v448 
=== Predecessor ===
j465 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v926 #next: v445  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
i466 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [v48|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV [v51|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B57" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i447 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v446 
values: i73 i461 
=== Succesors ===
=== Usages ===
v448 i452 i461 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v446 values: i73 i461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v445 
=== Succesors ===
next: v451 
=== Usages ===
i447 v450 v459 v462 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v445 #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@c50510
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i447 
y: i466 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i447 y: i466  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v448 
=== Succesors ===
trueSuccessor: v449 
falseSuccessor: v450 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v448 #trueSuccessor: v449 #falseSuccessor: v450  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 56]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j467 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j467  <|@  <|@
f <@~|@floating>@ <|@
tid i452 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$126/0x000000084014a840@131afb18
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i447 
y: i328 
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i447 y: i328  <|@  <|@
f <@~|@floating>@ <|@
tid i453 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 12]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i452 
y: i327 
=== Succesors ===
=== Usages ===
j454 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i452 y: i327  <|@  <|@
f <@~|@floating>@ <|@
tid j454 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 32
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i453 
=== Succesors ===
=== Usages ===
v927 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i453  <|@  <|@
f <@~|@floating>@ <|@
tid v927 <|@
result [v51|QWORD + v56|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j465 
index: j454 
=== Succesors ===
=== Usages ===
j467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: j454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j467 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v927 
=== Succesors ===
next: v460 
=== Usages ===
v456 
=== Predecessor ===
v449 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v927 #next: v460  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 22]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: Klass*
=== Inputs ===
input: j467 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j467  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 66]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v456 
y: v904 
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v456 y: v904  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 72]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v457 
=== Succesors ===
trueSuccessor: v459 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
j467 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v457 #trueSuccessor: v459 #falseSuccessor: v458  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SHL v53|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = LEA [v54|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVSXD v55|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [v51|QWORD + v56|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:110) [bci: 75]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v446 
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v446 #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v928 <|@
result [v48|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: v666 
index: - 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v666 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:110) [bci: 86]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v928 
value: v904 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v928 value: v904 stateAfter: - lastLocationAccess: - #next: v477  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
v468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 32], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B32" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v548 v475 v476 v477 
=== Succesors ===
next: j668 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v548 v475 v476 v477 #next: j668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j668 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:773) [bci: 3]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:182) [bci: 11]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a669 
=== Usages ===
v949 v951 v953 
=== Predecessor ===
v546 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: a669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a669 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:184) [bci: 22]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
predefinedStamp: [null]
stamp: a - NULL
=== Inputs ===
object: a667 
=== Succesors ===
next: j670 
=== Usages ===
=== Predecessor ===
j668 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a667 #next: j670  <|@  <|@
f <@~|@floating>@ <|@
tid a195 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.array(ArrayBuffer.scala:48) [bci: 1]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 11]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a899 
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a899  <|@  <|@
f <@~|@floating>@ <|@
tid v913 <|@
result [v58|QWORD[.] + v42|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a195 
index: i902 
=== Succesors ===
=== Usages ===
v218 j670 j717 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a195 index: i902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j670 <|@
result [v58|QWORD[.] + v42|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:185) [bci: 28]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v913 
=== Succesors ===
next: i697 
=== Usages ===
v950 
=== Predecessor ===
a669 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v913 #next: i697  <|@  <|@
f <@~|@floating>@ <|@
tid v949 <|@
result [r15|QWORD + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j668 
index: - 
=== Succesors ===
=== Usages ===
i697 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j668 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i697 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:187) [bci: 48]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v949 
=== Succesors ===
next: v675 
=== Usages ===
i698 
=== Predecessor ===
j670 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v949 #next: v675  <|@  <|@
f <@~|@floating>@ <|@
tid i698 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:187) [bci: 48]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i697 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i697  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:200) [bci: 206]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i698 
y: i73 
=== Succesors ===
=== Usages ===
v675 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i698 y: i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:200) [bci: 217]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v672 
=== Succesors ===
trueSuccessor: v673 
falseSuccessor: v674 
=== Usages ===
=== Predecessor ===
i697 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v672 #trueSuccessor: v673 #falseSuccessor: v674  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:230) [bci: 427]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v707 
=== Usages ===
=== Predecessor ===
v675 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v707  <|@  <|@
f <@*|@fixed>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
v673 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:203) [bci: 220]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a699 
=== Usages ===
=== Predecessor ===
v675 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a699  <|@  <|@
f <@~|@floating>@ <|@
tid v950 <|@
result [v60|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j670 
index: - 
=== Succesors ===
=== Usages ===
a699 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j670 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a699 <|@
result v61|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:204) [bci: 236]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v950 
=== Succesors ===
next: j677 
=== Usages ===
a700 
=== Predecessor ===
v674 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v950 #next: j677  <|@  <|@
f <@~|@floating>@ <|@
tid a700 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:204) [bci: 236]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: Uncompress
stamp: a -
=== Inputs ===
value: a699 
=== Succesors ===
=== Usages ===
j677 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j677 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:204) [bci: 239]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a700 
=== Succesors ===
next: v681 
=== Usages ===
v678 a689 v703 
=== Predecessor ===
a699 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a700 #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:212) [bci: 296]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j677 
y: j342 
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j677 y: j342  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:212) [bci: 304]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v678 
=== Succesors ===
trueSuccessor: v680 
falseSuccessor: v679 
=== Usages ===
=== Predecessor ===
j677 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v678 #trueSuccessor: v680 #falseSuccessor: v679  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[.] = MOV [v60|QWORD[.]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|QWORD[.], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564592752682893746
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:230) [bci: 427]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v708  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
v680 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:213) [bci: 307]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j701 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j701  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j668 
index: - 
=== Succesors ===
=== Usages ===
j701 v704 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j668 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j701 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:217) [bci: 331]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v953 
=== Succesors ===
next: v685 
=== Usages ===
v682 j696 v952 
=== Predecessor ===
v679 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v953 #next: v685  <|@  <|@
f <@~|@floating>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:218) [bci: 345]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j701 
y: j342 
=== Succesors ===
=== Usages ===
v685 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j701 y: j342  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:218) [bci: 351]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v682 
=== Succesors ===
trueSuccessor: v683 
falseSuccessor: v684 
=== Usages ===
=== Predecessor ===
j701 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v682 #trueSuccessor: v683 #falseSuccessor: v684  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:226) [bci: 414]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a689 
=== Usages ===
=== Predecessor ===
v685 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a689 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:226) [bci: 419]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: a -
trackedPointer: true
=== Inputs ===
input: j677 
=== Succesors ===
next: v690 
=== Usages ===
v690 
=== Predecessor ===
v683 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j677 #next: v690  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: write_barrier_pre(Object)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e095940
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:226) [bci: 424]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a689 
=== Succesors ===
next: v710 
=== Usages ===
=== Predecessor ===
a689 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a689 #next: v710  <|@  <|@
f <@*|@fixed>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
v690 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:219) [bci: 354]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j702 
=== Usages ===
=== Predecessor ===
v685 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j702  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: j668 
index: - 
=== Succesors ===
=== Usages ===
j702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j668 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j702 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:219) [bci: 362]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v951 
=== Succesors ===
next: v703 
=== Usages ===
v952 
=== Predecessor ===
v684 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v951 #next: v703  <|@  <|@
f <@~|@floating>@ <|@
tid v952 <|@
result [v63|QWORD + v64|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
=== Inputs ===
base: j701 
index: j702 
=== Succesors ===
=== Usages ===
v703 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j701 index: j702  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Log
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:223) [bci: 397]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v952 
value: j677 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v704 
=== Usages ===
=== Predecessor ===
j702 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v952 value: j677 stateAfter: - lastLocationAccess: - #next: v704  <|@  <|@
f <@~|@floating>@ <|@
tid j696 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:220) [bci: 375]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
=== Inputs ===
x: j701 
y: j695 
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j701 y: j695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Index
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:224) [bci: 408]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v953 
value: j696 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v709 
=== Usages ===
=== Predecessor ===
v703 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v953 value: j696 stateAfter: - lastLocationAccess: - #next: v709  <|@  <|@
f <@*|@fixed>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
v704 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD + v64|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 56], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v707 v708 v709 v710 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v707 v708 v709 v710 #next: v218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v278 
address: v913 
value: a897 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j715 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v278 address: v913 value: a897 stateAfter: - lastLocationAccess: - #next: j715  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j715 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:773) [bci: 3]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:235) [bci: 2]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a716 
=== Usages ===
v954 v955 
=== Predecessor ===
v218 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: a716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a716 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:236) [bci: 8]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
predefinedStamp: [null]
stamp: a Ljava/lang/Object;
=== Inputs ===
object: a186 
=== Succesors ===
next: j717 
=== Usages ===
j718 
=== Predecessor ===
j715 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a186 #next: j717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j717 <|@
result [v58|QWORD[.] + v42|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:242) [bci: 35]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v913 
=== Succesors ===
next: j718 
=== Usages ===
j719 j721 
=== Predecessor ===
a716 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v913 #next: j718  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j718 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:256) [bci: 137]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a716 
=== Succesors ===
next: v725 
=== Usages ===
j719 v726 
=== Predecessor ===
j717 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a716 #next: v725  <|@  <|@
f <@~|@floating>@ <|@
tid j719 <|@
result v67|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$185/0x00000008402b6c40@7f610884
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:260) [bci: 151]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
=== Inputs ===
x: j717 
y: j718 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j717 y: j718  <|@  <|@
f <@~|@floating>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:275) [bci: 254]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
x: j719 
y: j749 
=== Succesors ===
=== Usages ===
v725 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j719 y: j749  <|@  <|@
f <@*|@fixed>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:275) [bci: 262]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v750 
=== Succesors ===
trueSuccessor: v723 
falseSuccessor: v724 
=== Usages ===
=== Predecessor ===
j718 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v750 #trueSuccessor: v723 #falseSuccessor: v724  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD[.] + v42|DWORD * 4 + 16], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = XOR (x: v66|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v67|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v767 
=== Usages ===
=== Predecessor ===
v725 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v767  <|@  <|@
f <@*|@fixed>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
v723 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:276) [bci: 265]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v725 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@~|@floating>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:279) [bci: 279]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j718 
y: j342 
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j718 y: j342  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:279) [bci: 287]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v726 
=== Succesors ===
trueSuccessor: v728 
falseSuccessor: v727 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v726 #trueSuccessor: v728 #falseSuccessor: v727  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v768 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v768  <|@  <|@
f <@*|@fixed>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
v728 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:280) [bci: 290]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i755 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i755  <|@  <|@
f <@~|@floating>@ <|@
tid j721 <|@
result v68|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$172/0x0000000840292440@2e0f974
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:264) [bci: 173]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j717 
y: i720 
=== Succesors ===
=== Usages ===
j722 v957 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j717 y: i720  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
result [v68|QWORD[*] + v27|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j721 
index: j748 
=== Succesors ===
=== Usages ===
i755 i757 v759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j721 index: j748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i755 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: GC-Card
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:280) [bci: 296]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
=== Succesors ===
next: v733 
=== Usages ===
i756 
=== Predecessor ===
v727 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v957 #next: v733  <|@  <|@
f <@~|@floating>@ <|@
tid i756 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:280) [bci: 296]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i755 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i755  <|@  <|@
f <@~|@floating>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:284) [bci: 320]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i756 
y: i428 
=== Succesors ===
=== Usages ===
v733 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i756 y: i428  <|@  <|@
f <@*|@fixed>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:284) [bci: 331]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v730 
=== Succesors ===
trueSuccessor: v732 
falseSuccessor: v731 
=== Usages ===
=== Predecessor ===
i755 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v730 #trueSuccessor: v732 #falseSuccessor: v731  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = SHR v69|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVSXB [v68|QWORD[*] + v27|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v769 
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v769  <|@  <|@
f <@*|@fixed>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
v732 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:285) [bci: 334]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v734 
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v734  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
barriers: 4
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:285) [bci: 338]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i757 
=== Usages ===
=== Predecessor ===
v731 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i757 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: GC-Card
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:286) [bci: 347]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
=== Succesors ===
next: v738 
=== Usages ===
i758 
=== Predecessor ===
v734 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v957 #next: v738  <|@  <|@
f <@~|@floating>@ <|@
tid i758 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:286) [bci: 347]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i757 
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i757  <|@  <|@
f <@~|@floating>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:287) [bci: 363]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i758 
y: i73 
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i758 y: i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:287) [bci: 374]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v735 
=== Succesors ===
trueSuccessor: v737 
falseSuccessor: v736 
=== Usages ===
=== Predecessor ===
i757 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v735 #trueSuccessor: v737 #falseSuccessor: v736  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVSXB [v68|QWORD[*] + v27|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577486745296679515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v770 
=== Usages ===
=== Predecessor ===
v738 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v770  <|@  <|@
f <@*|@fixed>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
v737 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:288) [bci: 377]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v738 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:289) [bci: 409]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
value: i764 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j760 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v957 value: i764 stateAfter: - lastLocationAccess: - #next: j760  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j715 
index: - 
=== Succesors ===
=== Usages ===
j760 v763 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j715 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j760 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:295) [bci: 441]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v954 
=== Succesors ===
next: v743 
=== Usages ===
v740 j754 v956 
=== Predecessor ===
v759 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v954 #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:296) [bci: 455]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j760 
y: j342 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j760 y: j342  <|@  <|@
f <@~|@floating>@ <|@
tid j722 <|@
result v73|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:270) [bci: 219]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64 [139991352238080 - 36168788371202047] ⇈00ffffffffffffff
=== Inputs ===
x: j721 
y: j748 
=== Succesors ===
=== Usages ===
v747 v762 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j721 y: j748  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:296) [bci: 461]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v740 
=== Succesors ===
trueSuccessor: v741 
falseSuccessor: v742 
=== Usages ===
=== Predecessor ===
j760 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v740 #trueSuccessor: v741 #falseSuccessor: v742  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v68|QWORD[*] + v27|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[*] = ADD (x: v68|QWORD[*], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v72|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:305) [bci: 524]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: write_barrier_post(Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e095940
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:305) [bci: 529]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j722 
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j722 #next: v772  <|@  <|@
f <@*|@fixed>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
v747 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v73|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:297) [bci: 464]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j761 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j761  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
result [r15|QWORD + 128] <|@
d <@d|@=== Debug Properties ===
displacement: 128
scale: Times1
stamp: void*
=== Inputs ===
base: j715 
index: - 
=== Succesors ===
=== Usages ===
j761 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j715 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j761 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:297) [bci: 472]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v955 
=== Succesors ===
next: v762 
=== Usages ===
v956 
=== Predecessor ===
v742 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v955 #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
result [v72|QWORD + v74|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
=== Inputs ===
base: j760 
index: j761 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j760 index: j761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Log
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:302) [bci: 507]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v956 
value: j722 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v763 
=== Usages ===
=== Predecessor ===
j761 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v956 value: j722 stateAfter: - lastLocationAccess: - #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:298) [bci: 485]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
=== Inputs ===
x: j760 
y: j695 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j760 y: j695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Index
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:303) [bci: 518]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v954 
value: j754 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v954 value: j754 stateAfter: - lastLocationAccess: - #next: v771  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
v763 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD + v74|QWORD * 1 - 8], y: v73|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 112], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v767 v768 v769 v770 v771 v772 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v767 v768 v769 v770 v771 v772 #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:86) [bci: 26]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i32
=== Inputs ===
x: i902 
y: i133 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i902 y: i133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayBuffer.size0
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.size0_$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:86) [bci: 27]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v909 
value: i145 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v909 value: i145 stateAfter: - lastLocationAccess: - #next: v115  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
v220 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 98]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid i461 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 98]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i32
=== Inputs ===
x: i447 
y: i133 
=== Succesors ===
=== Usages ===
i447 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i447 y: i133  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
loopBegin: v446 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v446  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|DWORD] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580682074240651296
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 104]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v446 
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v446 #next: v562  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
v450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 4587195615000912736
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:91) [bci: 75]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v557  <|@  <|@
f <@*|@fixed>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
v437 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v557 v562 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v557 v562 #next: v286  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v70 
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v70 #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid i542 <|@
result int[-56107|0xffffffffffff24d5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -56107
stableDimension: 0
stamp: i32 [-56107] ⇊00000000ffff24d5 ⇈00000000ffff24d5
stampKind: i32
value: int[-56107|0xffffffffffff24d5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i536 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
v286 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-56107|0xffffffffffff24d5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v70 
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v70 #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid i540 <|@
result int[-51995|0xffffffffffff34e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51995
stableDimension: 0
stamp: i32 [-51995] ⇊00000000ffff34e5 ⇈00000000ffff34e5
stampKind: i32
value: int[-51995|0xffffffffffff34e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i536 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51995|0xffffffffffff34e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i536 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-56107 - -50699] ⇊00000000ffff20c5 ⇈00000000ffff3df5
valueDescription: i32
=== Inputs ===
merge: v533 
values: i540 i542 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v533 values: i540 i542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v539 v541 
=== Succesors ===
next: v538 
=== Usages ===
i536 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v539 v541 #next: v538  <|@  <|@
f <@*|@fixed>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:85) [bci: 19]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateBefore: ?139 
actionAndReason: i536 
speculation: j342 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?139 actionAndReason: i536 speculation: j342  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a906 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a906 <|@
result v79|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SetBuilder.elems
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems(SetBuilder.scala:23) [bci: 1]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v909 
=== Succesors ===
next: v292 
=== Usages ===
a223 v224 
=== Predecessor ===
v116 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v909 #next: v292  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a906 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a906  <|@  <|@
f <@*|@fixed>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v224 
=== Succesors ===
trueSuccessor: v291 
falseSuccessor: v288 
=== Usages ===
=== Predecessor ===
a906 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v224 #trueSuccessor: v291 #falseSuccessor: v288  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v79|DWORD[.], y: v79|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v70 
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v70 #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid i532 <|@
result int[-57611|0xffffffffffff1ef5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -57611
stableDimension: 0
stamp: i32 [-57611] ⇊00000000ffff1ef5 ⇈00000000ffff1ef5
stampKind: i32
value: int[-57611|0xffffffffffff1ef5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
v291 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-57611|0xffffffffffff1ef5]] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a153 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a153  <|@  <|@
f <@~|@floating>@ <|@
tid a223 <|@
result v80|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems(SetBuilder.scala:23) [bci: 1]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: Uncompress
stamp: a -
=== Inputs ===
value: a906 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a906  <|@  <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
referencedType: [null]
returnStamp: a - (unchecked=a Lscala/collection/Set;)
signature: [Ljdk.vm.ci.meta.JavaType;@37178d46
stamp: void
targetMethod: HotSpotMethod<Set.$plus(Object)>
=== Inputs ===
arguments: a223 a186 
=== Succesors ===
=== Usages ===
a153 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a223 a186  <|@  <|@
tid ?159 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Growable.loop$1(LinearSeq)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Growable.scala
sourceLine: 53
stackSize: 0
=== Inputs ===
outerFrameState: ?170 
values: a1 a71 
=== Succesors ===
=== Usages ===
?158 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?170 values: a1 a71  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<SetBuilder.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: SetBuilder.scala
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: ?159 
values: - - 
=== Succesors ===
=== Usages ===
?514 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?159 values: - -  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<SetBuilder.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: SetBuilder.scala
sourceLine: 24
stackSize: 1
=== Inputs ===
outerFrameState: ?158 
values: a1 - a1 
=== Succesors ===
=== Usages ===
a153 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?158 values: a1 - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a153 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 6
nodeSourcePosition: at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
polymorphic: true
stamp: a -
targetMethod: Direct#Set.$plus
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v227 
stateDuring: ?514 
=== Succesors ===
next: j778 
=== Usages ===
a823 a228 
=== Predecessor ===
v288 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v227 stateDuring: ?514 #next: j778  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j778 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:773) [bci: 3]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:182) [bci: 11]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a779 
=== Usages ===
v958 v960 v962 
=== Predecessor ===
a153 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: a779  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a779 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:184) [bci: 22]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
predefinedStamp: [null]
stamp: a - NULL
=== Inputs ===
object: a667 
=== Succesors ===
next: j780 
=== Usages ===
=== Predecessor ===
j778 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a667 #next: j780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j780 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:185) [bci: 28]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v909 
=== Succesors ===
next: i803 
=== Usages ===
v959 
=== Predecessor ===
a779 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v909 #next: i803  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
result [r15|QWORD + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j778 
index: - 
=== Succesors ===
=== Usages ===
i803 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i803 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:187) [bci: 48]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
=== Succesors ===
next: v785 
=== Usages ===
i804 
=== Predecessor ===
j780 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v958 #next: v785  <|@  <|@
f <@~|@floating>@ <|@
tid i804 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:187) [bci: 48]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i803 
=== Succesors ===
=== Usages ===
v782 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i803  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:200) [bci: 206]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i804 
y: i73 
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i804 y: i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:200) [bci: 217]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v782 
=== Succesors ===
trueSuccessor: v783 
falseSuccessor: v784 
=== Usages ===
=== Predecessor ===
i803 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v782 #trueSuccessor: v783 #falseSuccessor: v784  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426301
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:230) [bci: 427]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v813 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v813  <|@  <|@
f <@*|@fixed>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v783 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:203) [bci: 220]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a805 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a805  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
result [v83|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
a805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a805 <|@
result v84|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:204) [bci: 236]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v959 
=== Succesors ===
next: j787 
=== Usages ===
a806 
=== Predecessor ===
v784 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v959 #next: j787  <|@  <|@
f <@~|@floating>@ <|@
tid a806 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:204) [bci: 236]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: Uncompress
stamp: a -
=== Inputs ===
value: a805 
=== Succesors ===
=== Usages ===
j787 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a805  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j787 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:204) [bci: 239]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a806 
=== Succesors ===
next: v791 
=== Usages ===
v788 a799 v809 
=== Predecessor ===
a805 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a806 #next: v791  <|@  <|@
f <@~|@floating>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:212) [bci: 296]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j787 
y: j342 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j787 y: j342  <|@  <|@
f <@*|@fixed>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:212) [bci: 304]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v788 
=== Succesors ===
trueSuccessor: v790 
falseSuccessor: v789 
=== Usages ===
=== Predecessor ===
j787 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v788 #trueSuccessor: v790 #falseSuccessor: v789  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LEA [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = MOV [v83|QWORD[.]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v85|QWORD[.], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564271162101631196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:230) [bci: 427]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v814 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v814  <|@  <|@
f <@*|@fixed>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v790 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:213) [bci: 307]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j807 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j807  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j778 
index: - 
=== Succesors ===
=== Usages ===
j807 v810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j807 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:217) [bci: 331]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
=== Succesors ===
next: v795 
=== Usages ===
v792 j802 v961 
=== Predecessor ===
v789 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v962 #next: v795  <|@  <|@
f <@~|@floating>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:218) [bci: 345]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j807 
y: j342 
=== Succesors ===
=== Usages ===
v795 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j807 y: j342  <|@  <|@
f <@*|@fixed>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:218) [bci: 351]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v792 
=== Succesors ===
trueSuccessor: v793 
falseSuccessor: v794 
=== Usages ===
=== Predecessor ===
j807 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v792 #trueSuccessor: v793 #falseSuccessor: v794  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v86|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:226) [bci: 414]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a799 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a799  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a799 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:226) [bci: 419]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: a -
trackedPointer: true
=== Inputs ===
input: j787 
=== Succesors ===
next: v800 
=== Usages ===
v800 
=== Predecessor ===
v793 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j787 #next: v800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: write_barrier_pre(Object)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e095940
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:226) [bci: 424]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a799 
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
a799 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a799 #next: v816  <|@  <|@
f <@*|@fixed>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v800 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:219) [bci: 354]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j808 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j808  <|@  <|@
f <@~|@floating>@ <|@
tid v960 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: j778 
index: - 
=== Succesors ===
=== Usages ===
j808 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j808 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:219) [bci: 362]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
=== Succesors ===
next: v809 
=== Usages ===
v961 
=== Predecessor ===
v794 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v960 #next: v809  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
result [v86|QWORD + v87|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
=== Inputs ===
base: j807 
index: j808 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: j808  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Log
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:223) [bci: 397]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v961 
value: j787 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v810 
=== Usages ===
=== Predecessor ===
j808 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v961 value: j787 stateAfter: - lastLocationAccess: - #next: v810  <|@  <|@
f <@~|@floating>@ <|@
tid j802 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:220) [bci: 375]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
=== Inputs ===
x: j807 
y: j695 
=== Succesors ===
=== Usages ===
v810 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j807 y: j695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Index
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:224) [bci: 408]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
value: j802 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v815 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v962 value: j802 stateAfter: - lastLocationAccess: - #next: v815  <|@  <|@
f <@*|@fixed>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v810 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD + v87|QWORD * 1 - 8], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = LEA [v86|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 56], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v813 v814 v815 v816 
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v813 v814 v815 v816 #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid a228 <|@
result v89|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: Compress
stamp: n -
=== Inputs ===
value: a153 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: SetBuilder.elems
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v909 
value: a228 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j822 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v909 value: a228 stateAfter: - lastLocationAccess: - #next: j822  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j822 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:773) [bci: 3]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:235) [bci: 2]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a823 
=== Usages ===
v963 v964 
=== Predecessor ===
v229 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: a823  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a823 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:236) [bci: 8]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
predefinedStamp: [null]
stamp: a Ljava/lang/Object;
=== Inputs ===
object: a153 
=== Succesors ===
next: j824 
=== Usages ===
j825 
=== Predecessor ===
j822 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a153 #next: j824  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j824 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:247) [bci: 53]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j825 
=== Usages ===
j826 j827 
=== Predecessor ===
a823 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: j825  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j825 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:256) [bci: 137]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a823 
=== Succesors ===
next: v831 
=== Usages ===
j826 v832 
=== Predecessor ===
j824 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a823 #next: v831  <|@  <|@
f <@~|@floating>@ <|@
tid j826 <|@
result v90|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$185/0x00000008402b6c40@7f610884
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:260) [bci: 151]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
=== Inputs ===
x: j824 
y: j825 
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j824 y: j825  <|@  <|@
f <@~|@floating>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:275) [bci: 254]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
x: j826 
y: j749 
=== Succesors ===
=== Usages ===
v831 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j826 y: j749  <|@  <|@
f <@*|@fixed>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:275) [bci: 262]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v854 
=== Succesors ===
trueSuccessor: v829 
falseSuccessor: v830 
=== Usages ===
=== Predecessor ===
j825 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v854 #trueSuccessor: v829 #falseSuccessor: v830  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[.] = COMPRESSPOINTER (input: v81|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[*] = XOR (x: v0|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v90|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
v829 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:276) [bci: 265]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@~|@floating>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:279) [bci: 279]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j825 
y: j342 
=== Succesors ===
=== Usages ===
v835 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j825 y: j342  <|@  <|@
f <@*|@fixed>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:279) [bci: 287]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v832 
=== Succesors ===
trueSuccessor: v834 
falseSuccessor: v833 
=== Usages ===
=== Predecessor ===
v830 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v832 #trueSuccessor: v834 #falseSuccessor: v833  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v890 
=== Usages ===
=== Predecessor ===
v835 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v890  <|@  <|@
f <@*|@fixed>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
v834 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:280) [bci: 290]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i857 
=== Usages ===
=== Predecessor ===
v835 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i857  <|@  <|@
f <@~|@floating>@ <|@
tid j827 <|@
result v91|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$172/0x0000000840292440@2e0f974
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:264) [bci: 173]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j824 
y: i720 
=== Succesors ===
=== Usages ===
j828 v966 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j824 y: i720  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
result [v91|QWORD[*] + v27|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j827 
index: j748 
=== Succesors ===
=== Usages ===
i857 i859 v861 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j827 index: j748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i857 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: GC-Card
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:280) [bci: 296]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
=== Succesors ===
next: v839 
=== Usages ===
i858 
=== Predecessor ===
v833 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v966 #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid i858 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:280) [bci: 296]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i857 
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i857  <|@  <|@
f <@~|@floating>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:284) [bci: 320]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i858 
y: i428 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i858 y: i428  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:284) [bci: 331]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v836 
=== Succesors ===
trueSuccessor: v838 
falseSuccessor: v837 
=== Usages ===
=== Predecessor ===
i857 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v836 #trueSuccessor: v838 #falseSuccessor: v837  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVSXB [v91|QWORD[*] + v27|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v92|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v889 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v889  <|@  <|@
f <@*|@fixed>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
v838 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:285) [bci: 334]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v840 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v840  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
barriers: 4
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:285) [bci: 338]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i859 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i859  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i859 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: GC-Card
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:286) [bci: 347]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
=== Succesors ===
next: v844 
=== Usages ===
i860 
=== Predecessor ===
v840 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v966 #next: v844  <|@  <|@
f <@~|@floating>@ <|@
tid i860 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:286) [bci: 347]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i859 
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i859  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:287) [bci: 363]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i860 
y: i73 
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i860 y: i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:287) [bci: 374]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v841 
=== Succesors ===
trueSuccessor: v843 
falseSuccessor: v842 
=== Usages ===
=== Predecessor ===
i859 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v841 #trueSuccessor: v843 #falseSuccessor: v842  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVSXB [v91|QWORD[*] + v27|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v888 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v888  <|@  <|@
f <@*|@fixed>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
v843 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:288) [bci: 377]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v861 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:289) [bci: 409]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
value: i764 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j862 
=== Usages ===
=== Predecessor ===
v842 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v966 value: i764 stateAfter: - lastLocationAccess: - #next: j862  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j822 
index: - 
=== Succesors ===
=== Usages ===
j862 v865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j862 <|@
result v94|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:295) [bci: 441]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
=== Succesors ===
next: v849 
=== Usages ===
v846 j856 v965 
=== Predecessor ===
v861 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v963 #next: v849  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:296) [bci: 455]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j862 
y: j342 
=== Succesors ===
=== Usages ===
v849 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j862 y: j342  <|@  <|@
f <@~|@floating>@ <|@
tid j828 <|@
result v95|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:270) [bci: 219]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64 [139991352238080 - 36168788371202047] ⇈00ffffffffffffff
=== Inputs ===
x: j827 
y: j748 
=== Succesors ===
=== Usages ===
v853 v864 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j827 y: j748  <|@  <|@
f <@*|@fixed>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:296) [bci: 461]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v846 
=== Succesors ===
trueSuccessor: v847 
falseSuccessor: v848 
=== Usages ===
=== Predecessor ===
j862 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v846 #trueSuccessor: v847 #falseSuccessor: v848  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v91|QWORD[*] + v27|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[*] = ADD (x: v91|QWORD[*], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v94|QWORD, y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:305) [bci: 524]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v853 
=== Usages ===
=== Predecessor ===
v849 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: write_barrier_post(Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e095940
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:305) [bci: 529]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j828 
=== Succesors ===
next: v886 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j828 #next: v886  <|@  <|@
f <@*|@fixed>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
v853 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v95|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:297) [bci: 464]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j863 
=== Usages ===
=== Predecessor ===
v849 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j863  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
result [r15|QWORD + 128] <|@
d <@d|@=== Debug Properties ===
displacement: 128
scale: Times1
stamp: void*
=== Inputs ===
base: j822 
index: - 
=== Succesors ===
=== Usages ===
j863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j863 <|@
result v96|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:297) [bci: 472]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
=== Succesors ===
next: v864 
=== Usages ===
v965 
=== Predecessor ===
v848 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v964 #next: v864  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
result [v94|QWORD + v96|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
=== Inputs ===
base: j862 
index: j863 
=== Succesors ===
=== Usages ===
v864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j862 index: j863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Log
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:302) [bci: 507]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v965 
value: j828 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
j863 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v965 value: j828 stateAfter: - lastLocationAccess: - #next: v865  <|@  <|@
f <@~|@floating>@ <|@
tid j856 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:298) [bci: 485]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i64
=== Inputs ===
x: j862 
y: j695 
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j862 y: j695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Index
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:303) [bci: 518]
at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
value: j856 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v887 
=== Usages ===
=== Predecessor ===
v864 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v963 value: j856 stateAfter: - lastLocationAccess: - #next: v887  <|@  <|@
f <@*|@fixed>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.SetBuilder.elems_$eq(SetBuilder.scala:23) [bci: 2]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 11]
at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
v865 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v94|QWORD + v96|QWORD * 1 - 8], y: v95|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = LEA [v94|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 112], y: v97|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i161 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i161  <|@  <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
referencedType: [null]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@3f03dd33
stamp: void
targetMethod: HotSpotMethod<FlatHashTable.addElem(Object)>
=== Inputs ===
arguments: a1 a186 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a186  <|@  <|@
tid ?166 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Growable.loop$1(LinearSeq)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Growable.scala
sourceLine: 53
stackSize: 0
=== Inputs ===
outerFrameState: ?170 
values: a1 a71 
=== Succesors ===
=== Usages ===
?162 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?170 values: a1 a71  <|@  <|@
tid ?162 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 40
stackSize: 0
=== Inputs ===
outerFrameState: ?166 
values: a1 a186 
=== Succesors ===
=== Usages ===
?163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?166 values: a1 a186  <|@  <|@
tid ?163 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.$plus$eq(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 59
stackSize: 0
=== Inputs ===
outerFrameState: ?162 
values: a1 a186 
=== Succesors ===
=== Usages ===
?164 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?162 values: a1 a186  <|@  <|@
tid ?164 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashSet.addElem(Object)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 40
stackSize: 0
=== Inputs ===
outerFrameState: ?163 
values: a1 a186 
=== Succesors ===
=== Usages ===
?513 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?163 values: a1 a186  <|@  <|@
tid ?513 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<FlatHashTable.addElem$(FlatHashTable, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 138
stackSize: 0
=== Inputs ===
outerFrameState: ?164 
values: - - 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?164 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i161 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#FlatHashTable.addElem
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v230 
stateDuring: ?513 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v230 stateDuring: ?513 #next: v119  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
i161 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a111 <|@
result v99|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v110 
values: a129 a1 a1 a1 a1 a1 a1 a1 a1 
=== Succesors ===
=== Usages ===
?79 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v110 values: a129 a1 a1 a1 a1 a1 a1 a1 a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v113 v115 v117 v119 v886 v887 v888 v889 v890 
=== Succesors ===
next: a907 
=== Usages ===
a111 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v113 v115 v117 v119 v886 v887 v888 v889 v890 #next: a907  <|@  <|@
f <@~|@floating>@ <|@
tid v914 <|@
result [v28|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a71 
index: - 
=== Succesors ===
=== Usages ===
a907 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a71 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a907 <|@
result v100|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: $colon$colon.tl
nodeSourcePosition: at scala.collection.immutable.$colon$colon.tl(List.scala:436) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:437) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:436) [bci: 1]
at scala.collection.generic.Growable.loop$1(Growable.scala:54) [bci: 23]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
nullCheck: false
stamp: n Lscala/collection/immutable/List;
=== Inputs ===
stateBefore: - 
guard: - 
address: v914 
=== Succesors ===
next: v969 
=== Usages ===
a233 v969 
=== Predecessor ===
v110 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v914 #next: v969  <|@  <|@
tid ?79 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Growable.loop$1(LinearSeq)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rethrowException: false
sourceFile: Growable.scala
sourceLine: 53
stackSize: 1
=== Inputs ===
outerFrameState: ?170 
values: a1 a71 a111 
=== Succesors ===
=== Usages ===
v263 v969 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?170 values: a1 a71 a111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?79 
object: a907 
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
a907 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?79 object: a907 #next: v263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateBefore: ?79 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?79 #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid a233 <|@
result v102|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.immutable.$colon$colon.tl(List.scala:436) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:437) [bci: 1]
at scala.collection.immutable.$colon$colon.tail(List.scala:436) [bci: 1]
at scala.collection.generic.Growable.loop$1(Growable.scala:54) [bci: 23]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
op: Uncompress
stamp: a Lscala/collection/immutable/List;
=== Inputs ===
value: a907 
=== Succesors ===
=== Usages ===
a71 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a907  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
loopBegin: v70 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v70  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[.] = MOV [v28|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v100|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT v101|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v102|QWORD[.]] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v524 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v524  <|@  <|@
f <@~|@floating>@ <|@
tid i525 <|@
result int[-30771|0xffffffffffff87cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -30771
stableDimension: 0
stamp: i32 [-30771] ⇊00000000ffff87cd ⇈00000000ffff87cd
stampKind: i32
value: int[-30771|0xffffffffffff87cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
v121 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30771|0xffffffffffff87cd]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 11]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v70 
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v70 #next: v529  <|@  <|@
f <@~|@floating>@ <|@
tid i530 <|@
result int[-46643|0xffffffffffff49cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -46643
stableDimension: 0
stamp: i32 [-46643] ⇊00000000ffff49cd ⇈00000000ffff49cd
stampKind: i32
value: int[-46643|0xffffffffffff49cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
v271 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46643|0xffffffffffff49cd]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i526 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-57611 - -30771] ⇊00000000ffff00c5 ⇈00000000ffffdffd
valueDescription: i32
=== Inputs ===
merge: v523 
values: i525 i530 i532 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v523 values: i525 i530 i532  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v524 v529 v531 
=== Succesors ===
next: v528 
=== Usages ===
i526 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v524 v529 v531 #next: v528  <|@  <|@
tid ?91 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<TraversableOnce.nonEmpty()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
at scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
at scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rethrowException: false
sourceFile: TraversableOnce.scala
sourceLine: 111
stackSize: 1
=== Inputs ===
outerFrameState: ?102 
values: - i73 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?102 values: - i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?91 
actionAndReason: i526 
speculation: j342 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?91 actionAndReason: i526 speculation: j342  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 35]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v70 
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v70 #next: v43  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:61) [bci: 33]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Growable.loop$1(LinearSeq)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Growable.scala
sourceLine: 52
stackSize: 0
=== Inputs ===
outerFrameState: ?170 
values: a1 a71 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?170 values: a1 a71  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
reason: TypeCheckedInliningViolated
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@3a797466
stamp: void
=== Inputs ===
stateBefore: ?72 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?72  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 98]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 98]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: i32
=== Inputs ===
x: i380 
y: i133 
=== Succesors ===
=== Usages ===
i380 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i380 y: i133  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
loopBegin: v379 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v379  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|DWORD] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 104]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v379 
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v379 #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid i522 <|@
result int[-105761|0xfffffffffffe62df] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105761
stableDimension: 0
stamp: i32 [-105761] ⇊00000000fffe62df ⇈00000000fffe62df
stampKind: i32
value: int[-105761|0xfffffffffffe62df]
=== Inputs ===
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i522 
speculation: j342 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i522 speculation: j342  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 98]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid i338 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 98]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: i32
=== Inputs ===
x: i322 
y: i133 
=== Succesors ===
=== Usages ===
i322 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i322 y: i133  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
loopBegin: v321 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v321  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 104]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v321 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v321 #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid a486 <|@
result v106|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
op: Compress
stamp: n! -
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v487 v492 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
result meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:471) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:522) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
rawvalue: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 34359738368 shift: 3)
stampKind: Klass*(compressed base: 34359738368 shift: 3)
value: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v605 v643 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
result v107|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
rawvalue: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 a585 a627 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
result [v107|QWORD + 184] <|@
d <@d|@=== Debug Properties ===
displacement: 184
scale: Times1
stamp: void*
=== Inputs ===
base: v571 
index: - 
=== Succesors ===
=== Usages ===
j639 j601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v571 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j188 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.ArrayBuffer.size0(ArrayBuffer.scala:48) [bci: 1]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 2]
at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j617 j575 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
hubs: [Ljdk.vm.ci.meta.Constant;@43d56ca4
keyProbabilities: [D@6685cd23
keySuccessors: [I@6d730108
keys: [Ljdk.vm.ci.meta.ResolvedJavaType;@4cb8b3d0
stamp: void
=== Inputs ===
value: v570 
=== Succesors ===
successors: v48 v52 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@TypeSwitch|@org.graalvm.compiler.nodes.java.TypeSwitchNode>@ value: v570 #successors: v48 v52  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a62 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a62  <|@  <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
at scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
at scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
referencedType: [null]
returnStamp: a - (unchecked=a Lscala/collection/Iterator;)
signature: [Ljdk.vm.ci.meta.JavaType;@24e056af
stamp: void
targetMethod: HotSpotMethod<IterableLike.iterator()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
a62 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?68 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<Growable.$plus$plus$eq(TraversableOnce)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Growable.scala
sourceLine: 59
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
?59 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
tid a174 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@6c446bc5
hasIdentity: true
objectId: 0
stamp: a!# Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;
type: HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?63 ?59 ?175 ?178 ?507 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractIterable.foreach(Function1)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
at scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
rethrowException: false
sourceFile: Iterable.scala
sourceLine: 54
stackSize: 0
=== Inputs ===
outerFrameState: ?68 
values: a2 a174 
=== Succesors ===
=== Usages ===
?67 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?68 values: a2 a174  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<IterableLike.foreach$(IterableLike, Function1)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: IterableLike.scala
sourceLine: 70
stackSize: 0
=== Inputs ===
outerFrameState: ?59 
values: - - 
=== Succesors ===
=== Usages ===
?63 ?509 ?507 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?59 values: - -  <|@  <|@
tid ?175 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a174 
values: a1 
=== Succesors ===
=== Usages ===
?63 ?507 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a174 values: a1  <|@  <|@
tid ?507 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<IterableLike.foreach(Function1)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: IterableLike.scala
sourceLine: 71
stackSize: 0
=== Inputs ===
outerFrameState: ?67 
values: - a174 
virtualObjectMappings: ?175 
=== Succesors ===
=== Usages ===
a62 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?67 values: - a174 virtualObjectMappings: ?175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a62 <|@
result v108|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
at scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
at scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
polymorphic: true
stamp: a -
targetMethod: Direct#IterableLike.iterator
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v236 
stateDuring: ?507 
=== Succesors ===
next: v970 
=== Usages ===
?63 v240 v970 
=== Predecessor ===
v48 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v236 stateDuring: ?507 #next: v970  <|@  <|@
tid ?63 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<IterableLike.foreach(Function1)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
at scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
at scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
rethrowException: false
sourceFile: IterableLike.scala
sourceLine: 71
stackSize: 1
=== Inputs ===
outerFrameState: ?67 
values: - a174 a62 
virtualObjectMappings: ?175 
=== Succesors ===
=== Usages ===
v970 a585 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?67 values: - a174 a62 virtualObjectMappings: ?175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?63 
object: a62 
=== Succesors ===
next: j572 
=== Usages ===
=== Predecessor ===
a62 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?63 object: a62 #next: j572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j572 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:773) [bci: 3]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:211) [bci: 2]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j598 
=== Usages ===
v932 v933 
=== Predecessor ===
v970 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j598  <|@  <|@
f <@~|@floating>@ <|@
tid v932 <|@
result [r15|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j572 
index: - 
=== Succesors ===
=== Usages ===
j598 v600 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j572 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j598 <|@
result v109|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:246) [bci: 10]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:212) [bci: 9]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v932 
=== Succesors ===
next: j599 
=== Usages ===
j575 v934 v935 a584 v936 v937 
=== Predecessor ===
j572 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v932 #next: j599  <|@  <|@
f <@~|@floating>@ <|@
tid v933 <|@
result [r15|QWORD + 296] <|@
d <@d|@=== Debug Properties ===
displacement: 296
scale: Times1
stamp: void*
=== Inputs ===
base: j572 
index: - 
=== Succesors ===
=== Usages ===
j599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j572 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j599 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:250) [bci: 10]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:213) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v933 
=== Succesors ===
next: v579 
=== Usages ===
v576 
=== Predecessor ===
j598 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v933 #next: v579  <|@  <|@
f <@~|@floating>@ <|@
tid j575 <|@
result v110|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:214) [bci: 24]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: i64
=== Inputs ===
x: j598 
y: j188 
=== Succesors ===
=== Usages ===
v576 v600 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j598 y: j188  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:215) [bci: 45]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@15088f07
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j599 
y: j575 
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j599 y: j575  <|@  <|@
f <@*|@fixed>@ <|@
tid v579 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@fb83e9ab <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:215) [bci: 51]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v576 
=== Succesors ===
trueSuccessor: v577 
falseSuccessor: v578 
=== Usages ===
=== Predecessor ===
j599 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v576 #trueSuccessor: v577 #falseSuccessor: v578  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [v108|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = LEA [v109|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v110|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:220) [bci: 85]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a585 
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a585 <|@
result v111|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_instance(KlassPointer)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e095940
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newInstance(ForeignCallDescriptor, KlassPointer) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:223) [bci: 110]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?63 
arguments: v571 
=== Succesors ===
next: v588 
=== Usages ===
a589 
=== Predecessor ===
v577 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?63 arguments: v571 #next: v588  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
a585 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|QWORD[.]] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:216) [bci: 54]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:258) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:216) [bci: 58]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v932 
value: j575 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v932 value: j575 stateAfter: - lastLocationAccess: - #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid v936 <|@
result [v109|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
scale: Times1
stamp: void*
=== Inputs ===
base: j598 
index: - 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j598 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:217) [bci: 64]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
address: v936 
=== Succesors ===
next: j601 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v936 #next: j601  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j601 <|@
result v112|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:521) [bci: 19]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v940 
=== Succesors ===
next: v602 
=== Usages ===
v602 
=== Predecessor ===
v595 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v940 #next: v602  <|@  <|@
f <@~|@floating>@ <|@
tid v934 <|@
result [v109|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j598 
index: - 
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j598 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:522) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v934 
value: j601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
j601 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v934 value: j601 stateAfter: - lastLocationAccess: - #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
result [v109|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j598 
index: - 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j598 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:471) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:522) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v937 
value: v881 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v606 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v937 value: v881 stateAfter: - lastLocationAccess: - #next: v606  <|@  <|@
f <@~|@floating>@ <|@
tid v935 <|@
result [v109|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j598 
index: - 
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j598 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:456) [bci: 37]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:524) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v935 
value: i73 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v583 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v935 value: i73 stateAfter: - lastLocationAccess: - #next: v583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:528) [bci: 86]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a584 
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a584 <|@
result v113|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:529) [bci: 90]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j598 
=== Succesors ===
next: v586 
=== Usages ===
a589 
=== Predecessor ===
v583 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j598 #next: v586  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
a584 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 280], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v109|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD], y: v112|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v109|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v109|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE v109|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|QWORD[.]] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a589 <|@
result v114|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v587 
values: a584 a585 
=== Succesors ===
=== Usages ===
v929 a488 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v587 values: a584 a585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v586 v588 
=== Succesors ===
next: v487 
=== Usages ===
a589 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v586 v588 #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid v929 <|@
result [v114|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a589 
index: - 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a589 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v929 
value: a486 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a488 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v929 value: a486 stateAfter: - lastLocationAccess: - #next: a488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a488 <|@
result v114|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a589 
=== Succesors ===
next: v489 
=== Usages ===
v240 ?178 
=== Predecessor ===
v487 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a589 #next: v489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
a488 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v65  <|@  <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
at scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
at scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
referencedType: [null]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@194a5c04
stamp: void
targetMethod: HotSpotMethod<Iterator.foreach(Function1)>
=== Inputs ===
arguments: a62 a488 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a62 a488  <|@  <|@
tid ?178 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a174 
materializedValue: a488 
=== Succesors ===
=== Usages ===
?509 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a174 materializedValue: a488  <|@  <|@
tid ?509 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<IterableLike.foreach(Function1)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: IterableLike.scala
sourceLine: 71
stackSize: 0
=== Inputs ===
outerFrameState: ?67 
values: - - 
virtualObjectMappings: ?178 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?67 values: - - virtualObjectMappings: ?178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
bci: 7
nodeSourcePosition: at scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
at scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
at scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
polymorphic: true
stamp: void
targetMethod: Direct#Iterator.foreach
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v240 
stateDuring: ?509 
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v240 stateDuring: ?509 #next: v171  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:61) [bci: 33]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] v114|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j614 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j614 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:773) [bci: 3]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:211) [bci: 2]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j636 
=== Usages ===
v938 v939 
=== Predecessor ===
v52 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j636  <|@  <|@
f <@~|@floating>@ <|@
tid v938 <|@
result [r15|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j614 
index: - 
=== Succesors ===
=== Usages ===
j636 v638 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j614 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j636 <|@
result v115|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:246) [bci: 10]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:212) [bci: 9]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v938 
=== Succesors ===
next: j637 
=== Usages ===
j617 v941 v942 a626 v943 v944 
=== Predecessor ===
j614 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v938 #next: j637  <|@  <|@
f <@~|@floating>@ <|@
tid v939 <|@
result [r15|QWORD + 296] <|@
d <@d|@=== Debug Properties ===
displacement: 296
scale: Times1
stamp: void*
=== Inputs ===
base: j614 
index: - 
=== Succesors ===
=== Usages ===
j637 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j614 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j637 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:250) [bci: 10]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:213) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v939 
=== Succesors ===
next: v621 
=== Usages ===
v618 
=== Predecessor ===
j636 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v939 #next: v621  <|@  <|@
f <@~|@floating>@ <|@
tid j617 <|@
result v116|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:214) [bci: 24]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: i64
=== Inputs ===
x: j636 
y: j188 
=== Succesors ===
=== Usages ===
v618 v638 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j636 y: j188  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:215) [bci: 45]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@15088f07
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j637 
y: j617 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j637 y: j617  <|@  <|@
f <@*|@fixed>@ <|@
tid v621 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@fb83e9ab <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:215) [bci: 51]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v618 
=== Succesors ===
trueSuccessor: v619 
falseSuccessor: v620 
=== Usages ===
=== Predecessor ===
j637 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v618 #trueSuccessor: v619 #falseSuccessor: v620  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = LEA [v115|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v116|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:220) [bci: 85]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a627 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a627 <|@
result v117|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_instance(KlassPointer)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e095940
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newInstance(ForeignCallDescriptor, KlassPointer) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:223) [bci: 110]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v571 
=== Succesors ===
next: v630 
=== Usages ===
a631 
=== Predecessor ===
v619 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v571 #next: v630  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
a627 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v117|QWORD[.]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:216) [bci: 54]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:258) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:216) [bci: 58]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v938 
value: j617 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v938 value: j617 stateAfter: - lastLocationAccess: - #next: v634  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
result [v115|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
scale: Times1
stamp: void*
=== Inputs ===
base: j636 
index: - 
=== Succesors ===
=== Usages ===
v634 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j636 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:217) [bci: 64]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
address: v943 
=== Succesors ===
next: j639 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v943 #next: j639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j639 <|@
result v118|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:521) [bci: 19]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v940 
=== Succesors ===
next: v640 
=== Usages ===
v640 
=== Predecessor ===
v634 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v940 #next: v640  <|@  <|@
f <@~|@floating>@ <|@
tid v941 <|@
result [v115|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j636 
index: - 
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j636 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:522) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v941 
value: j639 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
j639 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v941 value: j639 stateAfter: - lastLocationAccess: - #next: v643  <|@  <|@
f <@~|@floating>@ <|@
tid v944 <|@
result [v115|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j636 
index: - 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j636 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:471) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:522) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v944 
value: v881 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v944 value: v881 stateAfter: - lastLocationAccess: - #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid v942 <|@
result [v115|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j636 
index: - 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j636 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:456) [bci: 37]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:524) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v942 
value: i73 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v625 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v942 value: i73 stateAfter: - lastLocationAccess: - #next: v625  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:528) [bci: 86]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a626 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a626 <|@
result v119|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:529) [bci: 90]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j636 
=== Succesors ===
next: v628 
=== Usages ===
a631 
=== Predecessor ===
v625 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j636 #next: v628  <|@  <|@
f <@*|@fixed>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
a626 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 280], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v115|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE v115|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v119|QWORD[.]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a631 <|@
result v120|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v629 
values: a626 a627 
=== Succesors ===
=== Usages ===
v930 a493 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v629 values: a626 a627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v628 v630 
=== Succesors ===
next: v492 
=== Usages ===
a631 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v628 v630 #next: v492  <|@  <|@
f <@~|@floating>@ <|@
tid v930 <|@
result [v120|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a631 
index: - 
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a631 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v930 
value: a486 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a493 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v930 value: a486 stateAfter: - lastLocationAccess: - #next: a493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a493 <|@
result v120|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a631 
=== Succesors ===
next: v494 
=== Usages ===
v241 
=== Predecessor ===
v492 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a631 #next: v494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce) [bci: -6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
a493 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v50  <|@  <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
referencedType: [null]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@10654ace
stamp: void
targetMethod: HotSpotMethod<TraversableOnce.foreach(Function1)>
=== Inputs ===
arguments: a2 a493 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a493  <|@  <|@
tid ?508 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<Growable.$plus$plus$eq(TraversableOnce)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Growable.scala
sourceLine: 59
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
bci: 27
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
polymorphic: true
stamp: void
targetMethod: Direct#TraversableOnce.foreach
useForInlining: false
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v241 
stateDuring: ?508 
=== Succesors ===
next: v172 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v241 stateDuring: ?508 #next: v172  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:61) [bci: 33]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v120|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v120|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: [v3|QWORD + 32]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [v3|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v6|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHL v8|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v6|QWORD + v11|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = UNCOMPRESSPOINTER (input: v13|DWORD, ~baseRegister: v15|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: [v14|QWORD + 32]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v14|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v17|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL v19|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA [v20|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [v17|QWORD + v22|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|DWORD] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v18|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607018771416986051
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v29|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v28|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v25|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[.] = MOV [v28|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v100|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT v101|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v102|QWORD[.]] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV [v28|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v30|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = ADD (x: v37|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v40|DWORD = MOV [v39|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV [v39|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|DWORD[.], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v34|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v41|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [v44|QWORD + 232] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV [v46|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v49|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v47|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: [v48|QWORD + v50|QWORD * 1]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [v48|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV [v51|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SHL v53|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = LEA [v54|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVSXD v55|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [v51|QWORD + v56|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|DWORD] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B57" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v79|DWORD[.], y: v79|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426301
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[.] = COMPRESSPOINTER (input: v81|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[*] = XOR (x: v0|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v90|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVSXB [v91|QWORD[*] + v121|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v92|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B32" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD[.] + v42|DWORD * 4 + 16], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = XOR (x: v66|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v67|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = SHR v69|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVSXB [v68|QWORD[*] + v122|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581910371599640205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[.] = MOV [v60|QWORD[.]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|QWORD[.], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD + v64|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 56], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LEA [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = MOV [v83|QWORD[.]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v85|QWORD[.], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v86|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD + v87|QWORD * 1 - 8], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = LEA [v86|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 56], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVSXB [v68|QWORD[*] + v122|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577486745296679515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVSXB [v91|QWORD[*] + v121|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 32], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564592752682893746
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564271162101631196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v68|QWORD[*] + v122|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[*] = ADD (x: v68|QWORD[*], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v72|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD + v74|QWORD * 1 - 8], y: v73|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 112], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v91|QWORD[*] + v121|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[*] = ADD (x: v91|QWORD[*], y: v121|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v94|QWORD, y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v94|QWORD + v96|QWORD * 1 - 8], y: v95|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = LEA [v94|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 112], y: v97|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v73|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v95|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [v108|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = LEA [v109|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v110|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 280], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v109|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD], y: v112|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v109|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v109|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE v109|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|QWORD[.]] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] v114|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD + 32], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD + 32], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = LEA [v115|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v116|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 280], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v115|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE v115|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v119|QWORD[.]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr   -1  <|@ instruction [v120|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v120|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 4587195615000912736
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-56107|0xffffffffffff24d5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580682074240651296
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|QWORD[.]] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v117|QWORD[.]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51995|0xffffffffffff34e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30771|0xffffffffffff87cd]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46643|0xffffffffffff49cd]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-57611|0xffffffffffff1ef5]] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: [v3|QWORD + 32]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [v3|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v6|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHL v8|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v6|QWORD + v11|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = UNCOMPRESSPOINTER (input: v13|DWORD, ~baseRegister: v15|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: [v14|QWORD + 32]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v14|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v17|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL v19|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA [v20|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [v17|QWORD + v22|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|DWORD] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v18|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607018771416986051
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v29|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v28|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v25|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[.] = MOV [v28|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v100|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT v101|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v102|QWORD[.]] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV [v28|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v30|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = ADD (x: v37|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v40|DWORD = MOV [v39|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV [v39|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|DWORD[.], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v34|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v41|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [v44|QWORD + 232] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV [v46|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v49|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v47|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: [v48|QWORD + v50|QWORD * 1]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [v48|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV [v51|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SHL v53|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = LEA [v54|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVSXD v55|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [v51|QWORD + v56|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|DWORD] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B57" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v79|DWORD[.], y: v79|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426301
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[.] = COMPRESSPOINTER (input: v81|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[*] = XOR (x: v0|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v90|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVSXB [v91|QWORD[*] + v121|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v92|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B32" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD[.] + v42|DWORD * 4 + 16], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = XOR (x: v66|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v67|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = SHR v69|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVSXB [v68|QWORD[*] + v122|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581910371599640205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[.] = MOV [v60|QWORD[.]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|QWORD[.], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD + v64|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 56], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LEA [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = MOV [v83|QWORD[.]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v85|QWORD[.], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v86|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD + v87|QWORD * 1 - 8], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = LEA [v86|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 56], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVSXB [v68|QWORD[*] + v122|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577486745296679515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVSXB [v91|QWORD[*] + v121|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 32], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564592752682893746
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564271162101631196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v68|QWORD[*] + v122|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[*] = ADD (x: v68|QWORD[*], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v72|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD + v74|QWORD * 1 - 8], y: v73|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 112], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v91|QWORD[*] + v121|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[*] = ADD (x: v91|QWORD[*], y: v121|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v94|QWORD, y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v94|QWORD + v96|QWORD * 1 - 8], y: v95|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = LEA [v94|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 112], y: v97|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v73|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v95|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [v108|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = LEA [v109|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v110|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 280], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v109|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD], y: v112|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v109|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v109|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE v109|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|QWORD[.]] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] v114|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD + 32], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD + 32], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = LEA [v115|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v116|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 280], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v115|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE v115|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v119|QWORD[.]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr   -1  <|@ instruction [v120|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v120|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 4587195615000912736
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-56107|0xffffffffffff24d5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580682074240651296
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|QWORD[.]] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v117|QWORD[.]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51995|0xffffffffffff34e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30771|0xffffffffffff87cd]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46643|0xffffffffffff49cd]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-57611|0xffffffffffff1ef5]] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: [v3|QWORD + 32]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [v3|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v6|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHL v8|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v6|QWORD + v11|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = UNCOMPRESSPOINTER (input: v13|DWORD, ~baseRegister: v15|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: [v14|QWORD + 32]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v14|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v17|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL v19|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA [v20|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [v17|QWORD + v22|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|DWORD] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v18|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607018771416986051
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v29|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v28|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v25|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[.] = MOV [v28|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v100|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT v101|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v102|QWORD[.]] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV [v28|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v30|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = ADD (x: v37|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v40|DWORD = MOV [v39|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV [v39|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|DWORD[.], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v34|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v41|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [v44|QWORD + 232] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV [v46|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v49|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v47|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: [v48|QWORD + v50|QWORD * 1]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [v48|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV [v51|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SHL v53|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = LEA [v54|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVSXD v55|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [v51|QWORD + v56|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|DWORD] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B57" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v79|DWORD[.], y: v79|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426301
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[.] = COMPRESSPOINTER (input: v81|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[*] = XOR (x: v0|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v90|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVSXB [v91|QWORD[*] + v121|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v92|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B32" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD[.] + v42|DWORD * 4 + 16], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = XOR (x: v66|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v67|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = SHR v69|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVSXB [v68|QWORD[*] + v122|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581910371599640205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[.] = MOV [v60|QWORD[.]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|QWORD[.], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD + v64|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 56], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LEA [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = MOV [v83|QWORD[.]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v85|QWORD[.], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v86|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD + v87|QWORD * 1 - 8], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = LEA [v86|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 56], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVSXB [v68|QWORD[*] + v122|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577486745296679515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVSXB [v91|QWORD[*] + v121|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 32], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564592752682893746
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564271162101631196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v68|QWORD[*] + v122|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[*] = ADD (x: v68|QWORD[*], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v72|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD + v74|QWORD * 1 - 8], y: v73|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 112], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v91|QWORD[*] + v121|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[*] = ADD (x: v91|QWORD[*], y: v121|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v94|QWORD, y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v94|QWORD + v96|QWORD * 1 - 8], y: v95|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = LEA [v94|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 112], y: v97|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v73|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v95|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [v108|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = LEA [v109|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v110|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 280], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v109|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD], y: v112|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v109|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v109|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE v109|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|QWORD[.]] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] v114|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD + 32], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD + 32], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = LEA [v115|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v116|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 280], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v115|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE v115|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v119|QWORD[.]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr   -1  <|@ instruction [v120|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v120|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 4587195615000912736
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-56107|0xffffffffffff24d5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580682074240651296
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|QWORD[.]] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v117|QWORD[.]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51995|0xffffffffffff34e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30771|0xffffffffffff87cd]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46643|0xffffffffffff49cd]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-57611|0xffffffffffff1ef5]] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: [v3|QWORD + 32]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [v3|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v6|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHL v8|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v6|QWORD + v11|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = UNCOMPRESSPOINTER (input: v13|DWORD, ~baseRegister: v15|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: [v14|QWORD + 32]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v14|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v17|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL v19|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA [v20|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [v17|QWORD + v22|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|DWORD] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v18|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607018771416986051
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v29|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v28|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v25|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[.] = MOV [v28|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v100|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT v101|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v102|QWORD[.]] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV [v28|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v30|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = ADD (x: v37|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v40|DWORD = MOV [v39|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV [v39|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|DWORD[.], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v34|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v41|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [v44|QWORD + 232] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV [v46|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v49|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v47|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: [v48|QWORD + v50|QWORD * 1]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [v48|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV [v51|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SHL v53|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = LEA [v54|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVSXD v55|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [v51|QWORD + v56|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|DWORD] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B57" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v79|DWORD[.], y: v79|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426301
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[.] = COMPRESSPOINTER (input: v81|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[*] = XOR (x: v0|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v90|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVSXB [v91|QWORD[*] + v121|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v92|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B32" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD[.] + v42|DWORD * 4 + 16], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = XOR (x: v66|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v67|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = SHR v69|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVSXB [v68|QWORD[*] + v122|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581910371599640205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[.] = MOV [v60|QWORD[.]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|QWORD[.], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD + v64|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 56], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LEA [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = MOV [v83|QWORD[.]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v85|QWORD[.], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v86|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v86|QWORD + v87|QWORD * 1 - 8], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = LEA [v86|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 56], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVSXB [v68|QWORD[*] + v122|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577486745296679515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = MOVSXB [v91|QWORD[*] + v121|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 32], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564592752682893746
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564271162101631196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v68|QWORD[*] + v122|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[*] = ADD (x: v68|QWORD[*], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v72|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD + v74|QWORD * 1 - 8], y: v73|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 112], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v91|QWORD[*] + v121|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[*] = ADD (x: v91|QWORD[*], y: v121|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v94|QWORD, y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v94|QWORD + v96|QWORD * 1 - 8], y: v95|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = LEA [v94|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 112], y: v97|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v73|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v95|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [v108|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = LEA [v109|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v110|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 280], y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v109|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD], y: v112|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v109|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v109|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE v109|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|QWORD[.]] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] v114|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD + 32], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD + 32], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = LEA [v115|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v116|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 280], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v115|QWORD + 208] instr: 3 <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE v115|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v119|QWORD[.]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr   -1  <|@ instruction [v120|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v120|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 4587195615000912736
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-56107|0xffffffffffff24d5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580682074240651296
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|QWORD[.]] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v117|QWORD[.]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51995|0xffffffffffff34e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30771|0xffffffffffff87cd]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46643|0xffffffffffff49cd]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-57611|0xffffffffffff1ef5]] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   14  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   16  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   18  <|@ instruction CMP (x: v5|QWORD, y: [v3|QWORD + 32]) size: QWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction v6|QWORD = MOV [v3|QWORD + 40] size: QWORD <|@ <|@
      nr   32  <|@ instruction v7|DWORD = MOV [v6|QWORD] size: DWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~[int[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   44  <|@ instruction v9|DWORD = SHL v8|DWORD y: 3 size: DWORD <|@ <|@
      nr   46  <|@ instruction v10|DWORD = LEA [v9|DWORD + 8] size: DWORD <|@ <|@
      nr   48  <|@ instruction v11|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction v12|QWORD = MOV [v6|QWORD + v11|QWORD * 1] size: QWORD <|@ <|@
      nr   52  <|@ instruction CMP (x: v5|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction v105|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[v105|DWORD] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   36  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   38  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  138  <|@ instruction v15|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  140  <|@ instruction v14|QWORD = UNCOMPRESSPOINTER (input: v13|DWORD, ~baseRegister: v15|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  142  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr  144  <|@ instruction CMP (x: v16|QWORD, y: [v14|QWORD + 32]) size: QWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction v17|QWORD = MOV [v14|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction v18|DWORD = MOV [v17|QWORD] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~[int[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  170  <|@ instruction v20|DWORD = SHL v19|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction v21|DWORD = LEA [v20|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction v22|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr  176  <|@ instruction v23|QWORD = MOV [v17|QWORD + v22|QWORD * 1] size: QWORD <|@ <|@
      nr  178  <|@ instruction CMP (x: v16|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction v104|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[v104|DWORD] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  162  <|@ instruction [v19|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  164  <|@ instruction CMP (x: v18|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction v24|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  206  <|@ instruction v26|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  208  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  210  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  224  <|@ instruction v32|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr  226  <|@ instruction CMP (x: v32|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607018771416986051
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction CMP v29|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction v34|DWORD[.] = MOV [v28|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  260  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v25|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr  272  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr  714  <|@ instruction [v99|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  716  <|@ instruction v100|DWORD[.] = MOV [v28|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v100|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT v101|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr  722  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  724  <|@ instruction JUMP ~[v102|QWORD[.]] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  212  <|@ instruction [v28|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  214  <|@ instruction v29|DWORD = MOV [v28|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  216  <|@ instruction v31|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  218  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  220  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v30|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr  240  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction v37|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  280  <|@ instruction v38|DWORD = ADD (x: v37|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|DWORD = MOVE v38|DWORD moveKind: DWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr  288  <|@ instruction v39|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v40|DWORD = MOV [v39|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr  292  <|@ instruction v41|DWORD = MOV [v39|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  294  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction CMP (x: v40|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction TEST (x: v34|DWORD[.], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction v43|DWORD = MOV [v34|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  310  <|@ instruction v45|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  312  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v41|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  314  <|@ instruction v46|QWORD = MOV [v44|QWORD + 232] size: QWORD <|@ <|@
      nr  316  <|@ instruction v47|DWORD = MOV [v46|QWORD + 16] size: DWORD <|@ <|@
      nr  318  <|@ instruction v49|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  320  <|@ instruction v48|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v49|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  322  <|@ instruction v50|QWORD = MOVSXD v47|DWORD size: QWORD <|@ <|@
      nr  324  <|@ instruction CMP (x: v46|QWORD, y: [v48|QWORD + v50|QWORD * 1]) size: QWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction CMP v47|DWORD y: 32 size: DWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: v46|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction v51|QWORD = MOV [v48|QWORD + 40] size: QWORD <|@ <|@
      nr  344  <|@ instruction v52|DWORD = MOV [v51|QWORD] size: DWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[int[0|0x0]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  356  <|@ instruction v54|DWORD = SHL v53|DWORD y: 3 size: DWORD <|@ <|@
      nr  358  <|@ instruction v55|DWORD = LEA [v54|DWORD + 8] size: DWORD <|@ <|@
      nr  360  <|@ instruction v56|QWORD = MOVSXD v55|DWORD size: QWORD <|@ <|@
      nr  362  <|@ instruction v57|QWORD = MOV [v51|QWORD + v56|QWORD * 1] size: QWORD <|@ <|@
      nr  364  <|@ instruction CMP (x: v46|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction v77|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[v77|DWORD] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B57" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr  348  <|@ instruction [v53|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  350  <|@ instruction CMP (x: v52|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction v79|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  378  <|@ instruction TEST (x: v79|DWORD[.], y: v79|DWORD[.]) size: DWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr  392  <|@ instruction v81|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction v82|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  396  <|@ instruction TEST (x: v82|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426301
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction v89|DWORD[.] = COMPRESSPOINTER (input: v81|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  598  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr  600  <|@ instruction v90|QWORD[*] = XOR (x: v0|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  602  <|@ instruction TEST v90|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  604  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction v121|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  616  <|@ instruction v91|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  618  <|@ instruction v92|DWORD = MOVSXB [v91|QWORD[*] + v121|QWORD * 1] size: DWORD <|@ <|@
      nr  620  <|@ instruction CMP v92|DWORD y: 32 size: DWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B32" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  458  <|@ instruction v59|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  460  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction MOV (x: [v58|QWORD[.] + v42|DWORD * 4 + 16], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr  532  <|@ instruction v66|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  534  <|@ instruction v67|QWORD[*] = XOR (x: v66|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction TEST v67|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  538  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction TEST (x: v35|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr  544  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction v122|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  550  <|@ instruction v69|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  552  <|@ instruction v68|QWORD[*] = SHR v69|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  554  <|@ instruction v70|DWORD = MOVSXB [v68|QWORD[*] + v122|QWORD * 1] size: DWORD <|@ <|@
      nr  556  <|@ instruction CMP v70|DWORD y: 32 size: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction v76|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr  710  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v76|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581910371599640205
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction v60|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction v61|DWORD[.] = MOV [v60|QWORD[.]] size: DWORD <|@ <|@
      nr  474  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction TEST (x: v62|QWORD[.], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction TEST (x: v63|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction v64|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  492  <|@ instruction MOV (x: [v63|QWORD + v64|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr  494  <|@ instruction v65|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr  496  <|@ instruction MOV (x: [r15|QWORD + 56], y: v65|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction v83|QWORD[.] = LEA [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction v84|DWORD[.] = MOV [v83|QWORD[.]] size: DWORD <|@ <|@
      nr  422  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction TEST (x: v85|QWORD[.], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction v86|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  432  <|@ instruction TEST (x: v86|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  440  <|@ instruction MOV (x: [v86|QWORD + v87|QWORD * 1 - 8], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr  442  <|@ instruction v88|QWORD = LEA [v86|QWORD - 8] size: QWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 56], y: v88|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  576  <|@ instruction v71|DWORD = MOVSXB [v68|QWORD[*] + v122|QWORD * 1] size: DWORD <|@ <|@
      nr  578  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577486745296679515
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  640  <|@ instruction v93|DWORD = MOVSXB [v91|QWORD[*] + v121|QWORD * 1] size: DWORD <|@ <|@
      nr  642  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction MOV (x: [v48|QWORD + 32], y: v46|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr  508  <|@ instruction v98|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564592752682893746
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564271162101631196
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction MOVB [v68|QWORD[*] + v122|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  654  <|@ instruction v72|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  656  <|@ instruction v73|QWORD[*] = ADD (x: v68|QWORD[*], y: v122|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ instruction TEST (x: v72|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction v74|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [v72|QWORD + v74|QWORD * 1 - 8], y: v73|QWORD[*]) size: QWORD <|@ <|@
      nr  668  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 112], y: v75|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction MOVB [v91|QWORD[*] + v121|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  678  <|@ instruction v94|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  680  <|@ instruction v95|QWORD[*] = ADD (x: v91|QWORD[*], y: v121|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction TEST (x: v94|QWORD, y: v94|QWORD) size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction v96|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  690  <|@ instruction MOV (x: [v94|QWORD + v96|QWORD * 1 - 8], y: v95|QWORD[*]) size: QWORD <|@ <|@
      nr  692  <|@ instruction v97|QWORD = LEA [v94|QWORD - 8] size: QWORD <|@ <|@
      nr  694  <|@ instruction MOV (x: [r15|QWORD + 112], y: v97|QWORD) size: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction rsi|QWORD = MOVE v73|QWORD[*] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction rsi|QWORD = MOVE v95|QWORD[*] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  732  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction v106|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr   76  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr   84  <|@ instruction v108|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [v108|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr   88  <|@ instruction v109|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr   90  <|@ instruction v110|QWORD = LEA [v109|QWORD + 16] size: QWORD <|@ <|@
      nr   92  <|@ instruction CMP (x: v110|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 280], y: v110|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~[v109|QWORD + 208] instr: 3 <|@ <|@
      nr  102  <|@ instruction v112|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [v109|QWORD], y: v112|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction MOV [v109|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  108  <|@ instruction MOV [v109|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  110  <|@ instruction v113|QWORD[.] = MOVE v109|QWORD moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~[v113|QWORD[.]] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  114  <|@ instruction [v114|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [v114|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction rdx|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] v114|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr  124  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction MOV (x: [v14|QWORD + 32], y: v16|QWORD) size: QWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction MOV (x: [v3|QWORD + 32], y: v5|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction v115|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  744  <|@ instruction v116|QWORD = LEA [v115|QWORD + 16] size: QWORD <|@ <|@
      nr  746  <|@ instruction CMP (x: v116|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 280], y: v116|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~[v115|QWORD + 208] instr: 3 <|@ <|@
      nr  756  <|@ instruction v118|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [v115|QWORD], y: v118|QWORD) size: QWORD <|@ <|@
      nr  760  <|@ instruction MOV [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  762  <|@ instruction MOV [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  764  <|@ instruction v119|QWORD[.] = MOVE v115|QWORD moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction JUMP ~[v119|QWORD[.]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  768  <|@ instruction [v120|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  770  <|@ instruction MOV (x: [v120|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr  772  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 4587195615000912736
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction JUMP ~[int[-56107|0xffffffffffff24d5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  798  <|@ instruction [v78|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v78|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580682074240651296
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  808  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr  812  <|@ instruction v111|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[v111|QWORD[.]] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  822  <|@ instruction v117|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction JUMP ~[v117|QWORD[.]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction JUMP ~[int[-51995|0xffffffffffff34e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  836  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr  862  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  844  <|@ instruction JUMP ~[int[-30771|0xffffffffffff87cd]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  850  <|@ instruction [v103|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  852  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v103|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  856  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction JUMP ~[int[-46643|0xffffffffffff49cd]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction JUMP ~[int[-57611|0xffffffffffff1ef5]] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   14  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   16  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   18  <|@ instruction CMP (x: v5|QWORD, y: [v3|QWORD + 32]) size: QWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction v6|QWORD = MOV [v3|QWORD + 40] size: QWORD <|@ <|@
      nr   32  <|@ instruction v7|DWORD = MOV [v6|QWORD] size: DWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~[int[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   44  <|@ instruction v9|DWORD = SHL v8|DWORD y: 3 size: DWORD <|@ <|@
      nr   46  <|@ instruction v10|DWORD = LEA [v9|DWORD + 8] size: DWORD <|@ <|@
      nr   48  <|@ instruction v11|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction v12|QWORD = MOV [v6|QWORD + v11|QWORD * 1] size: QWORD <|@ <|@
      nr   52  <|@ instruction CMP (x: v5|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction v105|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[v105|DWORD] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   36  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   38  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  138  <|@ instruction v15|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  140  <|@ instruction v14|QWORD = UNCOMPRESSPOINTER (input: v13|DWORD, ~baseRegister: v15|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  142  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr  144  <|@ instruction CMP (x: v16|QWORD, y: [v14|QWORD + 32]) size: QWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction v17|QWORD = MOV [v14|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction v18|DWORD = MOV [v17|QWORD] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~[int[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  170  <|@ instruction v20|DWORD = SHL v19|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction v21|DWORD = LEA [v20|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction v22|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr  176  <|@ instruction v23|QWORD = MOV [v17|QWORD + v22|QWORD * 1] size: QWORD <|@ <|@
      nr  178  <|@ instruction CMP (x: v16|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction v104|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[v104|DWORD] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  162  <|@ instruction [v19|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  164  <|@ instruction CMP (x: v18|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction v24|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  206  <|@ instruction v26|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  208  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  210  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  224  <|@ instruction v32|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr  226  <|@ instruction CMP (x: v32|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607018771416986051
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction CMP v29|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction v34|DWORD[.] = MOV [v28|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  260  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v25|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr  272  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr  714  <|@ instruction [v99|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  716  <|@ instruction v100|DWORD[.] = MOV [v28|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v100|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT v101|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr  722  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  724  <|@ instruction JUMP ~[v102|QWORD[.]] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  212  <|@ instruction [v28|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  214  <|@ instruction v29|DWORD = MOV [v28|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  216  <|@ instruction v31|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  218  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  220  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v30|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr  240  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction v37|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  280  <|@ instruction v38|DWORD = ADD (x: v37|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|DWORD = MOVE v38|DWORD moveKind: DWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr  288  <|@ instruction v39|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v40|DWORD = MOV [v39|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr  292  <|@ instruction v41|DWORD = MOV [v39|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  294  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction CMP (x: v40|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction TEST (x: v34|DWORD[.], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction v43|DWORD = MOV [v34|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  310  <|@ instruction v45|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  312  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v41|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  314  <|@ instruction v46|QWORD = MOV [v44|QWORD + 232] size: QWORD <|@ <|@
      nr  316  <|@ instruction v47|DWORD = MOV [v46|QWORD + 16] size: DWORD <|@ <|@
      nr  318  <|@ instruction v49|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  320  <|@ instruction v48|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v49|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  322  <|@ instruction v50|QWORD = MOVSXD v47|DWORD size: QWORD <|@ <|@
      nr  324  <|@ instruction CMP (x: v46|QWORD, y: [v48|QWORD + v50|QWORD * 1]) size: QWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction CMP v47|DWORD y: 32 size: DWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: v46|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction v51|QWORD = MOV [v48|QWORD + 40] size: QWORD <|@ <|@
      nr  344  <|@ instruction v52|DWORD = MOV [v51|QWORD] size: DWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[int[0|0x0]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  356  <|@ instruction v54|DWORD = SHL v53|DWORD y: 3 size: DWORD <|@ <|@
      nr  358  <|@ instruction v55|DWORD = LEA [v54|DWORD + 8] size: DWORD <|@ <|@
      nr  360  <|@ instruction v56|QWORD = MOVSXD v55|DWORD size: QWORD <|@ <|@
      nr  362  <|@ instruction v57|QWORD = MOV [v51|QWORD + v56|QWORD * 1] size: QWORD <|@ <|@
      nr  364  <|@ instruction CMP (x: v46|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction v77|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[v77|DWORD] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B57" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr  348  <|@ instruction [v53|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  350  <|@ instruction CMP (x: v52|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction v79|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  378  <|@ instruction TEST (x: v79|DWORD[.], y: v79|DWORD[.]) size: DWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr  392  <|@ instruction v81|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction v82|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  396  <|@ instruction TEST (x: v82|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426301
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction v89|DWORD[.] = COMPRESSPOINTER (input: v81|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  598  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr  600  <|@ instruction v90|QWORD[*] = XOR (x: v0|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  602  <|@ instruction TEST v90|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  604  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction v121|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  616  <|@ instruction v91|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  618  <|@ instruction v92|DWORD = MOVSXB [v91|QWORD[*] + v121|QWORD * 1] size: DWORD <|@ <|@
      nr  620  <|@ instruction CMP v92|DWORD y: 32 size: DWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B32" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  458  <|@ instruction v59|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  460  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction MOV (x: [v58|QWORD[.] + v42|DWORD * 4 + 16], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr  532  <|@ instruction v66|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  534  <|@ instruction v67|QWORD[*] = XOR (x: v66|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction TEST v67|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  538  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction TEST (x: v35|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr  544  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction v122|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  550  <|@ instruction v69|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  552  <|@ instruction v68|QWORD[*] = SHR v69|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  554  <|@ instruction v70|DWORD = MOVSXB [v68|QWORD[*] + v122|QWORD * 1] size: DWORD <|@ <|@
      nr  556  <|@ instruction CMP v70|DWORD y: 32 size: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction v76|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr  710  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v76|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581910371599640205
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction v60|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction v61|DWORD[.] = MOV [v60|QWORD[.]] size: DWORD <|@ <|@
      nr  474  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction TEST (x: v62|QWORD[.], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction TEST (x: v63|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction v64|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  492  <|@ instruction MOV (x: [v63|QWORD + v64|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr  494  <|@ instruction v65|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr  496  <|@ instruction MOV (x: [r15|QWORD + 56], y: v65|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction v83|QWORD[.] = LEA [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction v84|DWORD[.] = MOV [v83|QWORD[.]] size: DWORD <|@ <|@
      nr  422  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction TEST (x: v85|QWORD[.], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction v86|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  432  <|@ instruction TEST (x: v86|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  440  <|@ instruction MOV (x: [v86|QWORD + v87|QWORD * 1 - 8], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr  442  <|@ instruction v88|QWORD = LEA [v86|QWORD - 8] size: QWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 56], y: v88|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  576  <|@ instruction v71|DWORD = MOVSXB [v68|QWORD[*] + v122|QWORD * 1] size: DWORD <|@ <|@
      nr  578  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577486745296679515
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  640  <|@ instruction v93|DWORD = MOVSXB [v91|QWORD[*] + v121|QWORD * 1] size: DWORD <|@ <|@
      nr  642  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction MOV (x: [v48|QWORD + 32], y: v46|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr  508  <|@ instruction v98|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564592752682893746
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564271162101631196
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction MOVB [v68|QWORD[*] + v122|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  654  <|@ instruction v72|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  656  <|@ instruction v73|QWORD[*] = ADD (x: v68|QWORD[*], y: v122|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ instruction TEST (x: v72|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction v74|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [v72|QWORD + v74|QWORD * 1 - 8], y: v73|QWORD[*]) size: QWORD <|@ <|@
      nr  668  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 112], y: v75|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction MOVB [v91|QWORD[*] + v121|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  678  <|@ instruction v94|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  680  <|@ instruction v95|QWORD[*] = ADD (x: v91|QWORD[*], y: v121|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction TEST (x: v94|QWORD, y: v94|QWORD) size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction v96|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  690  <|@ instruction MOV (x: [v94|QWORD + v96|QWORD * 1 - 8], y: v95|QWORD[*]) size: QWORD <|@ <|@
      nr  692  <|@ instruction v97|QWORD = LEA [v94|QWORD - 8] size: QWORD <|@ <|@
      nr  694  <|@ instruction MOV (x: [r15|QWORD + 112], y: v97|QWORD) size: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction rsi|QWORD = MOVE v73|QWORD[*] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction rsi|QWORD = MOVE v95|QWORD[*] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  732  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction v106|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr   76  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr   84  <|@ instruction v108|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [v108|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr   88  <|@ instruction v109|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr   90  <|@ instruction v110|QWORD = LEA [v109|QWORD + 16] size: QWORD <|@ <|@
      nr   92  <|@ instruction CMP (x: v110|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 280], y: v110|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~[v109|QWORD + 208] instr: 3 <|@ <|@
      nr  102  <|@ instruction v112|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [v109|QWORD], y: v112|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction MOV [v109|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  108  <|@ instruction MOV [v109|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  110  <|@ instruction v113|QWORD[.] = MOVE v109|QWORD moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~[v113|QWORD[.]] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  114  <|@ instruction [v114|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [v114|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction rdx|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] v114|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr  124  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction MOV (x: [v14|QWORD + 32], y: v16|QWORD) size: QWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction MOV (x: [v3|QWORD + 32], y: v5|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction v115|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  744  <|@ instruction v116|QWORD = LEA [v115|QWORD + 16] size: QWORD <|@ <|@
      nr  746  <|@ instruction CMP (x: v116|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 280], y: v116|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~[v115|QWORD + 208] instr: 3 <|@ <|@
      nr  756  <|@ instruction v118|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [v115|QWORD], y: v118|QWORD) size: QWORD <|@ <|@
      nr  760  <|@ instruction MOV [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  762  <|@ instruction MOV [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  764  <|@ instruction v119|QWORD[.] = MOVE v115|QWORD moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction JUMP ~[v119|QWORD[.]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  768  <|@ instruction [v120|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  770  <|@ instruction MOV (x: [v120|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr  772  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 4587195615000912736
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction JUMP ~[int[-56107|0xffffffffffff24d5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  798  <|@ instruction [v78|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v78|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580682074240651296
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  808  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr  812  <|@ instruction v111|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[v111|QWORD[.]] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  822  <|@ instruction v117|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction JUMP ~[v117|QWORD[.]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction JUMP ~[int[-51995|0xffffffffffff34e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  836  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr  862  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  844  <|@ instruction JUMP ~[int[-30771|0xffffffffffff87cd]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  850  <|@ instruction [v103|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  852  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v103|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  856  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction JUMP ~[int[-46643|0xffffffffffff49cd]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction JUMP ~[int[-57611|0xffffffffffff1ef5]] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[82, 84[[122, 123[[124, 126[[238, 240[[270, 272[[286, 287[[390, 392[[506, 508[[524, 525[[590, 591[[702, 703[[730, 731[[736, 738[[776, 777[[778, 780[[810, 812[[820, 822[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- v114|q [0, 8[[82, 83[[120, 123[[238, 239[[268, 271[[284, 287[[388, 391[[504, 507[[524, 525[[590, 591[[702, 703[[730, 731[[774, 777[[810, 811[[820, 821[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[776, 777[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v1|q [0, 6[[80, 83[[118, 123[[236, 239[[266, 271[[282, 287[[386, 391[[502, 507[[522, 525[[588, 591[[700, 703[[728, 731[[772, 777[[808, 811[[818, 821[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[776, 777[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[776, 777[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [6, 124[[128, 736[[740, 778[[782, 805[[806, 841[[842, 857[[858, 865[6 MustHaveRegister 72 MustHaveRegister 124 ShouldHaveRegister 136 MustHaveRegister 204 MustHaveRegister 266 ShouldHaveRegister 280 MustHaveRegister 282 ShouldHaveRegister 288 MustHaveRegister 294 MustHaveRegister 376 MustHaveRegister 418 MustHaveRegister 502 ShouldHaveRegister 510 ShouldHaveRegister 598 MustHaveRegister 600 ShouldHaveRegister 616 MustHaveRegister 626 ShouldHaveRegister 630 ShouldHaveRegister 634 ShouldHaveRegister 648 ShouldHaveRegister 696 ShouldHaveRegister 710 MustHaveRegister 712 ShouldHaveRegister 725 LiveAtLoopEnd 732 ShouldHaveRegister 736 ShouldHaveRegister 778 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [8, 123[[128, 211[[740, 772[[806, 826[[834, 841[8 MustHaveRegister 10 MustHaveRegister 80 ShouldHaveRegister 210 ShouldHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [10, 24[10 MustHaveRegister 14 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q v2|d [14, 62[[70, 77[[128, 130[14 MustHaveRegister 18 MustHaveRegister 30 MustHaveRegister 76 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [12, 15[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [16, 62[[128, 130[16 MustHaveRegister 18 MustHaveRegister 52 MustHaveRegister 61 LiveAtLoopEnd 130 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [30, 62[30 MustHaveRegister 32 MustHaveRegister 50 MustHaveRegister 61 LiveAtLoopEnd  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [32, 62[32 MustHaveRegister 38 MustHaveRegister 61 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d v105|d [36, 58[38 ShouldHaveRegister 44 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v8|d [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [46, 48[46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [48, 50[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [50, 52[50 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [136, 150[136 MustHaveRegister 140 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v13|d [140, 188[[196, 198[140 MustHaveRegister 144 MustHaveRegister 156 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [138, 141[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q -1 [142, 188[[196, 198[142 MustHaveRegister 144 MustHaveRegister 178 MustHaveRegister 187 LiveAtLoopEnd 198 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q -1 [156, 188[156 MustHaveRegister 158 MustHaveRegister 176 MustHaveRegister 187 LiveAtLoopEnd  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d -1 [158, 188[158 MustHaveRegister 164 MustHaveRegister 187 LiveAtLoopEnd  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d v104|d [162, 184[164 ShouldHaveRegister 170 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d v19|d [170, 172[170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [172, 174[172 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q -1 [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q -1 [176, 178[176 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d -1 [204, 208[204 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q v24|d [208, 734[208 MustHaveRegister 262 MustHaveRegister 725 LiveAtLoopEnd  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q -1 [206, 209[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q v102|q [212, 721[[726, 734[[782, 805[[826, 834[[842, 857[[858, 865[214 MustHaveRegister 236 ShouldHaveRegister 258 MustHaveRegister 716 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d -1 [214, 252[214 MustHaveRegister 218 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v29|d [218, 226[218 MustHaveRegister 220 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q -1 [216, 219[216 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q -1 [224, 226[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d rax|q [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [258, 264[[276, 374[[404, 416[[448, 500[[512, 516[[520, 530[258 MustHaveRegister 260 MustHaveRegister 302 MustHaveRegister 308 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v34|d [260, 268[[276, 388[[404, 416[[448, 507[[512, 516[[520, 542[[782, 805[[826, 830[260 MustHaveRegister 268 ShouldHaveRegister 388 ShouldHaveRegister 504 ShouldHaveRegister 534 ShouldHaveRegister 542 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q rax|q [272, 275[272 MustHaveRegister 274 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d -1 [278, 280[278 MustHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d v37|d [280, 374[[782, 805[[826, 830[280 MustHaveRegister 284 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [288, 374[[404, 416[[448, 456[288 MustHaveRegister 290 MustHaveRegister 292 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d -1 [290, 296[290 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d -1 [292, 312[292 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [294, 374[[404, 416[[448, 500[[512, 516[[520, 586[[650, 674[[698, 708[294 MustHaveRegister 296 ShouldHaveRegister 470 MustHaveRegister 530 MustHaveRegister 532 MustHaveRegister 550 MustHaveRegister 708 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d -1 [308, 320[308 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v41|d [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q -1 [310, 313[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q -1 [314, 374[[448, 450[314 MustHaveRegister 316 MustHaveRegister 324 MustHaveRegister 336 MustHaveRegister 364 MustHaveRegister 373 LiveAtLoopEnd 450 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d -1 [316, 330[316 MustHaveRegister 322 ShouldHaveRegister 330 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q v43|d [320, 374[[448, 450[320 MustHaveRegister 324 MustHaveRegister 336 ShouldHaveRegister 342 MustHaveRegister 450 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q -1 [318, 321[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q -1 [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q -1 [342, 374[342 MustHaveRegister 344 MustHaveRegister 362 MustHaveRegister 373 LiveAtLoopEnd  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d -1 [344, 374[344 MustHaveRegister 350 MustHaveRegister 373 LiveAtLoopEnd  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d v77|d [348, 370[350 ShouldHaveRegister 356 MustHaveRegister 370 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d v53|d [356, 358[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[v55|d]" v55|d -1 [358, 360[358 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q -1 [360, 362[360 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q -1 [362, 364[362 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q v39|d [456, 500[[512, 516[[520, 550[456 MustHaveRegister 470 MustHaveRegister 530 MustHaveRegister 532 MustHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[v59|d]" v59|d -1 [458, 460[458 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q -1 [470, 472[470 MustHaveRegister 472 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[v61|d]" v61|d -1 [472, 474[472 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q v61|d [474, 492[[520, 522[474 MustHaveRegister 476 MustHaveRegister 492 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q -1 [482, 494[482 MustHaveRegister 484 MustHaveRegister 492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q -1 [490, 492[490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q -1 [494, 496[494 MustHaveRegister 496 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q -1 [532, 534[532 MustHaveRegister 534 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q v66|q [534, 536[534 MustHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q v69|q [552, 560[[572, 582[[650, 656[552 MustHaveRegister 554 MustHaveRegister 576 MustHaveRegister 652 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[v69|q]" v69|q -1 [550, 552[550 MustHaveRegister 552 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[v70|d]" v70|d -1 [554, 556[554 MustHaveRegister 556 ShouldHaveRegister  "NoSpillStore"
  v71|d DWORD "[v71|d]" v71|d -1 [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[v72|q]" v72|q -1 [654, 668[654 MustHaveRegister 658 MustHaveRegister 666 MustHaveRegister 668 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[v73|q]" v73|q v68|q [656, 666[[698, 700[656 MustHaveRegister 666 MustHaveRegister 700 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[v74|q]" v74|q -1 [664, 666[664 MustHaveRegister 666 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[v75|q]" v75|q -1 [668, 670[668 MustHaveRegister 670 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[v76|d]" v76|d v42|d [708, 710[708 MustHaveRegister 710 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[v77|d]" v77|d v53|d [370, 373[370 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[v78|d]" v78|d -1 [798, 800[800 MustHaveRegister  "NoSpillStore"
  v79|d DWORD "[v79|d]" v79|d -1 [376, 384[376 MustHaveRegister 378 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[v80|q]" v80|q v79|d [384, 386[384 MustHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[v81|q]" v81|q rax|q [392, 404[[416, 448[[516, 520[[586, 608[392 MustHaveRegister 596 MustHaveRegister 600 ShouldHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v82|d DWORD "[v82|d]" v82|d -1 [394, 396[394 MustHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[v83|q]" v83|q -1 [418, 420[418 MustHaveRegister 420 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[v84|d]" v84|d -1 [420, 422[420 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[v85|q]" v85|q v84|d [422, 440[[586, 588[422 MustHaveRegister 424 MustHaveRegister 440 MustHaveRegister 588 ShouldHaveRegister  "NoSpillStore"
  v86|q QWORD "[v86|q]" v86|q -1 [430, 442[430 MustHaveRegister 432 MustHaveRegister 440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[v87|q]" v87|q -1 [438, 440[438 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[v88|q]" v88|q -1 [442, 444[442 MustHaveRegister 444 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[v89|d]" v89|d v81|q [596, 598[596 MustHaveRegister 598 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[v90|q]" v90|q v0|q [600, 602[600 MustHaveRegister 602 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[v91|q]" v91|q v0|q [616, 624[[636, 646[[674, 680[616 MustHaveRegister 618 MustHaveRegister 640 MustHaveRegister 676 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[v92|d]" v92|d -1 [618, 620[618 MustHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v93|d DWORD "[v93|d]" v93|d -1 [640, 642[640 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v94|q QWORD "[v94|q]" v94|q -1 [678, 692[678 MustHaveRegister 682 MustHaveRegister 690 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[v95|q]" v95|q v91|q [680, 690[[726, 728[680 MustHaveRegister 690 MustHaveRegister 728 ShouldHaveRegister  "NoSpillStore"
  v96|q QWORD "[v96|q]" v96|q -1 [688, 690[688 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[v97|q]" v97|q -1 [692, 694[692 MustHaveRegister 694 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[v98|d]" v98|d rax|q [508, 509[508 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[v99|q]" v99|q v0|q [714, 721[ "NoSpillStore"
  v100|d DWORD "[v100|d]" v100|d -1 [716, 722[716 MustHaveRegister 718 MustHaveRegister 722 MustHaveRegister  "NoSpillStore"
  v101|q QWORD "[v101|q]" v101|q -1 [720, 721[720 MustHaveRegister  "NoDefinitionFound"
  v102|q QWORD "[v102|q]" v102|q v100|d [722, 725[722 MustHaveRegister 724 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[v103|d]" v103|d -1 [850, 852[852 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[v104|d]" v104|d v19|d [184, 187[184 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[v105|d]" v105|d v8|d [58, 61[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[v106|d]" v106|d v0|q [72, 116[[740, 770[[806, 826[72 MustHaveRegister 116 MustHaveRegister 770 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[v107|q]" v107|q -1 [74, 102[[740, 756[[806, 808[[816, 818[74 MustHaveRegister 102 MustHaveRegister 756 MustHaveRegister 808 ShouldHaveRegister 818 ShouldHaveRegister  "NoSpillStore"
  v108|q QWORD "[v108|q]" v108|q rax|q [84, 118[[806, 816[84 MustHaveRegister 86 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v109|q QWORD "[v109|q]" v109|q -1 [88, 110[88 MustHaveRegister 90 MustHaveRegister 100 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v110|q QWORD "[v110|q]" v110|q -1 [90, 98[90 MustHaveRegister 92 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[v111|q]" v111|q rax|q [812, 815[812 MustHaveRegister 814 ShouldHaveRegister  "NoSpillStore"
  v112|q QWORD "[v112|q]" v112|q -1 [102, 104[102 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v113|q QWORD "[v113|q]" v113|q v109|q [110, 113[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v114|q QWORD "[v114|q]" v114|q v111|q [114, 123[116 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v115|q QWORD "[v115|q]" v115|q -1 [742, 764[742 MustHaveRegister 744 MustHaveRegister 754 MustHaveRegister 758 MustHaveRegister 760 MustHaveRegister 762 MustHaveRegister 764 ShouldHaveRegister  "NoSpillStore"
  v116|q QWORD "[v116|q]" v116|q -1 [744, 752[744 MustHaveRegister 746 MustHaveRegister 752 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[v117|q]" v117|q rax|q [822, 825[822 MustHaveRegister 824 ShouldHaveRegister  "NoSpillStore"
  v118|q QWORD "[v118|q]" v118|q -1 [756, 758[756 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v119|q QWORD "[v119|q]" v119|q v115|q [764, 767[764 MustHaveRegister 766 ShouldHaveRegister  "NoSpillStore"
  v120|q QWORD "[v120|q]" v120|q v117|q [768, 774[770 MustHaveRegister 774 ShouldHaveRegister  "NoSpillStore"
  v121|q QWORD "[v121|q]" v121|q -1 [614, 624[[636, 646[[674, 680[614 MustHaveRegister 618 MustHaveRegister 640 MustHaveRegister 676 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[v122|q]" v122|q -1 [548, 560[[572, 582[[650, 656[548 MustHaveRegister 554 MustHaveRegister 576 MustHaveRegister 652 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[82, 84[[122, 123[[124, 126[[238, 240[[270, 272[[286, 287[[390, 392[[506, 508[[524, 525[[590, 591[[702, 703[[730, 731[[736, 738[[776, 777[[778, 780[[810, 812[[820, 822[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- v114|q [0, 8[[82, 83[[120, 123[[238, 239[[268, 271[[284, 287[[388, 391[[504, 507[[524, 525[[590, 591[[702, 703[[730, 731[[774, 777[[810, 811[[820, 821[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[776, 777[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v1|q [0, 6[[80, 83[[118, 123[[236, 239[[266, 271[[282, 287[[386, 391[[502, 507[[522, 525[[588, 591[[700, 703[[728, 731[[772, 777[[808, 811[[818, 821[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[776, 777[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[776, 777[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 78[6 MustHaveRegister 72 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [8, 81[8 MustHaveRegister 10 MustHaveRegister 80 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [10, 24[10 MustHaveRegister 14 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q v2|d [14, 62[[70, 77[[128, 130[14 MustHaveRegister 18 MustHaveRegister 30 MustHaveRegister 76 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q -1 [12, 15[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [16, 62[[128, 130[16 MustHaveRegister 18 MustHaveRegister 52 MustHaveRegister 61 LiveAtLoopEnd 130 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r10|q]" v6|q -1 [30, 62[30 MustHaveRegister 32 MustHaveRegister 50 MustHaveRegister 61 LiveAtLoopEnd  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [32, 62[32 MustHaveRegister 38 MustHaveRegister 61 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[rcx|d]" v8|d v105|d [36, 58[38 ShouldHaveRegister 44 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rbx|d]" v9|d v8|d [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rbx|d]" v10|d -1 [46, 48[46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rbx|q]" v11|q -1 [48, 50[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rbx|q]" v12|q -1 [50, 52[50 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [136, 150[136 MustHaveRegister 140 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r8|q]" v14|q v13|d [140, 188[[196, 198[140 MustHaveRegister 144 MustHaveRegister 156 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[r11|q]" v15|q -1 [138, 141[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r11|q]" v16|q -1 [142, 188[[196, 198[142 MustHaveRegister 144 MustHaveRegister 178 MustHaveRegister 187 LiveAtLoopEnd 198 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r10|q]" v17|q -1 [156, 188[156 MustHaveRegister 158 MustHaveRegister 176 MustHaveRegister 187 LiveAtLoopEnd  "NoSpillStore"
  v18|d DWORD "[r9|d]" v18|d -1 [158, 188[158 MustHaveRegister 164 MustHaveRegister 187 LiveAtLoopEnd  "NoSpillStore"
  v19|d DWORD "[rcx|d]" v19|d v104|d [162, 184[164 ShouldHaveRegister 170 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rbx|d]" v20|d v19|d [170, 172[170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rbx|d]" v21|d -1 [172, 174[172 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rbx|q]" v22|q -1 [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rbx|q]" v23|q -1 [176, 178[176 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r10|d]" v24|d -1 [204, 208[204 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[r10|q]" v25|q v24|d [208, 212[208 MustHaveRegister  "SpillInDominator"
  v26|q QWORD "[r11|q]" v26|q -1 [206, 209[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[r10|q]" v28|q v102|q [212, 237[214 MustHaveRegister 236 ShouldHaveRegister  "SpillInDominator"
  v29|d DWORD "[r8|d]" v29|d -1 [214, 234[214 MustHaveRegister 218 MustHaveRegister  "OneSpillStore"
  v30|q QWORD "[rcx|q]" v30|q v29|d [218, 226[218 MustHaveRegister 220 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[r9|q]" v31|q -1 [216, 219[216 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[r9|q]" v32|q -1 [224, 226[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[rax|d]" v33|d rax|q [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r8|d]" v34|d -1 [258, 264[258 MustHaveRegister 260 MustHaveRegister  "OneSpillStore"
  v35|q QWORD "[r9|q]" v35|q v34|d [260, 268[260 MustHaveRegister 268 ShouldHaveRegister  "OneSpillStore"
  v36|q QWORD "[rax|q]" v36|q rax|q [272, 275[272 MustHaveRegister 274 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[rdx|d]" v37|d -1 [278, 280[278 MustHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rdx|d]" v38|d v37|d [280, 283[280 MustHaveRegister  "OneSpillStore"
  v39|d DWORD "[r10|d]" v39|d -1 [288, 374[[404, 416[[448, 456[288 MustHaveRegister 290 MustHaveRegister 292 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rdx|d]" v40|d -1 [290, 296[290 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[r11|d]" v41|d -1 [292, 312[292 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rbx|d]" v42|d -1 [294, 374[[404, 416[[448, 500[[512, 516[[520, 586[[650, 674[[698, 708[294 MustHaveRegister 296 ShouldHaveRegister 470 MustHaveRegister 530 MustHaveRegister 532 MustHaveRegister 550 MustHaveRegister 708 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[rdx|d]" v43|d -1 [308, 320[308 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[r11|q]" v44|q v41|d [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[r8|q]" v45|q -1 [310, 313[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r11|q]" v46|q -1 [314, 374[[448, 450[314 MustHaveRegister 316 MustHaveRegister 324 MustHaveRegister 336 MustHaveRegister 364 MustHaveRegister 373 LiveAtLoopEnd 450 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[r8|d]" v47|d -1 [316, 330[316 MustHaveRegister 322 ShouldHaveRegister 330 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rdx|q]" v48|q v43|d [320, 374[[448, 450[320 MustHaveRegister 324 MustHaveRegister 336 ShouldHaveRegister 342 MustHaveRegister 450 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[r9|q]" v49|q -1 [318, 321[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[r9|q]" v50|q -1 [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[r8|q]" v51|q -1 [342, 374[342 MustHaveRegister 344 MustHaveRegister 362 MustHaveRegister 373 LiveAtLoopEnd  "NoSpillStore"
  v52|d DWORD "[r9|d]" v52|d -1 [344, 374[344 MustHaveRegister 350 MustHaveRegister 373 LiveAtLoopEnd  "NoSpillStore"
  v53|d DWORD "[rcx|d]" v53|d v77|d [348, 370[350 ShouldHaveRegister 356 MustHaveRegister 370 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[rdi|d]" v54|d v53|d [356, 358[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[rdi|d]" v55|d -1 [358, 360[358 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rdi|q]" v56|q -1 [360, 362[360 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdi|q]" v57|q -1 [362, 364[362 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[r14|q]" v58|q v39|d [456, 500[[512, 516[[520, 550[456 MustHaveRegister 470 MustHaveRegister 530 MustHaveRegister 532 MustHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[rdx|d]" v59|d -1 [458, 460[458 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rdx|q]" v60|q -1 [470, 472[470 MustHaveRegister 472 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[rdx|d]" v61|d -1 [472, 474[472 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rdx|q]" v62|q v61|d [474, 492[[520, 522[474 MustHaveRegister 476 MustHaveRegister 492 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[r10|q]" v63|q -1 [482, 494[482 MustHaveRegister 484 MustHaveRegister 492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[r11|q]" v64|q -1 [490, 492[490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rdx|q]" v65|q -1 [494, 496[494 MustHaveRegister 496 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rsi|q]" v66|q -1 [532, 534[532 MustHaveRegister 534 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rsi|q]" v67|q v66|q [534, 536[534 MustHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rsi|q]" v68|q v69|q [552, 560[[572, 582[[650, 656[552 MustHaveRegister 554 MustHaveRegister 576 MustHaveRegister 652 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[rsi|q]" v69|q -1 [550, 552[550 MustHaveRegister 552 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[r10|d]" v70|d -1 [554, 556[554 MustHaveRegister 556 ShouldHaveRegister  "NoSpillStore"
  v71|d DWORD "[r10|d]" v71|d -1 [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[r10|q]" v72|q -1 [654, 668[654 MustHaveRegister 658 MustHaveRegister 666 MustHaveRegister 668 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q v68|q [656, 666[[698, 700[656 MustHaveRegister 666 MustHaveRegister 700 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[r11|q]" v74|q -1 [664, 666[664 MustHaveRegister 666 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rsi|q]" v75|q -1 [668, 670[668 MustHaveRegister 670 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[rbx|d]" v76|d v42|d [708, 710[708 MustHaveRegister 710 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[rcx|d]" v77|d v53|d [370, 373[370 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[rsi|d]" v78|d -1 [798, 800[800 MustHaveRegister  "NoSpillStore"
  v79|d DWORD "[rdx|d]" v79|d -1 [376, 384[376 MustHaveRegister 378 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[rdx|q]" v80|q v79|d [384, 386[384 MustHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[rbx|q]" v81|q rax|q [392, 404[[416, 448[[516, 520[[586, 608[392 MustHaveRegister 596 MustHaveRegister 600 ShouldHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v82|d DWORD "[rsi|d]" v82|d -1 [394, 396[394 MustHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdx|q]" v83|q -1 [418, 420[418 MustHaveRegister 420 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[rdx|d]" v84|d -1 [420, 422[420 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[rdx|q]" v85|q v84|d [422, 440[[586, 588[422 MustHaveRegister 424 MustHaveRegister 440 MustHaveRegister 588 ShouldHaveRegister  "NoSpillStore"
  v86|q QWORD "[r10|q]" v86|q -1 [430, 442[430 MustHaveRegister 432 MustHaveRegister 440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[r11|q]" v87|q -1 [438, 440[438 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[rdx|q]" v88|q -1 [442, 444[442 MustHaveRegister 444 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[r10|d]" v89|d v81|q [596, 598[596 MustHaveRegister 598 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[r10|q]" v90|q v0|q [600, 602[600 MustHaveRegister 602 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[r11|q]" v91|q v0|q [616, 624[[636, 646[[674, 680[616 MustHaveRegister 618 MustHaveRegister 640 MustHaveRegister 676 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[r8|d]" v92|d -1 [618, 620[618 MustHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v93|d DWORD "[r8|d]" v93|d -1 [640, 642[640 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v94|q QWORD "[rsi|q]" v94|q -1 [678, 692[678 MustHaveRegister 682 MustHaveRegister 690 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[r11|q]" v95|q v91|q [680, 690[[726, 728[680 MustHaveRegister 690 MustHaveRegister 728 ShouldHaveRegister  "NoSpillStore"
  v96|q QWORD "[r10|q]" v96|q -1 [688, 690[688 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[rsi|q]" v97|q -1 [692, 694[692 MustHaveRegister 694 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[rax|d]" v98|d rax|q [508, 509[508 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[rsi|q]" v99|q v0|q [714, 721[ "NoSpillStore"
  v100|d DWORD "[r10|d]" v100|d -1 [716, 722[716 MustHaveRegister 718 MustHaveRegister 722 MustHaveRegister  "NoSpillStore"
  v101|q QWORD "[r11|q]" v101|q -1 [720, 721[720 MustHaveRegister  "NoDefinitionFound"
  v102|q QWORD "[r10|q]" v102|q v100|d [722, 725[722 MustHaveRegister 724 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[r10|d]" v103|d -1 [850, 852[852 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[rcx|d]" v104|d v19|d [184, 187[184 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[rcx|d]" v105|d v8|d [58, 61[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[r10|d]" v106|d v0|q [72, 78[72 MustHaveRegister  "OneSpillStore"
  v107|q QWORD "[r11|q]" v107|q -1 [74, 78[74 MustHaveRegister  "OneSpillStore"
  v108|q QWORD "[rbx|q]" v108|q rax|q [84, 118[[806, 816[84 MustHaveRegister 86 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v109|q QWORD "[rsi|q]" v109|q -1 [88, 110[88 MustHaveRegister 90 MustHaveRegister 100 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v110|q QWORD "[rdx|q]" v110|q -1 [90, 98[90 MustHaveRegister 92 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[rax|q]" v111|q rax|q [812, 815[812 MustHaveRegister 814 ShouldHaveRegister  "NoSpillStore"
  v112|q QWORD "[rdx|q]" v112|q -1 [102, 104[102 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v113|q QWORD "[rsi|q]" v113|q v109|q [110, 113[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v114|q QWORD "[r10|q]" v114|q v111|q [114, 121[116 MustHaveRegister 120 ShouldHaveRegister  "OneSpillStore"
  v115|q QWORD "[rsi|q]" v115|q -1 [742, 764[742 MustHaveRegister 744 MustHaveRegister 754 MustHaveRegister 758 MustHaveRegister 760 MustHaveRegister 762 MustHaveRegister 764 ShouldHaveRegister  "NoSpillStore"
  v116|q QWORD "[rdx|q]" v116|q -1 [744, 752[744 MustHaveRegister 746 MustHaveRegister 752 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rax|q]" v117|q rax|q [822, 825[822 MustHaveRegister 824 ShouldHaveRegister  "NoSpillStore"
  v118|q QWORD "[rdx|q]" v118|q -1 [756, 758[756 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v119|q QWORD "[rsi|q]" v119|q v115|q [764, 767[764 MustHaveRegister 766 ShouldHaveRegister  "NoSpillStore"
  v120|q QWORD "[rdx|q]" v120|q v117|q [768, 774[770 MustHaveRegister 774 ShouldHaveRegister  "NoSpillStore"
  v121|q QWORD "[r10|q]" v121|q -1 [614, 624[[636, 646[[674, 680[614 MustHaveRegister 618 MustHaveRegister 640 MustHaveRegister 676 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[r13|q]" v122|q -1 [548, 560[[572, 582[[650, 656[548 MustHaveRegister 554 MustHaveRegister 576 MustHaveRegister 652 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v123|q QWORD "[vstack:2|q]" v0|q v0|q [78, 79[ "SpillInDominator"
  v124|q QWORD "[vstack:3|q]" v1|q v1|q [81, 123[[128, 211[[740, 772[[806, 826[210 ShouldHaveRegister 772 ShouldHaveRegister  "OneSpillStore"
  v125|d DWORD "[vstack:1|d]" v106|d v106|d [78, 81[ "OneSpillStore"
  v126|q QWORD "[vstack:0|q]" v107|q v107|q [78, 81[ "OneSpillStore"
  v127|q QWORD "[vstack:0|q]" v107|q v107|q [81, 96[ "OneSpillStore"
  v128|d DWORD "[vstack:1|d]" v106|d v106|d [81, 114[ "OneSpillStore"
  v129|q QWORD "[vstack:2|q]" v0|q v0|q [79, 81[ "SpillInDominator"
  v130|q QWORD "[vstack:2|q]" v0|q v0|q [81, 124[[128, 134[124 ShouldHaveRegister  "SpillInDominator"
  v131|q QWORD "[r11|q]" v107|q v107|q [96, 102[[740, 756[[806, 808[[816, 818[102 MustHaveRegister 756 MustHaveRegister 808 ShouldHaveRegister 818 ShouldHaveRegister  "OneSpillStore"
  v132|d DWORD "[rbp|d]" v106|d v106|d [114, 116[[740, 770[[806, 826[116 MustHaveRegister 770 MustHaveRegister  "OneSpillStore"
  v133|q QWORD "[rsi|q]" v0|q v0|q [134, 212[136 MustHaveRegister 204 MustHaveRegister  "SpillInDominator"
  v134|q QWORD "[rdx|q]" v1|q v1|q [834, 841[ "OneSpillStore"
  v135|q QWORD "[vstack:4|q]" v114|q v114|q [121, 123[ "OneSpillStore"
  v136|q QWORD "[vstack:2|q]" v0|q v0|q [212, 234[ "SpillInDominator"
  v137|q QWORD "[vstack:8|q]" v25|q v25|q [212, 234[ "SpillInDominator"
  v138|q QWORD "[vstack:7|q]" v28|q v28|q [237, 256[ "SpillInDominator"
  v139|q QWORD "[vstack:8|q]" v25|q v25|q [234, 237[ "SpillInDominator"
  v140|q QWORD "[vstack:2|q]" v0|q v0|q [234, 235[ "SpillInDominator"
  v141|d DWORD "[vstack:6|d]" v29|d v29|d [234, 237[ "OneSpillStore"
  v142|d DWORD "[vstack:6|d]" v29|d v29|d [237, 250[ "OneSpillStore"
  v143|q QWORD "[vstack:8|q]" v25|q v25|q [237, 256[ "SpillInDominator"
  v144|q QWORD "[vstack:2|q]" v0|q v0|q [235, 237[ "SpillInDominator"
  v145|q QWORD "[vstack:2|q]" v0|q v0|q [237, 276[266 ShouldHaveRegister  "SpillInDominator"
  v146|d DWORD "[r8|d]" v29|d v29|d [250, 252[252 ShouldHaveRegister  "OneSpillStore"
  v147|q QWORD "[r10|q]" v28|q v28|q [256, 264[258 MustHaveRegister  "SpillInDominator"
  v148|q QWORD "[r11|q]" v25|q v25|q [256, 264[262 MustHaveRegister  "SpillInDominator"
  v149|q QWORD "[rsi|q]" v0|q v0|q [276, 281[280 MustHaveRegister  "SpillInDominator"
  v150|q QWORD "[vstack:7|q]" v28|q v28|q [264, 269[ "SpillInDominator"
  v151|q QWORD "[vstack:8|q]" v25|q v25|q [264, 269[ "SpillInDominator"
  v152|d DWORD "[vstack:9|d]" v34|d v34|d [276, 285[ "OneSpillStore"
  v153|q QWORD "[vstack:10|q]" v35|q v35|q [276, 285[ "OneSpillStore"
  v154|q QWORD "[vstack:7|q]" v28|q v28|q [269, 714[ "SpillInDominator"
  v155|q QWORD "[vstack:8|q]" v25|q v25|q [269, 734[725 LiveAtLoopEnd  "SpillInDominator"
  v156|q QWORD "[rbx|q]" v28|q v28|q [714, 721[[726, 734[[782, 805[[826, 834[[842, 857[[858, 865[716 MustHaveRegister  "SpillInDominator"
  v157|q QWORD "[r10|q]" v0|q v0|q [281, 285[282 ShouldHaveRegister  "SpillInDominator"
  v158|d DWORD "[vstack:9|d]" v34|d v34|d [285, 300[ "OneSpillStore"
  v159|q QWORD "[vstack:10|q]" v35|q v35|q [285, 388[[404, 416[[448, 507[[512, 516[[520, 540[388 ShouldHaveRegister 504 ShouldHaveRegister 534 ShouldHaveRegister  "OneSpillStore"
  v160|d DWORD "[r11|d]" v38|d v38|d [283, 285[284 ShouldHaveRegister  "OneSpillStore"
  v161|q QWORD "[vstack:2|q]" v0|q v0|q [285, 287[ "SpillInDominator"
  v162|d DWORD "[vstack:11|d]" v38|d v38|d [285, 374[[782, 805[[826, 830[ "OneSpillStore"
  v163|q QWORD "[rsi|q]" v0|q v0|q [287, 382[288 MustHaveRegister 294 MustHaveRegister 376 MustHaveRegister  "SpillInDominator"
  v164|d DWORD "[r13|d]" v34|d v34|d [300, 374[[404, 416[[448, 500[[512, 516[[520, 530[302 MustHaveRegister 308 MustHaveRegister 530 MustHaveRegister  "OneSpillStore"
  v165|q QWORD "[r9|q]" v35|q v35|q [540, 542[[782, 805[[826, 830[542 MustHaveRegister  "OneSpillStore"
  v166|q QWORD "[vstack:2|q]" v0|q v0|q [382, 385[ "SpillInDominator"
  v167|q QWORD "[vstack:2|q]" v0|q v0|q [385, 389[ "SpillInDominator"
  v168|q QWORD "[vstack:2|q]" v0|q v0|q [389, 416[ "SpillInDominator"
  v169|q QWORD "[rsi|q]" v0|q v0|q [416, 501[418 MustHaveRegister  "SpillInDominator"
  v170|q QWORD "[r10|q]" v0|q v0|q [501, 505[502 ShouldHaveRegister  "SpillInDominator"
  v171|q QWORD "[vstack:2|q]" v0|q v0|q [505, 594[510 ShouldHaveRegister  "SpillInDominator"
  v172|q QWORD "[rsi|q]" v0|q v0|q [594, 650[598 MustHaveRegister 600 ShouldHaveRegister 616 MustHaveRegister 626 ShouldHaveRegister 630 ShouldHaveRegister 634 ShouldHaveRegister 648 ShouldHaveRegister  "SpillInDominator"
  v173|q QWORD "[r14|q]" v0|q v0|q [650, 736[[740, 768[696 ShouldHaveRegister 710 MustHaveRegister 712 ShouldHaveRegister 725 LiveAtLoopEnd 732 ShouldHaveRegister 736 ShouldHaveRegister  "SpillInDominator"
  v174|q QWORD "[vstack:2|q]" v0|q v0|q [768, 771[ "SpillInDominator"
  v175|q QWORD "[vstack:2|q]" v0|q v0|q [771, 775[ "SpillInDominator"
  v176|q QWORD "[vstack:2|q]" v0|q v0|q [775, 778[[782, 805[[806, 841[[842, 857[778 ShouldHaveRegister  "SpillInDominator"
  v177|q QWORD "[rsi|q]" v0|q v0|q [858, 865[ "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   14  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   16  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   18  <|@ instruction CMP (x: v5|QWORD, y: [v3|QWORD + 32]) size: QWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction v6|QWORD = MOV [v3|QWORD + 40] size: QWORD <|@ <|@
      nr   32  <|@ instruction v7|DWORD = MOV [v6|QWORD] size: DWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~[int[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   44  <|@ instruction v9|DWORD = SHL v8|DWORD y: 3 size: DWORD <|@ <|@
      nr   46  <|@ instruction v10|DWORD = LEA [v9|DWORD + 8] size: DWORD <|@ <|@
      nr   48  <|@ instruction v11|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction v12|QWORD = MOV [v6|QWORD + v11|QWORD * 1] size: QWORD <|@ <|@
      nr   52  <|@ instruction CMP (x: v5|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction v105|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[v105|DWORD] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   36  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   38  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  138  <|@ instruction v15|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  140  <|@ instruction v14|QWORD = UNCOMPRESSPOINTER (input: v13|DWORD, ~baseRegister: v15|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  142  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr  144  <|@ instruction CMP (x: v16|QWORD, y: [v14|QWORD + 32]) size: QWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction v17|QWORD = MOV [v14|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction v18|DWORD = MOV [v17|QWORD] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~[int[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  170  <|@ instruction v20|DWORD = SHL v19|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction v21|DWORD = LEA [v20|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction v22|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr  176  <|@ instruction v23|QWORD = MOV [v17|QWORD + v22|QWORD * 1] size: QWORD <|@ <|@
      nr  178  <|@ instruction CMP (x: v16|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction v104|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[v104|DWORD] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  162  <|@ instruction [v19|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  164  <|@ instruction CMP (x: v18|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction v24|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  206  <|@ instruction v26|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  208  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  210  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  224  <|@ instruction v32|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr  226  <|@ instruction CMP (x: v32|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607018771416986051
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction CMP v29|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction v34|DWORD[.] = MOV [v28|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  260  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v25|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = STACKMOVE v151|QWORD size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = STACKMOVE v150|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr  272  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr  714  <|@ instruction [v99|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  716  <|@ instruction v100|DWORD[.] = MOV [v28|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v100|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT v101|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr  722  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  724  <|@ instruction JUMP ~[v102|QWORD[.]] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  212  <|@ instruction [v28|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  214  <|@ instruction v29|DWORD = MOV [v28|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  216  <|@ instruction v31|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  218  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  220  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v30|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = STACKMOVE v144|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = STACKMOVE v139|QWORD size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = STACKMOVE (input: v141|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr  240  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction v37|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  280  <|@ instruction v38|DWORD = ADD (x: v37|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = MOVE v38|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction rdx|DWORD = MOVE v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|DWORD = MOVE v160|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = STACKMOVE v153|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|DWORD[.] = STACKMOVE (input: v152|DWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE v161|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ instruction v39|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v40|DWORD = MOV [v39|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr  292  <|@ instruction v41|DWORD = MOV [v39|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  294  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction CMP (x: v40|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction TEST (x: v34|DWORD[.], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction v43|DWORD = MOV [v34|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  310  <|@ instruction v45|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  312  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v41|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  314  <|@ instruction v46|QWORD = MOV [v44|QWORD + 232] size: QWORD <|@ <|@
      nr  316  <|@ instruction v47|DWORD = MOV [v46|QWORD + 16] size: DWORD <|@ <|@
      nr  318  <|@ instruction v49|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  320  <|@ instruction v48|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v49|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  322  <|@ instruction v50|QWORD = MOVSXD v47|DWORD size: QWORD <|@ <|@
      nr  324  <|@ instruction CMP (x: v46|QWORD, y: [v48|QWORD + v50|QWORD * 1]) size: QWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction CMP v47|DWORD y: 32 size: DWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: v46|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction v51|QWORD = MOV [v48|QWORD + 40] size: QWORD <|@ <|@
      nr  344  <|@ instruction v52|DWORD = MOV [v51|QWORD] size: DWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[int[0|0x0]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  356  <|@ instruction v54|DWORD = SHL v53|DWORD y: 3 size: DWORD <|@ <|@
      nr  358  <|@ instruction v55|DWORD = LEA [v54|DWORD + 8] size: DWORD <|@ <|@
      nr  360  <|@ instruction v56|QWORD = MOVSXD v55|DWORD size: QWORD <|@ <|@
      nr  362  <|@ instruction v57|QWORD = MOV [v51|QWORD + v56|QWORD * 1] size: QWORD <|@ <|@
      nr  364  <|@ instruction CMP (x: v46|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction v77|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[v77|DWORD] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B57" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr  348  <|@ instruction [v53|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  350  <|@ instruction CMP (x: v52|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction v79|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  378  <|@ instruction TEST (x: v79|DWORD[.], y: v79|DWORD[.]) size: DWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = STACKMOVE v166|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD[.] = STACKMOVE v167|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr  392  <|@ instruction v81|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction v82|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  396  <|@ instruction TEST (x: v82|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426301
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction v89|DWORD[.] = COMPRESSPOINTER (input: v81|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  598  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr  600  <|@ instruction v90|QWORD[*] = XOR (x: v0|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  602  <|@ instruction TEST v90|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  604  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction v121|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  616  <|@ instruction v91|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  618  <|@ instruction v92|DWORD = MOVSXB [v91|QWORD[*] + v121|QWORD * 1] size: DWORD <|@ <|@
      nr  620  <|@ instruction CMP v92|DWORD y: 32 size: DWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B32" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  458  <|@ instruction v59|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  460  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction MOV (x: [v58|QWORD[.] + v42|DWORD * 4 + 16], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr  532  <|@ instruction v66|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  534  <|@ instruction v67|QWORD[*] = XOR (x: v66|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction TEST v67|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  538  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction TEST (x: v35|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr  544  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction v122|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  550  <|@ instruction v69|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  552  <|@ instruction v68|QWORD[*] = SHR v69|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  554  <|@ instruction v70|DWORD = MOVSXB [v68|QWORD[*] + v122|QWORD * 1] size: DWORD <|@ <|@
      nr  556  <|@ instruction CMP v70|DWORD y: 32 size: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction v76|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr  710  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v76|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581910371599640205
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction v60|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction v61|DWORD[.] = MOV [v60|QWORD[.]] size: DWORD <|@ <|@
      nr  474  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction TEST (x: v62|QWORD[.], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction TEST (x: v63|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction v64|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  492  <|@ instruction MOV (x: [v63|QWORD + v64|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr  494  <|@ instruction v65|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr  496  <|@ instruction MOV (x: [r15|QWORD + 56], y: v65|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction v83|QWORD[.] = LEA [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction v84|DWORD[.] = MOV [v83|QWORD[.]] size: DWORD <|@ <|@
      nr  422  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction TEST (x: v85|QWORD[.], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction v86|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  432  <|@ instruction TEST (x: v86|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  440  <|@ instruction MOV (x: [v86|QWORD + v87|QWORD * 1 - 8], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr  442  <|@ instruction v88|QWORD = LEA [v86|QWORD - 8] size: QWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 56], y: v88|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  576  <|@ instruction v71|DWORD = MOVSXB [v68|QWORD[*] + v122|QWORD * 1] size: DWORD <|@ <|@
      nr  578  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577486745296679515
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  640  <|@ instruction v93|DWORD = MOVSXB [v91|QWORD[*] + v121|QWORD * 1] size: DWORD <|@ <|@
      nr  642  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction MOV (x: [v48|QWORD + 32], y: v46|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v169|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr  508  <|@ instruction v98|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564592752682893746
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564271162101631196
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction MOVB [v68|QWORD[*] + v122|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  654  <|@ instruction v72|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  656  <|@ instruction v73|QWORD[*] = ADD (x: v68|QWORD[*], y: v122|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ instruction TEST (x: v72|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction v74|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [v72|QWORD + v74|QWORD * 1 - 8], y: v73|QWORD[*]) size: QWORD <|@ <|@
      nr  668  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 112], y: v75|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction MOVB [v91|QWORD[*] + v121|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  678  <|@ instruction v94|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  680  <|@ instruction v95|QWORD[*] = ADD (x: v91|QWORD[*], y: v121|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction TEST (x: v94|QWORD, y: v94|QWORD) size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction v96|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  690  <|@ instruction MOV (x: [v94|QWORD + v96|QWORD * 1 - 8], y: v95|QWORD[*]) size: QWORD <|@ <|@
      nr  692  <|@ instruction v97|QWORD = LEA [v94|QWORD - 8] size: QWORD <|@ <|@
      nr  694  <|@ instruction MOV (x: [r15|QWORD + 112], y: v97|QWORD) size: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction rsi|QWORD = MOVE v73|QWORD[*] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction rsi|QWORD = MOVE v95|QWORD[*] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  732  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction v106|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr   76  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = STACKMOVE v129|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|DWORD[.] = STACKMOVE (input: v125|DWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = STACKMOVE v126|QWORD size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr   84  <|@ instruction v108|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [v108|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr   88  <|@ instruction v109|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr   90  <|@ instruction v110|QWORD = LEA [v109|QWORD + 16] size: QWORD <|@ <|@
      nr   92  <|@ instruction CMP (x: v110|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 280], y: v110|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~[v109|QWORD + 208] instr: 3 <|@ <|@
      nr  102  <|@ instruction v112|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [v109|QWORD], y: v112|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction MOV [v109|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  108  <|@ instruction MOV [v109|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  110  <|@ instruction v113|QWORD[.] = MOVE v109|QWORD moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~[v113|QWORD[.]] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  114  <|@ instruction [v114|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [v114|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction rdx|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] v114|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr  124  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction MOV (x: [v14|QWORD + 32], y: v16|QWORD) size: QWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction MOV (x: [v3|QWORD + 32], y: v5|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction v115|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  744  <|@ instruction v116|QWORD = LEA [v115|QWORD + 16] size: QWORD <|@ <|@
      nr  746  <|@ instruction CMP (x: v116|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 280], y: v116|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~[v115|QWORD + 208] instr: 3 <|@ <|@
      nr  756  <|@ instruction v118|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [v115|QWORD], y: v118|QWORD) size: QWORD <|@ <|@
      nr  760  <|@ instruction MOV [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  762  <|@ instruction MOV [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  764  <|@ instruction v119|QWORD[.] = MOVE v115|QWORD moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction JUMP ~[v119|QWORD[.]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  768  <|@ instruction [v120|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  770  <|@ instruction MOV (x: [v120|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = STACKMOVE v174|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = STACKMOVE v175|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  776  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 4587195615000912736
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction JUMP ~[int[-56107|0xffffffffffff24d5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  798  <|@ instruction [v78|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v78|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580682074240651296
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  808  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr  812  <|@ instruction v111|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[v111|QWORD[.]] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  822  <|@ instruction v117|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction JUMP ~[v117|QWORD[.]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction JUMP ~[int[-51995|0xffffffffffff34e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  836  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr  862  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  844  <|@ instruction JUMP ~[int[-30771|0xffffffffffff87cd]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  850  <|@ instruction [v103|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  852  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v103|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  856  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction JUMP ~[int[-46643|0xffffffffffff49cd]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction JUMP ~[int[-57611|0xffffffffffff1ef5]] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[82, 84[[122, 123[[124, 126[[238, 240[[270, 272[[286, 287[[390, 392[[506, 508[[524, 525[[590, 591[[702, 703[[730, 731[[736, 738[[776, 777[[778, 780[[810, 812[[820, 822[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- v114|q [0, 8[[82, 83[[120, 123[[238, 239[[268, 271[[284, 287[[388, 391[[504, 507[[524, 525[[590, 591[[702, 703[[730, 731[[774, 777[[810, 811[[820, 821[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[776, 777[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v1|q [0, 6[[80, 83[[118, 123[[236, 239[[266, 271[[282, 287[[386, 391[[502, 507[[522, 525[[588, 591[[700, 703[[728, 731[[772, 777[[808, 811[[818, 821[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[776, 777[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[776, 777[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 78[6 MustHaveRegister 72 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [8, 81[8 MustHaveRegister 10 MustHaveRegister 80 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [10, 24[10 MustHaveRegister 14 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q v2|d [14, 62[[70, 77[[128, 130[14 MustHaveRegister 18 MustHaveRegister 30 MustHaveRegister 76 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q -1 [12, 15[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [16, 62[[128, 130[16 MustHaveRegister 18 MustHaveRegister 52 MustHaveRegister 61 LiveAtLoopEnd 130 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r10|q]" v6|q -1 [30, 62[30 MustHaveRegister 32 MustHaveRegister 50 MustHaveRegister 61 LiveAtLoopEnd  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [32, 62[32 MustHaveRegister 38 MustHaveRegister 61 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[rcx|d]" v8|d v105|d [36, 58[38 ShouldHaveRegister 44 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rbx|d]" v9|d v8|d [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rbx|d]" v10|d -1 [46, 48[46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rbx|q]" v11|q -1 [48, 50[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rbx|q]" v12|q -1 [50, 52[50 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [136, 150[136 MustHaveRegister 140 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r8|q]" v14|q v13|d [140, 188[[196, 198[140 MustHaveRegister 144 MustHaveRegister 156 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[r11|q]" v15|q -1 [138, 141[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r11|q]" v16|q -1 [142, 188[[196, 198[142 MustHaveRegister 144 MustHaveRegister 178 MustHaveRegister 187 LiveAtLoopEnd 198 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r10|q]" v17|q -1 [156, 188[156 MustHaveRegister 158 MustHaveRegister 176 MustHaveRegister 187 LiveAtLoopEnd  "NoSpillStore"
  v18|d DWORD "[r9|d]" v18|d -1 [158, 188[158 MustHaveRegister 164 MustHaveRegister 187 LiveAtLoopEnd  "NoSpillStore"
  v19|d DWORD "[rcx|d]" v19|d v104|d [162, 184[164 ShouldHaveRegister 170 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rbx|d]" v20|d v19|d [170, 172[170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rbx|d]" v21|d -1 [172, 174[172 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rbx|q]" v22|q -1 [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rbx|q]" v23|q -1 [176, 178[176 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r10|d]" v24|d -1 [204, 208[204 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[r10|q]" v25|q v24|d [208, 212[208 MustHaveRegister  "StoreAtDefinition"
  v26|q QWORD "[r11|q]" v26|q -1 [206, 209[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[r10|q]" v28|q v102|q [212, 237[214 MustHaveRegister 236 ShouldHaveRegister  "StoreAtDefinition"
  v29|d DWORD "[r8|d]" v29|d -1 [214, 234[214 MustHaveRegister 218 MustHaveRegister  "OneSpillStore"
  v30|q QWORD "[rcx|q]" v30|q v29|d [218, 226[218 MustHaveRegister 220 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[r9|q]" v31|q -1 [216, 219[216 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[r9|q]" v32|q -1 [224, 226[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[rax|d]" v33|d rax|q [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r8|d]" v34|d -1 [258, 264[258 MustHaveRegister 260 MustHaveRegister  "OneSpillStore"
  v35|q QWORD "[r9|q]" v35|q v34|d [260, 268[260 MustHaveRegister 268 ShouldHaveRegister  "OneSpillStore"
  v36|q QWORD "[rax|q]" v36|q rax|q [272, 275[272 MustHaveRegister 274 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[rdx|d]" v37|d -1 [278, 280[278 MustHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rdx|d]" v38|d v37|d [280, 283[280 MustHaveRegister  "OneSpillStore"
  v39|d DWORD "[r10|d]" v39|d -1 [288, 374[[404, 416[[448, 456[288 MustHaveRegister 290 MustHaveRegister 292 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rdx|d]" v40|d -1 [290, 296[290 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[r11|d]" v41|d -1 [292, 312[292 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rbx|d]" v42|d -1 [294, 374[[404, 416[[448, 500[[512, 516[[520, 586[[650, 674[[698, 708[294 MustHaveRegister 296 ShouldHaveRegister 470 MustHaveRegister 530 MustHaveRegister 532 MustHaveRegister 550 MustHaveRegister 708 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[rdx|d]" v43|d -1 [308, 320[308 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[r11|q]" v44|q v41|d [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[r8|q]" v45|q -1 [310, 313[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r11|q]" v46|q -1 [314, 374[[448, 450[314 MustHaveRegister 316 MustHaveRegister 324 MustHaveRegister 336 MustHaveRegister 364 MustHaveRegister 373 LiveAtLoopEnd 450 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[r8|d]" v47|d -1 [316, 330[316 MustHaveRegister 322 ShouldHaveRegister 330 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rdx|q]" v48|q v43|d [320, 374[[448, 450[320 MustHaveRegister 324 MustHaveRegister 336 ShouldHaveRegister 342 MustHaveRegister 450 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[r9|q]" v49|q -1 [318, 321[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[r9|q]" v50|q -1 [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[r8|q]" v51|q -1 [342, 374[342 MustHaveRegister 344 MustHaveRegister 362 MustHaveRegister 373 LiveAtLoopEnd  "NoSpillStore"
  v52|d DWORD "[r9|d]" v52|d -1 [344, 374[344 MustHaveRegister 350 MustHaveRegister 373 LiveAtLoopEnd  "NoSpillStore"
  v53|d DWORD "[rcx|d]" v53|d v77|d [348, 370[350 ShouldHaveRegister 356 MustHaveRegister 370 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[rdi|d]" v54|d v53|d [356, 358[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[rdi|d]" v55|d -1 [358, 360[358 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rdi|q]" v56|q -1 [360, 362[360 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdi|q]" v57|q -1 [362, 364[362 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[r14|q]" v58|q v39|d [456, 500[[512, 516[[520, 550[456 MustHaveRegister 470 MustHaveRegister 530 MustHaveRegister 532 MustHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[rdx|d]" v59|d -1 [458, 460[458 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rdx|q]" v60|q -1 [470, 472[470 MustHaveRegister 472 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[rdx|d]" v61|d -1 [472, 474[472 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rdx|q]" v62|q v61|d [474, 492[[520, 522[474 MustHaveRegister 476 MustHaveRegister 492 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[r10|q]" v63|q -1 [482, 494[482 MustHaveRegister 484 MustHaveRegister 492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[r11|q]" v64|q -1 [490, 492[490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rdx|q]" v65|q -1 [494, 496[494 MustHaveRegister 496 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rsi|q]" v66|q -1 [532, 534[532 MustHaveRegister 534 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rsi|q]" v67|q v66|q [534, 536[534 MustHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rsi|q]" v68|q v69|q [552, 560[[572, 582[[650, 656[552 MustHaveRegister 554 MustHaveRegister 576 MustHaveRegister 652 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[rsi|q]" v69|q -1 [550, 552[550 MustHaveRegister 552 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[r10|d]" v70|d -1 [554, 556[554 MustHaveRegister 556 ShouldHaveRegister  "NoSpillStore"
  v71|d DWORD "[r10|d]" v71|d -1 [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[r10|q]" v72|q -1 [654, 668[654 MustHaveRegister 658 MustHaveRegister 666 MustHaveRegister 668 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q v68|q [656, 666[[698, 700[656 MustHaveRegister 666 MustHaveRegister 700 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[r11|q]" v74|q -1 [664, 666[664 MustHaveRegister 666 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rsi|q]" v75|q -1 [668, 670[668 MustHaveRegister 670 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[rbx|d]" v76|d v42|d [708, 710[708 MustHaveRegister 710 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[rcx|d]" v77|d v53|d [370, 373[370 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[rsi|d]" v78|d -1 [798, 800[800 MustHaveRegister  "NoSpillStore"
  v79|d DWORD "[rdx|d]" v79|d -1 [376, 384[376 MustHaveRegister 378 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[rdx|q]" v80|q v79|d [384, 386[384 MustHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[rbx|q]" v81|q rax|q [392, 404[[416, 448[[516, 520[[586, 608[392 MustHaveRegister 596 MustHaveRegister 600 ShouldHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v82|d DWORD "[rsi|d]" v82|d -1 [394, 396[394 MustHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdx|q]" v83|q -1 [418, 420[418 MustHaveRegister 420 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[rdx|d]" v84|d -1 [420, 422[420 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[rdx|q]" v85|q v84|d [422, 440[[586, 588[422 MustHaveRegister 424 MustHaveRegister 440 MustHaveRegister 588 ShouldHaveRegister  "NoSpillStore"
  v86|q QWORD "[r10|q]" v86|q -1 [430, 442[430 MustHaveRegister 432 MustHaveRegister 440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[r11|q]" v87|q -1 [438, 440[438 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[rdx|q]" v88|q -1 [442, 444[442 MustHaveRegister 444 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[r10|d]" v89|d v81|q [596, 598[596 MustHaveRegister 598 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[r10|q]" v90|q v0|q [600, 602[600 MustHaveRegister 602 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[r11|q]" v91|q v0|q [616, 624[[636, 646[[674, 680[616 MustHaveRegister 618 MustHaveRegister 640 MustHaveRegister 676 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[r8|d]" v92|d -1 [618, 620[618 MustHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v93|d DWORD "[r8|d]" v93|d -1 [640, 642[640 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v94|q QWORD "[rsi|q]" v94|q -1 [678, 692[678 MustHaveRegister 682 MustHaveRegister 690 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[r11|q]" v95|q v91|q [680, 690[[726, 728[680 MustHaveRegister 690 MustHaveRegister 728 ShouldHaveRegister  "NoSpillStore"
  v96|q QWORD "[r10|q]" v96|q -1 [688, 690[688 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[rsi|q]" v97|q -1 [692, 694[692 MustHaveRegister 694 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[rax|d]" v98|d rax|q [508, 509[508 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[rsi|q]" v99|q v0|q [714, 721[ "NoSpillStore"
  v100|d DWORD "[r10|d]" v100|d -1 [716, 722[716 MustHaveRegister 718 MustHaveRegister 722 MustHaveRegister  "NoSpillStore"
  v101|q QWORD "[r11|q]" v101|q -1 [720, 721[720 MustHaveRegister  "NoDefinitionFound"
  v102|q QWORD "[r10|q]" v102|q v100|d [722, 725[722 MustHaveRegister 724 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[r10|d]" v103|d -1 [850, 852[852 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[rcx|d]" v104|d v19|d [184, 187[184 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[rcx|d]" v105|d v8|d [58, 61[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[r10|d]" v106|d v0|q [72, 78[72 MustHaveRegister  "OneSpillStore"
  v107|q QWORD "[r11|q]" v107|q -1 [74, 78[74 MustHaveRegister  "OneSpillStore"
  v108|q QWORD "[rbx|q]" v108|q rax|q [84, 118[[806, 816[84 MustHaveRegister 86 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v109|q QWORD "[rsi|q]" v109|q -1 [88, 110[88 MustHaveRegister 90 MustHaveRegister 100 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v110|q QWORD "[rdx|q]" v110|q -1 [90, 98[90 MustHaveRegister 92 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[rax|q]" v111|q rax|q [812, 815[812 MustHaveRegister 814 ShouldHaveRegister  "NoSpillStore"
  v112|q QWORD "[rdx|q]" v112|q -1 [102, 104[102 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v113|q QWORD "[rsi|q]" v113|q v109|q [110, 113[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v114|q QWORD "[r10|q]" v114|q v111|q [114, 121[116 MustHaveRegister 120 ShouldHaveRegister  "OneSpillStore"
  v115|q QWORD "[rsi|q]" v115|q -1 [742, 764[742 MustHaveRegister 744 MustHaveRegister 754 MustHaveRegister 758 MustHaveRegister 760 MustHaveRegister 762 MustHaveRegister 764 ShouldHaveRegister  "NoSpillStore"
  v116|q QWORD "[rdx|q]" v116|q -1 [744, 752[744 MustHaveRegister 746 MustHaveRegister 752 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rax|q]" v117|q rax|q [822, 825[822 MustHaveRegister 824 ShouldHaveRegister  "NoSpillStore"
  v118|q QWORD "[rdx|q]" v118|q -1 [756, 758[756 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v119|q QWORD "[rsi|q]" v119|q v115|q [764, 767[764 MustHaveRegister 766 ShouldHaveRegister  "NoSpillStore"
  v120|q QWORD "[rdx|q]" v120|q v117|q [768, 774[770 MustHaveRegister 774 ShouldHaveRegister  "NoSpillStore"
  v121|q QWORD "[r10|q]" v121|q -1 [614, 624[[636, 646[[674, 680[614 MustHaveRegister 618 MustHaveRegister 640 MustHaveRegister 676 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[r13|q]" v122|q -1 [548, 560[[572, 582[[650, 656[548 MustHaveRegister 554 MustHaveRegister 576 MustHaveRegister 652 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v123|q QWORD "[vstack:2|q]" v0|q v0|q [78, 79[ "StoreAtDefinition"
  v124|q QWORD "[vstack:3|q]" v1|q v1|q [81, 123[[128, 211[[740, 772[[806, 826[210 ShouldHaveRegister 772 ShouldHaveRegister  "OneSpillStore"
  v125|d DWORD "[vstack:1|d]" v106|d v106|d [78, 81[ "OneSpillStore"
  v126|q QWORD "[vstack:0|q]" v107|q v107|q [78, 81[ "OneSpillStore"
  v127|q QWORD "[vstack:0|q]" v107|q v107|q [81, 96[ "OneSpillStore"
  v128|d DWORD "[vstack:1|d]" v106|d v106|d [81, 114[ "OneSpillStore"
  v129|q QWORD "[vstack:2|q]" v0|q v0|q [79, 81[ "StoreAtDefinition"
  v130|q QWORD "[vstack:2|q]" v0|q v0|q [81, 124[[128, 134[124 ShouldHaveRegister  "StoreAtDefinition"
  v131|q QWORD "[r11|q]" v107|q v107|q [96, 102[[740, 756[[806, 808[[816, 818[102 MustHaveRegister 756 MustHaveRegister 808 ShouldHaveRegister 818 ShouldHaveRegister  "OneSpillStore"
  v132|d DWORD "[rbp|d]" v106|d v106|d [114, 116[[740, 770[[806, 826[116 MustHaveRegister 770 MustHaveRegister  "OneSpillStore"
  v133|q QWORD "[rsi|q]" v0|q v0|q [134, 212[136 MustHaveRegister 204 MustHaveRegister  "StoreAtDefinition"
  v134|q QWORD "[rdx|q]" v1|q v1|q [834, 841[ "OneSpillStore"
  v135|q QWORD "[vstack:4|q]" v114|q v114|q [121, 123[ "OneSpillStore"
  v136|q QWORD "[vstack:2|q]" v0|q v0|q [212, 234[ "StoreAtDefinition"
  v137|q QWORD "[vstack:8|q]" v25|q v25|q [212, 234[ "StoreAtDefinition"
  v138|q QWORD "[vstack:7|q]" v28|q v28|q [237, 256[ "StoreAtDefinition"
  v139|q QWORD "[vstack:8|q]" v25|q v25|q [234, 237[ "StoreAtDefinition"
  v140|q QWORD "[vstack:2|q]" v0|q v0|q [234, 235[ "StoreAtDefinition"
  v141|d DWORD "[vstack:6|d]" v29|d v29|d [234, 237[ "OneSpillStore"
  v142|d DWORD "[vstack:6|d]" v29|d v29|d [237, 250[ "OneSpillStore"
  v143|q QWORD "[vstack:8|q]" v25|q v25|q [237, 256[ "StoreAtDefinition"
  v144|q QWORD "[vstack:2|q]" v0|q v0|q [235, 237[ "StoreAtDefinition"
  v145|q QWORD "[vstack:2|q]" v0|q v0|q [237, 276[266 ShouldHaveRegister  "StoreAtDefinition"
  v146|d DWORD "[r8|d]" v29|d v29|d [250, 252[252 ShouldHaveRegister  "OneSpillStore"
  v147|q QWORD "[r10|q]" v28|q v28|q [256, 264[258 MustHaveRegister  "StoreAtDefinition"
  v148|q QWORD "[r11|q]" v25|q v25|q [256, 264[262 MustHaveRegister  "StoreAtDefinition"
  v149|q QWORD "[rsi|q]" v0|q v0|q [276, 281[280 MustHaveRegister  "StoreAtDefinition"
  v150|q QWORD "[vstack:7|q]" v28|q v28|q [264, 269[ "StoreAtDefinition"
  v151|q QWORD "[vstack:8|q]" v25|q v25|q [264, 269[ "StoreAtDefinition"
  v152|d DWORD "[vstack:9|d]" v34|d v34|d [276, 285[ "OneSpillStore"
  v153|q QWORD "[vstack:10|q]" v35|q v35|q [276, 285[ "OneSpillStore"
  v154|q QWORD "[vstack:7|q]" v28|q v28|q [269, 714[ "StoreAtDefinition"
  v155|q QWORD "[vstack:8|q]" v25|q v25|q [269, 734[725 LiveAtLoopEnd  "StoreAtDefinition"
  v156|q QWORD "[rbx|q]" v28|q v28|q [714, 721[[726, 734[[782, 805[[826, 834[[842, 857[[858, 865[716 MustHaveRegister  "StoreAtDefinition"
  v157|q QWORD "[r10|q]" v0|q v0|q [281, 285[282 ShouldHaveRegister  "StoreAtDefinition"
  v158|d DWORD "[vstack:9|d]" v34|d v34|d [285, 300[ "OneSpillStore"
  v159|q QWORD "[vstack:10|q]" v35|q v35|q [285, 388[[404, 416[[448, 507[[512, 516[[520, 540[388 ShouldHaveRegister 504 ShouldHaveRegister 534 ShouldHaveRegister  "OneSpillStore"
  v160|d DWORD "[r11|d]" v38|d v38|d [283, 285[284 ShouldHaveRegister  "OneSpillStore"
  v161|q QWORD "[vstack:2|q]" v0|q v0|q [285, 287[ "StoreAtDefinition"
  v162|d DWORD "[vstack:11|d]" v38|d v38|d [285, 374[[782, 805[[826, 830[ "OneSpillStore"
  v163|q QWORD "[rsi|q]" v0|q v0|q [287, 382[288 MustHaveRegister 294 MustHaveRegister 376 MustHaveRegister  "StoreAtDefinition"
  v164|d DWORD "[r13|d]" v34|d v34|d [300, 374[[404, 416[[448, 500[[512, 516[[520, 530[302 MustHaveRegister 308 MustHaveRegister 530 MustHaveRegister  "OneSpillStore"
  v165|q QWORD "[r9|q]" v35|q v35|q [540, 542[[782, 805[[826, 830[542 MustHaveRegister  "OneSpillStore"
  v166|q QWORD "[vstack:2|q]" v0|q v0|q [382, 385[ "StoreAtDefinition"
  v167|q QWORD "[vstack:2|q]" v0|q v0|q [385, 389[ "StoreAtDefinition"
  v168|q QWORD "[vstack:2|q]" v0|q v0|q [389, 416[ "StoreAtDefinition"
  v169|q QWORD "[rsi|q]" v0|q v0|q [416, 501[418 MustHaveRegister  "StoreAtDefinition"
  v170|q QWORD "[r10|q]" v0|q v0|q [501, 505[502 ShouldHaveRegister  "StoreAtDefinition"
  v171|q QWORD "[vstack:2|q]" v0|q v0|q [505, 594[510 ShouldHaveRegister  "StoreAtDefinition"
  v172|q QWORD "[rsi|q]" v0|q v0|q [594, 650[598 MustHaveRegister 600 ShouldHaveRegister 616 MustHaveRegister 626 ShouldHaveRegister 630 ShouldHaveRegister 634 ShouldHaveRegister 648 ShouldHaveRegister  "StoreAtDefinition"
  v173|q QWORD "[r14|q]" v0|q v0|q [650, 736[[740, 768[696 ShouldHaveRegister 710 MustHaveRegister 712 ShouldHaveRegister 725 LiveAtLoopEnd 732 ShouldHaveRegister 736 ShouldHaveRegister  "StoreAtDefinition"
  v174|q QWORD "[vstack:2|q]" v0|q v0|q [768, 771[ "StoreAtDefinition"
  v175|q QWORD "[vstack:2|q]" v0|q v0|q [771, 775[ "StoreAtDefinition"
  v176|q QWORD "[vstack:2|q]" v0|q v0|q [775, 778[[782, 805[[806, 841[[842, 857[778 ShouldHaveRegister  "StoreAtDefinition"
  v177|q QWORD "[rsi|q]" v0|q v0|q [858, 865[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   14  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   16  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   18  <|@ instruction CMP (x: v5|QWORD, y: [v3|QWORD + 32]) size: QWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction v6|QWORD = MOV [v3|QWORD + 40] size: QWORD <|@ <|@
      nr   32  <|@ instruction v7|DWORD = MOV [v6|QWORD] size: DWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~[int[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   44  <|@ instruction v9|DWORD = SHL v8|DWORD y: 3 size: DWORD <|@ <|@
      nr   46  <|@ instruction v10|DWORD = LEA [v9|DWORD + 8] size: DWORD <|@ <|@
      nr   48  <|@ instruction v11|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction v12|QWORD = MOV [v6|QWORD + v11|QWORD * 1] size: QWORD <|@ <|@
      nr   52  <|@ instruction CMP (x: v5|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction v105|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[v105|DWORD] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   36  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   38  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  138  <|@ instruction v15|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  140  <|@ instruction v14|QWORD = UNCOMPRESSPOINTER (input: v13|DWORD, ~baseRegister: v15|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  142  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr  144  <|@ instruction CMP (x: v16|QWORD, y: [v14|QWORD + 32]) size: QWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction v17|QWORD = MOV [v14|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction v18|DWORD = MOV [v17|QWORD] size: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~[int[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  170  <|@ instruction v20|DWORD = SHL v19|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction v21|DWORD = LEA [v20|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction v22|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr  176  <|@ instruction v23|QWORD = MOV [v17|QWORD + v22|QWORD * 1] size: QWORD <|@ <|@
      nr  178  <|@ instruction CMP (x: v16|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction v104|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[v104|DWORD] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  162  <|@ instruction [v19|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  164  <|@ instruction CMP (x: v18|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction v24|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  206  <|@ instruction v26|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  208  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  210  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  224  <|@ instruction v32|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr  226  <|@ instruction CMP (x: v32|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607018771416986051
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction CMP v29|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction v34|DWORD[.] = MOV [v28|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  260  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v25|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = STACKMOVE v151|QWORD size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = STACKMOVE v150|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr  272  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr  714  <|@ instruction [v99|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  716  <|@ instruction v100|DWORD[.] = MOV [v28|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v100|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT v101|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr  722  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  724  <|@ instruction JUMP ~[v102|QWORD[.]] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  212  <|@ instruction [v28|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  214  <|@ instruction v29|DWORD = MOV [v28|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  216  <|@ instruction v31|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  218  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  220  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v30|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = STACKMOVE v144|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = STACKMOVE v139|QWORD size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = STACKMOVE (input: v141|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr  240  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction v37|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  280  <|@ instruction v38|DWORD = ADD (x: v37|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = MOVE v38|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction rdx|DWORD = MOVE v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|DWORD = MOVE v160|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = STACKMOVE v153|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|DWORD[.] = STACKMOVE (input: v152|DWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE v161|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ instruction v39|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v40|DWORD = MOV [v39|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr  292  <|@ instruction v41|DWORD = MOV [v39|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  294  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction CMP (x: v40|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction TEST (x: v34|DWORD[.], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction v43|DWORD = MOV [v34|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  310  <|@ instruction v45|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  312  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v41|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  314  <|@ instruction v46|QWORD = MOV [v44|QWORD + 232] size: QWORD <|@ <|@
      nr  316  <|@ instruction v47|DWORD = MOV [v46|QWORD + 16] size: DWORD <|@ <|@
      nr  318  <|@ instruction v49|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  320  <|@ instruction v48|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v49|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  322  <|@ instruction v50|QWORD = MOVSXD v47|DWORD size: QWORD <|@ <|@
      nr  324  <|@ instruction CMP (x: v46|QWORD, y: [v48|QWORD + v50|QWORD * 1]) size: QWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction CMP v47|DWORD y: 32 size: DWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: v46|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction v51|QWORD = MOV [v48|QWORD + 40] size: QWORD <|@ <|@
      nr  344  <|@ instruction v52|DWORD = MOV [v51|QWORD] size: DWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[int[0|0x0]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  356  <|@ instruction v54|DWORD = SHL v53|DWORD y: 3 size: DWORD <|@ <|@
      nr  358  <|@ instruction v55|DWORD = LEA [v54|DWORD + 8] size: DWORD <|@ <|@
      nr  360  <|@ instruction v56|QWORD = MOVSXD v55|DWORD size: QWORD <|@ <|@
      nr  362  <|@ instruction v57|QWORD = MOV [v51|QWORD + v56|QWORD * 1] size: QWORD <|@ <|@
      nr  364  <|@ instruction CMP (x: v46|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction v77|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[v77|DWORD] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B57" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr  348  <|@ instruction [v53|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  350  <|@ instruction CMP (x: v52|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction v79|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  378  <|@ instruction TEST (x: v79|DWORD[.], y: v79|DWORD[.]) size: DWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = STACKMOVE v166|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD[.] = STACKMOVE v167|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr  392  <|@ instruction v81|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction v82|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  396  <|@ instruction TEST (x: v82|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426301
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction v89|DWORD[.] = COMPRESSPOINTER (input: v81|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  598  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr  600  <|@ instruction v90|QWORD[*] = XOR (x: v0|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  602  <|@ instruction TEST v90|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  604  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction v121|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  616  <|@ instruction v91|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  618  <|@ instruction v92|DWORD = MOVSXB [v91|QWORD[*] + v121|QWORD * 1] size: DWORD <|@ <|@
      nr  620  <|@ instruction CMP v92|DWORD y: 32 size: DWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B32" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  458  <|@ instruction v59|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  460  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction MOV (x: [v58|QWORD[.] + v42|DWORD * 4 + 16], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr  532  <|@ instruction v66|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  534  <|@ instruction v67|QWORD[*] = XOR (x: v66|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction TEST v67|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  538  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction TEST (x: v35|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr  544  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction v122|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  550  <|@ instruction v69|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  552  <|@ instruction v68|QWORD[*] = SHR v69|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  554  <|@ instruction v70|DWORD = MOVSXB [v68|QWORD[*] + v122|QWORD * 1] size: DWORD <|@ <|@
      nr  556  <|@ instruction CMP v70|DWORD y: 32 size: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction v76|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr  710  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v76|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581910371599640205
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction v60|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction v61|DWORD[.] = MOV [v60|QWORD[.]] size: DWORD <|@ <|@
      nr  474  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction TEST (x: v62|QWORD[.], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction TEST (x: v63|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction v64|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  492  <|@ instruction MOV (x: [v63|QWORD + v64|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr  494  <|@ instruction v65|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr  496  <|@ instruction MOV (x: [r15|QWORD + 56], y: v65|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction v83|QWORD[.] = LEA [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction v84|DWORD[.] = MOV [v83|QWORD[.]] size: DWORD <|@ <|@
      nr  422  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction TEST (x: v85|QWORD[.], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction v86|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  432  <|@ instruction TEST (x: v86|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  440  <|@ instruction MOV (x: [v86|QWORD + v87|QWORD * 1 - 8], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr  442  <|@ instruction v88|QWORD = LEA [v86|QWORD - 8] size: QWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 56], y: v88|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  576  <|@ instruction v71|DWORD = MOVSXB [v68|QWORD[*] + v122|QWORD * 1] size: DWORD <|@ <|@
      nr  578  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577486745296679515
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  640  <|@ instruction v93|DWORD = MOVSXB [v91|QWORD[*] + v121|QWORD * 1] size: DWORD <|@ <|@
      nr  642  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction MOV (x: [v48|QWORD + 32], y: v46|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v169|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr  508  <|@ instruction v98|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564592752682893746
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564271162101631196
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction MOVB [v68|QWORD[*] + v122|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  654  <|@ instruction v72|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  656  <|@ instruction v73|QWORD[*] = ADD (x: v68|QWORD[*], y: v122|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ instruction TEST (x: v72|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction v74|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [v72|QWORD + v74|QWORD * 1 - 8], y: v73|QWORD[*]) size: QWORD <|@ <|@
      nr  668  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 112], y: v75|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction MOVB [v91|QWORD[*] + v121|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  678  <|@ instruction v94|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  680  <|@ instruction v95|QWORD[*] = ADD (x: v91|QWORD[*], y: v121|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction TEST (x: v94|QWORD, y: v94|QWORD) size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction v96|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  690  <|@ instruction MOV (x: [v94|QWORD + v96|QWORD * 1 - 8], y: v95|QWORD[*]) size: QWORD <|@ <|@
      nr  692  <|@ instruction v97|QWORD = LEA [v94|QWORD - 8] size: QWORD <|@ <|@
      nr  694  <|@ instruction MOV (x: [r15|QWORD + 112], y: v97|QWORD) size: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction rsi|QWORD = MOVE v73|QWORD[*] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction rsi|QWORD = MOVE v95|QWORD[*] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  732  <|@ instruction JUMP ~[v0|QWORD[.]] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction v106|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr   76  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = STACKMOVE v129|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|DWORD[.] = STACKMOVE (input: v125|DWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = STACKMOVE v126|QWORD size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr   84  <|@ instruction v108|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [v108|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr   88  <|@ instruction v109|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr   90  <|@ instruction v110|QWORD = LEA [v109|QWORD + 16] size: QWORD <|@ <|@
      nr   92  <|@ instruction CMP (x: v110|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 280], y: v110|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~[v109|QWORD + 208] instr: 3 <|@ <|@
      nr  102  <|@ instruction v112|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [v109|QWORD], y: v112|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction MOV [v109|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  108  <|@ instruction MOV [v109|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  110  <|@ instruction v113|QWORD[.] = MOVE v109|QWORD moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~[v113|QWORD[.]] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  114  <|@ instruction [v114|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [v114|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction rdx|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] v114|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr  124  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction MOV (x: [v14|QWORD + 32], y: v16|QWORD) size: QWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction MOV (x: [v3|QWORD + 32], y: v5|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction v115|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  744  <|@ instruction v116|QWORD = LEA [v115|QWORD + 16] size: QWORD <|@ <|@
      nr  746  <|@ instruction CMP (x: v116|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 280], y: v116|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~[v115|QWORD + 208] instr: 3 <|@ <|@
      nr  756  <|@ instruction v118|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [v115|QWORD], y: v118|QWORD) size: QWORD <|@ <|@
      nr  760  <|@ instruction MOV [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  762  <|@ instruction MOV [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  764  <|@ instruction v119|QWORD[.] = MOVE v115|QWORD moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction JUMP ~[v119|QWORD[.]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  768  <|@ instruction [v120|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  770  <|@ instruction MOV (x: [v120|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = STACKMOVE v174|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = STACKMOVE v175|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  776  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 4587195615000912736
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction JUMP ~[int[-56107|0xffffffffffff24d5]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  798  <|@ instruction [v78|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v78|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580682074240651296
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  808  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr  812  <|@ instruction v111|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[v111|QWORD[.]] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  822  <|@ instruction v117|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction JUMP ~[v117|QWORD[.]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction JUMP ~[int[-51995|0xffffffffffff34e5]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  836  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr  862  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  844  <|@ instruction JUMP ~[int[-30771|0xffffffffffff87cd]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  850  <|@ instruction [v103|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  852  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v103|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  856  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction JUMP ~[int[-46643|0xffffffffffff49cd]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction JUMP ~[int[-57611|0xffffffffffff1ef5]] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[82, 84[[122, 123[[124, 126[[238, 240[[270, 272[[286, 287[[390, 392[[506, 508[[524, 525[[590, 591[[702, 703[[730, 731[[736, 738[[776, 777[[778, 780[[810, 812[[820, 822[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- v114|q [0, 8[[82, 83[[120, 123[[238, 239[[268, 271[[284, 287[[388, 391[[504, 507[[524, 525[[590, 591[[702, 703[[730, 731[[774, 777[[810, 811[[820, 821[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[776, 777[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v1|q [0, 6[[80, 83[[118, 123[[236, 239[[266, 271[[282, 287[[386, 391[[502, 507[[522, 525[[588, 591[[700, 703[[728, 731[[772, 777[[808, 811[[818, 821[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[776, 777[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[776, 777[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[82, 83[[122, 123[[238, 239[[270, 271[[286, 287[[390, 391[[506, 507[[524, 525[[590, 591[[702, 703[[730, 731[[776, 777[[810, 811[[820, 821[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 78[6 MustHaveRegister 72 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [8, 81[8 MustHaveRegister 10 MustHaveRegister 80 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [10, 24[10 MustHaveRegister 14 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q v2|d [14, 62[[70, 77[[128, 130[14 MustHaveRegister 18 MustHaveRegister 30 MustHaveRegister 76 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q -1 [12, 15[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [16, 62[[128, 130[16 MustHaveRegister 18 MustHaveRegister 52 MustHaveRegister 61 LiveAtLoopEnd 130 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r10|q]" v6|q -1 [30, 62[30 MustHaveRegister 32 MustHaveRegister 50 MustHaveRegister 61 LiveAtLoopEnd  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [32, 62[32 MustHaveRegister 38 MustHaveRegister 61 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[rcx|d]" v8|d v105|d [36, 58[38 ShouldHaveRegister 44 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rbx|d]" v9|d v8|d [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rbx|d]" v10|d -1 [46, 48[46 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rbx|q]" v11|q -1 [48, 50[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rbx|q]" v12|q -1 [50, 52[50 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [136, 150[136 MustHaveRegister 140 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r8|q]" v14|q v13|d [140, 188[[196, 198[140 MustHaveRegister 144 MustHaveRegister 156 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[r11|q]" v15|q -1 [138, 141[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r11|q]" v16|q -1 [142, 188[[196, 198[142 MustHaveRegister 144 MustHaveRegister 178 MustHaveRegister 187 LiveAtLoopEnd 198 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r10|q]" v17|q -1 [156, 188[156 MustHaveRegister 158 MustHaveRegister 176 MustHaveRegister 187 LiveAtLoopEnd  "NoSpillStore"
  v18|d DWORD "[r9|d]" v18|d -1 [158, 188[158 MustHaveRegister 164 MustHaveRegister 187 LiveAtLoopEnd  "NoSpillStore"
  v19|d DWORD "[rcx|d]" v19|d v104|d [162, 184[164 ShouldHaveRegister 170 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rbx|d]" v20|d v19|d [170, 172[170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rbx|d]" v21|d -1 [172, 174[172 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rbx|q]" v22|q -1 [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rbx|q]" v23|q -1 [176, 178[176 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r10|d]" v24|d -1 [204, 208[204 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[r10|q]" v25|q v24|d [208, 212[208 MustHaveRegister  "StoreAtDefinition"
  v26|q QWORD "[r11|q]" v26|q -1 [206, 209[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[r10|q]" v28|q v102|q [212, 237[214 MustHaveRegister 236 ShouldHaveRegister  "StoreAtDefinition"
  v29|d DWORD "[r8|d]" v29|d -1 [214, 234[214 MustHaveRegister 218 MustHaveRegister  "OneSpillStore"
  v30|q QWORD "[rcx|q]" v30|q v29|d [218, 226[218 MustHaveRegister 220 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[r9|q]" v31|q -1 [216, 219[216 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[r9|q]" v32|q -1 [224, 226[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[rax|d]" v33|d rax|q [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[r8|d]" v34|d -1 [258, 264[258 MustHaveRegister 260 MustHaveRegister  "OneSpillStore"
  v35|q QWORD "[r9|q]" v35|q v34|d [260, 268[260 MustHaveRegister 268 ShouldHaveRegister  "OneSpillStore"
  v36|q QWORD "[rax|q]" v36|q rax|q [272, 275[272 MustHaveRegister 274 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[rdx|d]" v37|d -1 [278, 280[278 MustHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rdx|d]" v38|d v37|d [280, 283[280 MustHaveRegister  "OneSpillStore"
  v39|d DWORD "[r10|d]" v39|d -1 [288, 374[[404, 416[[448, 456[288 MustHaveRegister 290 MustHaveRegister 292 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rdx|d]" v40|d -1 [290, 296[290 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[r11|d]" v41|d -1 [292, 312[292 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rbx|d]" v42|d -1 [294, 374[[404, 416[[448, 500[[512, 516[[520, 586[[650, 674[[698, 708[294 MustHaveRegister 296 ShouldHaveRegister 470 MustHaveRegister 530 MustHaveRegister 532 MustHaveRegister 550 MustHaveRegister 708 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[rdx|d]" v43|d -1 [308, 320[308 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[r11|q]" v44|q v41|d [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[r8|q]" v45|q -1 [310, 313[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[r11|q]" v46|q -1 [314, 374[[448, 450[314 MustHaveRegister 316 MustHaveRegister 324 MustHaveRegister 336 MustHaveRegister 364 MustHaveRegister 373 LiveAtLoopEnd 450 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[r8|d]" v47|d -1 [316, 330[316 MustHaveRegister 322 ShouldHaveRegister 330 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rdx|q]" v48|q v43|d [320, 374[[448, 450[320 MustHaveRegister 324 MustHaveRegister 336 ShouldHaveRegister 342 MustHaveRegister 450 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[r9|q]" v49|q -1 [318, 321[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[r9|q]" v50|q -1 [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[r8|q]" v51|q -1 [342, 374[342 MustHaveRegister 344 MustHaveRegister 362 MustHaveRegister 373 LiveAtLoopEnd  "NoSpillStore"
  v52|d DWORD "[r9|d]" v52|d -1 [344, 374[344 MustHaveRegister 350 MustHaveRegister 373 LiveAtLoopEnd  "NoSpillStore"
  v53|d DWORD "[rcx|d]" v53|d v77|d [348, 370[350 ShouldHaveRegister 356 MustHaveRegister 370 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[rdi|d]" v54|d v53|d [356, 358[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[rdi|d]" v55|d -1 [358, 360[358 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rdi|q]" v56|q -1 [360, 362[360 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdi|q]" v57|q -1 [362, 364[362 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[r14|q]" v58|q v39|d [456, 500[[512, 516[[520, 550[456 MustHaveRegister 470 MustHaveRegister 530 MustHaveRegister 532 MustHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[rdx|d]" v59|d -1 [458, 460[458 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rdx|q]" v60|q -1 [470, 472[470 MustHaveRegister 472 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[rdx|d]" v61|d -1 [472, 474[472 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rdx|q]" v62|q v61|d [474, 492[[520, 522[474 MustHaveRegister 476 MustHaveRegister 492 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[r10|q]" v63|q -1 [482, 494[482 MustHaveRegister 484 MustHaveRegister 492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[r11|q]" v64|q -1 [490, 492[490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rdx|q]" v65|q -1 [494, 496[494 MustHaveRegister 496 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rsi|q]" v66|q -1 [532, 534[532 MustHaveRegister 534 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rsi|q]" v67|q v66|q [534, 536[534 MustHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rsi|q]" v68|q v69|q [552, 560[[572, 582[[650, 656[552 MustHaveRegister 554 MustHaveRegister 576 MustHaveRegister 652 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[rsi|q]" v69|q -1 [550, 552[550 MustHaveRegister 552 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[r10|d]" v70|d -1 [554, 556[554 MustHaveRegister 556 ShouldHaveRegister  "NoSpillStore"
  v71|d DWORD "[r10|d]" v71|d -1 [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[r10|q]" v72|q -1 [654, 668[654 MustHaveRegister 658 MustHaveRegister 666 MustHaveRegister 668 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q v68|q [656, 666[[698, 700[656 MustHaveRegister 666 MustHaveRegister 700 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[r11|q]" v74|q -1 [664, 666[664 MustHaveRegister 666 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rsi|q]" v75|q -1 [668, 670[668 MustHaveRegister 670 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[rbx|d]" v76|d v42|d [708, 710[708 MustHaveRegister 710 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[rcx|d]" v77|d v53|d [370, 373[370 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[rsi|d]" v78|d -1 [798, 800[800 MustHaveRegister  "NoSpillStore"
  v79|d DWORD "[rdx|d]" v79|d -1 [376, 384[376 MustHaveRegister 378 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[rdx|q]" v80|q v79|d [384, 386[384 MustHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[rbx|q]" v81|q rax|q [392, 404[[416, 448[[516, 520[[586, 608[392 MustHaveRegister 596 MustHaveRegister 600 ShouldHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v82|d DWORD "[rsi|d]" v82|d -1 [394, 396[394 MustHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdx|q]" v83|q -1 [418, 420[418 MustHaveRegister 420 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[rdx|d]" v84|d -1 [420, 422[420 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[rdx|q]" v85|q v84|d [422, 440[[586, 588[422 MustHaveRegister 424 MustHaveRegister 440 MustHaveRegister 588 ShouldHaveRegister  "NoSpillStore"
  v86|q QWORD "[r10|q]" v86|q -1 [430, 442[430 MustHaveRegister 432 MustHaveRegister 440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[r11|q]" v87|q -1 [438, 440[438 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[rdx|q]" v88|q -1 [442, 444[442 MustHaveRegister 444 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[r10|d]" v89|d v81|q [596, 598[596 MustHaveRegister 598 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[r10|q]" v90|q v0|q [600, 602[600 MustHaveRegister 602 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[r11|q]" v91|q v0|q [616, 624[[636, 646[[674, 680[616 MustHaveRegister 618 MustHaveRegister 640 MustHaveRegister 676 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[r8|d]" v92|d -1 [618, 620[618 MustHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v93|d DWORD "[r8|d]" v93|d -1 [640, 642[640 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v94|q QWORD "[rsi|q]" v94|q -1 [678, 692[678 MustHaveRegister 682 MustHaveRegister 690 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[r11|q]" v95|q v91|q [680, 690[[726, 728[680 MustHaveRegister 690 MustHaveRegister 728 ShouldHaveRegister  "NoSpillStore"
  v96|q QWORD "[r10|q]" v96|q -1 [688, 690[688 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[rsi|q]" v97|q -1 [692, 694[692 MustHaveRegister 694 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[rax|d]" v98|d rax|q [508, 509[508 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[rsi|q]" v99|q v0|q [714, 721[ "NoSpillStore"
  v100|d DWORD "[r10|d]" v100|d -1 [716, 722[716 MustHaveRegister 718 MustHaveRegister 722 MustHaveRegister  "NoSpillStore"
  v101|q QWORD "[r11|q]" v101|q -1 [720, 721[720 MustHaveRegister  "NoDefinitionFound"
  v102|q QWORD "[r10|q]" v102|q v100|d [722, 725[722 MustHaveRegister 724 ShouldHaveRegister  "NoSpillStore"
  v103|d DWORD "[r10|d]" v103|d -1 [850, 852[852 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[rcx|d]" v104|d v19|d [184, 187[184 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[rcx|d]" v105|d v8|d [58, 61[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[r10|d]" v106|d v0|q [72, 78[72 MustHaveRegister  "OneSpillStore"
  v107|q QWORD "[r11|q]" v107|q -1 [74, 78[74 MustHaveRegister  "OneSpillStore"
  v108|q QWORD "[rbx|q]" v108|q rax|q [84, 118[[806, 816[84 MustHaveRegister 86 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v109|q QWORD "[rsi|q]" v109|q -1 [88, 110[88 MustHaveRegister 90 MustHaveRegister 100 MustHaveRegister 104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v110|q QWORD "[rdx|q]" v110|q -1 [90, 98[90 MustHaveRegister 92 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[rax|q]" v111|q rax|q [812, 815[812 MustHaveRegister 814 ShouldHaveRegister  "NoSpillStore"
  v112|q QWORD "[rdx|q]" v112|q -1 [102, 104[102 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v113|q QWORD "[rsi|q]" v113|q v109|q [110, 113[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v114|q QWORD "[r10|q]" v114|q v111|q [114, 121[116 MustHaveRegister 120 ShouldHaveRegister  "OneSpillStore"
  v115|q QWORD "[rsi|q]" v115|q -1 [742, 764[742 MustHaveRegister 744 MustHaveRegister 754 MustHaveRegister 758 MustHaveRegister 760 MustHaveRegister 762 MustHaveRegister 764 ShouldHaveRegister  "NoSpillStore"
  v116|q QWORD "[rdx|q]" v116|q -1 [744, 752[744 MustHaveRegister 746 MustHaveRegister 752 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rax|q]" v117|q rax|q [822, 825[822 MustHaveRegister 824 ShouldHaveRegister  "NoSpillStore"
  v118|q QWORD "[rdx|q]" v118|q -1 [756, 758[756 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v119|q QWORD "[rsi|q]" v119|q v115|q [764, 767[764 MustHaveRegister 766 ShouldHaveRegister  "NoSpillStore"
  v120|q QWORD "[rdx|q]" v120|q v117|q [768, 774[770 MustHaveRegister 774 ShouldHaveRegister  "NoSpillStore"
  v121|q QWORD "[r10|q]" v121|q -1 [614, 624[[636, 646[[674, 680[614 MustHaveRegister 618 MustHaveRegister 640 MustHaveRegister 676 MustHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[r13|q]" v122|q -1 [548, 560[[572, 582[[650, 656[548 MustHaveRegister 554 MustHaveRegister 576 MustHaveRegister 652 MustHaveRegister 656 ShouldHaveRegister  "NoSpillStore"
  v123|q QWORD "[vstack:2|q]" v0|q v0|q [78, 79[ "StoreAtDefinition"
  v124|q QWORD "[vstack:3|q]" v1|q v1|q [81, 123[[128, 211[[740, 772[[806, 826[210 ShouldHaveRegister 772 ShouldHaveRegister  "OneSpillStore"
  v125|d DWORD "[vstack:1|d]" v106|d v106|d [78, 81[ "OneSpillStore"
  v126|q QWORD "[vstack:0|q]" v107|q v107|q [78, 81[ "OneSpillStore"
  v127|q QWORD "[vstack:0|q]" v107|q v107|q [81, 96[ "OneSpillStore"
  v128|d DWORD "[vstack:1|d]" v106|d v106|d [81, 114[ "OneSpillStore"
  v129|q QWORD "[vstack:2|q]" v0|q v0|q [79, 81[ "StoreAtDefinition"
  v130|q QWORD "[vstack:2|q]" v0|q v0|q [81, 124[[128, 134[124 ShouldHaveRegister  "StoreAtDefinition"
  v131|q QWORD "[r11|q]" v107|q v107|q [96, 102[[740, 756[[806, 808[[816, 818[102 MustHaveRegister 756 MustHaveRegister 808 ShouldHaveRegister 818 ShouldHaveRegister  "OneSpillStore"
  v132|d DWORD "[rbp|d]" v106|d v106|d [114, 116[[740, 770[[806, 826[116 MustHaveRegister 770 MustHaveRegister  "OneSpillStore"
  v133|q QWORD "[rsi|q]" v0|q v0|q [134, 212[136 MustHaveRegister 204 MustHaveRegister  "StoreAtDefinition"
  v134|q QWORD "[rdx|q]" v1|q v1|q [834, 841[ "OneSpillStore"
  v135|q QWORD "[vstack:4|q]" v114|q v114|q [121, 123[ "OneSpillStore"
  v136|q QWORD "[vstack:2|q]" v0|q v0|q [212, 234[ "StoreAtDefinition"
  v137|q QWORD "[vstack:8|q]" v25|q v25|q [212, 234[ "StoreAtDefinition"
  v138|q QWORD "[vstack:7|q]" v28|q v28|q [237, 256[ "StoreAtDefinition"
  v139|q QWORD "[vstack:8|q]" v25|q v25|q [234, 237[ "StoreAtDefinition"
  v140|q QWORD "[vstack:2|q]" v0|q v0|q [234, 235[ "StoreAtDefinition"
  v141|d DWORD "[vstack:6|d]" v29|d v29|d [234, 237[ "OneSpillStore"
  v142|d DWORD "[vstack:6|d]" v29|d v29|d [237, 250[ "OneSpillStore"
  v143|q QWORD "[vstack:8|q]" v25|q v25|q [237, 256[ "StoreAtDefinition"
  v144|q QWORD "[vstack:2|q]" v0|q v0|q [235, 237[ "StoreAtDefinition"
  v145|q QWORD "[vstack:2|q]" v0|q v0|q [237, 276[266 ShouldHaveRegister  "StoreAtDefinition"
  v146|d DWORD "[r8|d]" v29|d v29|d [250, 252[252 ShouldHaveRegister  "OneSpillStore"
  v147|q QWORD "[r10|q]" v28|q v28|q [256, 264[258 MustHaveRegister  "StoreAtDefinition"
  v148|q QWORD "[r11|q]" v25|q v25|q [256, 264[262 MustHaveRegister  "StoreAtDefinition"
  v149|q QWORD "[rsi|q]" v0|q v0|q [276, 281[280 MustHaveRegister  "StoreAtDefinition"
  v150|q QWORD "[vstack:7|q]" v28|q v28|q [264, 269[ "StoreAtDefinition"
  v151|q QWORD "[vstack:8|q]" v25|q v25|q [264, 269[ "StoreAtDefinition"
  v152|d DWORD "[vstack:9|d]" v34|d v34|d [276, 285[ "OneSpillStore"
  v153|q QWORD "[vstack:10|q]" v35|q v35|q [276, 285[ "OneSpillStore"
  v154|q QWORD "[vstack:7|q]" v28|q v28|q [269, 714[ "StoreAtDefinition"
  v155|q QWORD "[vstack:8|q]" v25|q v25|q [269, 734[725 LiveAtLoopEnd  "StoreAtDefinition"
  v156|q QWORD "[rbx|q]" v28|q v28|q [714, 721[[726, 734[[782, 805[[826, 834[[842, 857[[858, 865[716 MustHaveRegister  "StoreAtDefinition"
  v157|q QWORD "[r10|q]" v0|q v0|q [281, 285[282 ShouldHaveRegister  "StoreAtDefinition"
  v158|d DWORD "[vstack:9|d]" v34|d v34|d [285, 300[ "OneSpillStore"
  v159|q QWORD "[vstack:10|q]" v35|q v35|q [285, 388[[404, 416[[448, 507[[512, 516[[520, 540[388 ShouldHaveRegister 504 ShouldHaveRegister 534 ShouldHaveRegister  "OneSpillStore"
  v160|d DWORD "[r11|d]" v38|d v38|d [283, 285[284 ShouldHaveRegister  "OneSpillStore"
  v161|q QWORD "[vstack:2|q]" v0|q v0|q [285, 287[ "StoreAtDefinition"
  v162|d DWORD "[vstack:11|d]" v38|d v38|d [285, 374[[782, 805[[826, 830[ "OneSpillStore"
  v163|q QWORD "[rsi|q]" v0|q v0|q [287, 382[288 MustHaveRegister 294 MustHaveRegister 376 MustHaveRegister  "StoreAtDefinition"
  v164|d DWORD "[r13|d]" v34|d v34|d [300, 374[[404, 416[[448, 500[[512, 516[[520, 530[302 MustHaveRegister 308 MustHaveRegister 530 MustHaveRegister  "OneSpillStore"
  v165|q QWORD "[r9|q]" v35|q v35|q [540, 542[[782, 805[[826, 830[542 MustHaveRegister  "OneSpillStore"
  v166|q QWORD "[vstack:2|q]" v0|q v0|q [382, 385[ "StoreAtDefinition"
  v167|q QWORD "[vstack:2|q]" v0|q v0|q [385, 389[ "StoreAtDefinition"
  v168|q QWORD "[vstack:2|q]" v0|q v0|q [389, 416[ "StoreAtDefinition"
  v169|q QWORD "[rsi|q]" v0|q v0|q [416, 501[418 MustHaveRegister  "StoreAtDefinition"
  v170|q QWORD "[r10|q]" v0|q v0|q [501, 505[502 ShouldHaveRegister  "StoreAtDefinition"
  v171|q QWORD "[vstack:2|q]" v0|q v0|q [505, 594[510 ShouldHaveRegister  "StoreAtDefinition"
  v172|q QWORD "[rsi|q]" v0|q v0|q [594, 650[598 MustHaveRegister 600 ShouldHaveRegister 616 MustHaveRegister 626 ShouldHaveRegister 630 ShouldHaveRegister 634 ShouldHaveRegister 648 ShouldHaveRegister  "StoreAtDefinition"
  v173|q QWORD "[r14|q]" v0|q v0|q [650, 736[[740, 768[696 ShouldHaveRegister 710 MustHaveRegister 712 ShouldHaveRegister 725 LiveAtLoopEnd 732 ShouldHaveRegister 736 ShouldHaveRegister  "StoreAtDefinition"
  v174|q QWORD "[vstack:2|q]" v0|q v0|q [768, 771[ "StoreAtDefinition"
  v175|q QWORD "[vstack:2|q]" v0|q v0|q [771, 775[ "StoreAtDefinition"
  v176|q QWORD "[vstack:2|q]" v0|q v0|q [775, 778[[782, 805[[806, 841[[842, 857[778 ShouldHaveRegister  "StoreAtDefinition"
  v177|q QWORD "[rsi|q]" v0|q v0|q [858, 865[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   14  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   16  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   18  <|@ instruction CMP (x: v5|QWORD, y: [v3|QWORD + 32]) size: QWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction v6|QWORD = MOV [v3|QWORD + 40] size: QWORD <|@ <|@
      nr   32  <|@ instruction v7|DWORD = MOV [v6|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   44  <|@ instruction v9|DWORD = SHL v8|DWORD y: 3 size: DWORD <|@ <|@
      nr   46  <|@ instruction v10|DWORD = LEA [v9|DWORD + 8] size: DWORD <|@ <|@
      nr   48  <|@ instruction v11|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction v12|QWORD = MOV [v6|QWORD + v11|QWORD * 1] size: QWORD <|@ <|@
      nr   52  <|@ instruction CMP (x: v5|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction v105|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   36  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   38  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  138  <|@ instruction v15|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  140  <|@ instruction v14|QWORD = UNCOMPRESSPOINTER (input: v13|DWORD, ~baseRegister: v15|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  142  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr  144  <|@ instruction CMP (x: v16|QWORD, y: [v14|QWORD + 32]) size: QWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction v17|QWORD = MOV [v14|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction v18|DWORD = MOV [v17|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  170  <|@ instruction v20|DWORD = SHL v19|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction v21|DWORD = LEA [v20|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction v22|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr  176  <|@ instruction v23|QWORD = MOV [v17|QWORD + v22|QWORD * 1] size: QWORD <|@ <|@
      nr  178  <|@ instruction CMP (x: v16|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction v104|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  162  <|@ instruction [v19|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  164  <|@ instruction CMP (x: v18|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction v24|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  206  <|@ instruction v26|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  208  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v137|QWORD = MOVE v25|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE v133|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  224  <|@ instruction v32|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr  226  <|@ instruction CMP (x: v32|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607018771416986051
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction CMP v29|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = MOVE v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOVE v143|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction v34|DWORD[.] = MOV [v28|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  260  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v25|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE v147|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = MOVE v148|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = STACKMOVE v151|QWORD size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = STACKMOVE v150|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr  272  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v145|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr  714  <|@ instruction [v99|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  716  <|@ instruction v100|DWORD[.] = MOV [v28|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v100|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT v101|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr  722  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE v173|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  212  <|@ instruction [v28|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  214  <|@ instruction v29|DWORD = MOV [v28|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  216  <|@ instruction v31|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  218  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  220  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v30|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = MOVE v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = STACKMOVE v144|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = STACKMOVE v139|QWORD size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = STACKMOVE (input: v141|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr  240  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE v142|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v152|DWORD[.] = MOVE v34|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE v147|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = MOVE v148|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE v145|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  278  <|@ instruction v37|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  280  <|@ instruction v38|DWORD = ADD (x: v37|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = MOVE v38|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction rdx|DWORD = MOVE v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|DWORD = MOVE v160|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = STACKMOVE v153|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|DWORD[.] = STACKMOVE (input: v152|DWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE v161|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ instruction v39|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v40|DWORD = MOV [v39|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr  292  <|@ instruction v41|DWORD = MOV [v39|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  294  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction CMP (x: v40|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v164|DWORD[.] = MOVE v158|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction TEST (x: v34|DWORD[.], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction v43|DWORD = MOV [v34|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  310  <|@ instruction v45|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  312  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v41|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  314  <|@ instruction v46|QWORD = MOV [v44|QWORD + 232] size: QWORD <|@ <|@
      nr  316  <|@ instruction v47|DWORD = MOV [v46|QWORD + 16] size: DWORD <|@ <|@
      nr  318  <|@ instruction v49|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  320  <|@ instruction v48|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v49|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  322  <|@ instruction v50|QWORD = MOVSXD v47|DWORD size: QWORD <|@ <|@
      nr  324  <|@ instruction CMP (x: v46|QWORD, y: [v48|QWORD + v50|QWORD * 1]) size: QWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction CMP v47|DWORD y: 32 size: DWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: v46|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction v51|QWORD = MOV [v48|QWORD + 40] size: QWORD <|@ <|@
      nr  344  <|@ instruction v52|DWORD = MOV [v51|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  356  <|@ instruction v54|DWORD = SHL v53|DWORD y: 3 size: DWORD <|@ <|@
      nr  358  <|@ instruction v55|DWORD = LEA [v54|DWORD + 8] size: DWORD <|@ <|@
      nr  360  <|@ instruction v56|QWORD = MOVSXD v55|DWORD size: QWORD <|@ <|@
      nr  362  <|@ instruction v57|QWORD = MOV [v51|QWORD + v56|QWORD * 1] size: QWORD <|@ <|@
      nr  364  <|@ instruction CMP (x: v46|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction v77|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B57" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr  348  <|@ instruction [v53|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  350  <|@ instruction CMP (x: v52|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE v147|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = MOVE v148|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE v145|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction v79|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  378  <|@ instruction TEST (x: v79|DWORD[.], y: v79|DWORD[.]) size: DWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  384  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = STACKMOVE v166|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD[.] = STACKMOVE v167|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr  392  <|@ instruction v81|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction v82|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  396  <|@ instruction TEST (x: v82|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426301
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = MOVE v168|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction v89|DWORD[.] = COMPRESSPOINTER (input: v81|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  598  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr  600  <|@ instruction v90|QWORD[*] = XOR (x: v0|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  602  <|@ instruction TEST v90|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  604  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction v121|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  616  <|@ instruction v91|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  618  <|@ instruction v92|DWORD = MOVSXB [v91|QWORD[*] + v121|QWORD * 1] size: DWORD <|@ <|@
      nr  620  <|@ instruction CMP v92|DWORD y: 32 size: DWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v172|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B32" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  458  <|@ instruction v59|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  460  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[.] = MOVE v169|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction MOV (x: [v58|QWORD[.] + v42|DWORD * 4 + 16], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr  532  <|@ instruction v66|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  534  <|@ instruction v67|QWORD[*] = XOR (x: v66|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction TEST v67|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  538  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v159|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction TEST (x: v35|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr  544  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction v122|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  550  <|@ instruction v69|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  552  <|@ instruction v68|QWORD[*] = SHR v69|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  554  <|@ instruction v70|DWORD = MOVSXB [v68|QWORD[*] + v122|QWORD * 1] size: DWORD <|@ <|@
      nr  556  <|@ instruction CMP v70|DWORD y: 32 size: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v171|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction v76|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr  710  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE v173|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581910371599640205
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v171|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction v60|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction v61|DWORD[.] = MOV [v60|QWORD[.]] size: DWORD <|@ <|@
      nr  474  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction TEST (x: v62|QWORD[.], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction TEST (x: v63|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction v64|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  492  <|@ instruction MOV (x: [v63|QWORD + v64|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr  494  <|@ instruction v65|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr  496  <|@ instruction MOV (x: [r15|QWORD + 56], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[.] = MOVE v169|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v172|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  630  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[.] = MOVE v168|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction v83|QWORD[.] = LEA [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction v84|DWORD[.] = MOV [v83|QWORD[.]] size: DWORD <|@ <|@
      nr  422  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction TEST (x: v85|QWORD[.], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction v86|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  432  <|@ instruction TEST (x: v86|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  440  <|@ instruction MOV (x: [v86|QWORD + v87|QWORD * 1 - 8], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr  442  <|@ instruction v88|QWORD = LEA [v86|QWORD - 8] size: QWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 56], y: v88|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v171|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v172|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  576  <|@ instruction v71|DWORD = MOVSXB [v68|QWORD[*] + v122|QWORD * 1] size: DWORD <|@ <|@
      nr  578  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577486745296679515
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v171|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  640  <|@ instruction v93|DWORD = MOVSXB [v91|QWORD[*] + v121|QWORD * 1] size: DWORD <|@ <|@
      nr  642  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v172|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction MOV (x: [v48|QWORD + 32], y: v46|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE v147|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = MOVE v148|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[.] = MOVE v145|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v169|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr  508  <|@ instruction v98|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE v171|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v171|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564592752682893746
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[.] = MOVE v169|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564271162101631196
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[.] = MOVE v169|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[.] = MOVE v169|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = MOVE v171|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v171|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction MOVB [v68|QWORD[*] + v122|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  654  <|@ instruction v72|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  656  <|@ instruction v73|QWORD[*] = ADD (x: v68|QWORD[*], y: v122|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ instruction TEST (x: v72|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction v74|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [v72|QWORD + v74|QWORD * 1 - 8], y: v73|QWORD[*]) size: QWORD <|@ <|@
      nr  668  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 112], y: v75|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v172|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  676  <|@ instruction MOVB [v91|QWORD[*] + v121|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  678  <|@ instruction v94|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  680  <|@ instruction v95|QWORD[*] = ADD (x: v91|QWORD[*], y: v121|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction TEST (x: v94|QWORD, y: v94|QWORD) size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction v96|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  690  <|@ instruction MOV (x: [v94|QWORD + v96|QWORD * 1 - 8], y: v95|QWORD[*]) size: QWORD <|@ <|@
      nr  692  <|@ instruction v97|QWORD = LEA [v94|QWORD - 8] size: QWORD <|@ <|@
      nr  694  <|@ instruction MOV (x: [r15|QWORD + 112], y: v97|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE v173|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction rsi|QWORD = MOVE v73|QWORD[*] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  728  <|@ instruction rsi|QWORD = MOVE v95|QWORD[*] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE v173|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction JUMP ~[] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v145|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  736  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction v106|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr   76  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOVE v107|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD[.] = MOVE v106|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = STACKMOVE v129|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|DWORD[.] = STACKMOVE (input: v125|DWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = STACKMOVE v126|QWORD size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr   84  <|@ instruction v108|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [v108|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr   88  <|@ instruction v109|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr   90  <|@ instruction v110|QWORD = LEA [v109|QWORD + 16] size: QWORD <|@ <|@
      nr   92  <|@ instruction CMP (x: v110|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = MOVE v127|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 280], y: v110|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~[v109|QWORD + 208] instr: 3 <|@ <|@
      nr  102  <|@ instruction v112|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [v109|QWORD], y: v112|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction MOV [v109|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  108  <|@ instruction MOV [v109|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  110  <|@ instruction v113|QWORD[.] = MOVE v109|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE v113|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|DWORD[.] = MOVE v128|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  114  <|@ instruction [v114|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [v114|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction rdx|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] v114|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr  124  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction MOV (x: [v14|QWORD + 32], y: v16|QWORD) size: QWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction MOV (x: [v3|QWORD + 32], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = MOVE v130|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v132|DWORD[.] = MOVE v106|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  742  <|@ instruction v115|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  744  <|@ instruction v116|QWORD = LEA [v115|QWORD + 16] size: QWORD <|@ <|@
      nr  746  <|@ instruction CMP (x: v116|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 280], y: v116|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~[v115|QWORD + 208] instr: 3 <|@ <|@
      nr  756  <|@ instruction v118|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [v115|QWORD], y: v118|QWORD) size: QWORD <|@ <|@
      nr  760  <|@ instruction MOV [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  762  <|@ instruction MOV [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  764  <|@ instruction v119|QWORD[.] = MOVE v115|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[.] = MOVE v173|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  768  <|@ instruction [v120|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  770  <|@ instruction MOV (x: [v120|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = STACKMOVE v174|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = STACKMOVE v175|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  776  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 4587195615000912736
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v159|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  784  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[-56107|0xffffffffffff24d5] // MoveResolver resolve mapping <|@ <|@
      nr  796  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  798  <|@ instruction [v78|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v78|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580682074240651296
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v159|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = MOVE v127|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|DWORD[.] = MOVE v128|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  808  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr  812  <|@ instruction v111|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = MOVE v173|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  822  <|@ instruction v117|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE v117|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v159|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[-51995|0xffffffffffff34e5] // MoveResolver resolve mapping <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = MOVE v133|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  836  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v177|QWORD[.] = MOVE v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  860  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr  862  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v147|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOVE input: int[-30771|0xffffffffffff87cd] // MoveResolver resolve mapping <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  850  <|@ instruction [v103|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  852  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v103|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  856  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOVE input: int[-46643|0xffffffffffff49cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  832  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOVE input: int[-57611|0xffffffffffff1ef5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v4|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   14  <|@ instruction v3|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v4|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   16  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   18  <|@ instruction CMP (x: v5|QWORD, y: [v3|QWORD + 32]) size: QWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction v6|QWORD = MOV [v3|QWORD + 40] size: QWORD <|@ <|@
      nr   32  <|@ instruction v7|DWORD = MOV [v6|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   44  <|@ instruction v9|DWORD = SHL v8|DWORD y: 3 size: DWORD <|@ <|@
      nr   46  <|@ instruction v10|DWORD = LEA [v9|DWORD + 8] size: DWORD <|@ <|@
      nr   48  <|@ instruction v11|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction v12|QWORD = MOV [v6|QWORD + v11|QWORD * 1] size: QWORD <|@ <|@
      nr   52  <|@ instruction CMP (x: v5|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction v105|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   38  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  138  <|@ instruction v15|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  140  <|@ instruction v14|QWORD = UNCOMPRESSPOINTER (input: v13|DWORD, ~baseRegister: v15|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  142  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr  144  <|@ instruction CMP (x: v16|QWORD, y: [v14|QWORD + 32]) size: QWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction v17|QWORD = MOV [v14|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction v18|DWORD = MOV [v17|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  170  <|@ instruction v20|DWORD = SHL v19|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction v21|DWORD = LEA [v20|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction v22|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr  176  <|@ instruction v23|QWORD = MOV [v17|QWORD + v22|QWORD * 1] size: QWORD <|@ <|@
      nr  178  <|@ instruction CMP (x: v16|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction v104|DWORD = INC v19|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  164  <|@ instruction CMP (x: v18|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction v24|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  206  <|@ instruction v26|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  208  <|@ instruction v25|QWORD = UNCOMPRESSPOINTER (input: v24|DWORD, ~baseRegister: v26|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD = MOVE r10|QWORD moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  224  <|@ instruction v32|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr  226  <|@ instruction CMP (x: v32|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607018771416986051
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction CMP v29|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = MOVE v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOVE v143|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction v34|DWORD[.] = MOV [v28|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  260  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v25|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr  272  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v145|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  716  <|@ instruction v100|DWORD[.] = MOV [v28|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v100|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: v99|QWORD[.] 
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT v101|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr  722  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  214  <|@ instruction v29|DWORD = MOV [v28|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  216  <|@ instruction v31|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  218  <|@ instruction v30|QWORD = UNCOMPRESSPOINTER (input: v29|DWORD, ~baseRegister: v31|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  220  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v30|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = MOVE v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = STACKMOVE (input: v141|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr  240  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE v142|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v152|DWORD[.] = MOVE v34|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE v145|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  278  <|@ instruction v37|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  280  <|@ instruction v38|DWORD = ADD (x: v37|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = MOVE v38|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction rdx|DWORD = MOVE v38|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|DWORD = MOVE v160|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = STACKMOVE v153|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|DWORD[.] = STACKMOVE (input: v152|DWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE v161|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ instruction v39|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v40|DWORD = MOV [v39|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr  292  <|@ instruction v41|DWORD = MOV [v39|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  294  <|@ instruction v42|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction CMP (x: v40|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v164|DWORD[.] = MOVE v158|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction TEST (x: v34|DWORD[.], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction v43|DWORD = MOV [v34|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  310  <|@ instruction v45|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  312  <|@ instruction v44|QWORD = UNCOMPRESSPOINTER (input: v41|DWORD, ~baseRegister: v45|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  314  <|@ instruction v46|QWORD = MOV [v44|QWORD + 232] size: QWORD <|@ <|@
      nr  316  <|@ instruction v47|DWORD = MOV [v46|QWORD + 16] size: DWORD <|@ <|@
      nr  318  <|@ instruction v49|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  320  <|@ instruction v48|QWORD = UNCOMPRESSPOINTER (input: v43|DWORD, ~baseRegister: v49|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  322  <|@ instruction v50|QWORD = MOVSXD v47|DWORD size: QWORD <|@ <|@
      nr  324  <|@ instruction CMP (x: v46|QWORD, y: [v48|QWORD + v50|QWORD * 1]) size: QWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction CMP v47|DWORD y: 32 size: DWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: v46|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction v51|QWORD = MOV [v48|QWORD + 40] size: QWORD <|@ <|@
      nr  344  <|@ instruction v52|DWORD = MOV [v51|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  356  <|@ instruction v54|DWORD = SHL v53|DWORD y: 3 size: DWORD <|@ <|@
      nr  358  <|@ instruction v55|DWORD = LEA [v54|DWORD + 8] size: DWORD <|@ <|@
      nr  360  <|@ instruction v56|QWORD = MOVSXD v55|DWORD size: QWORD <|@ <|@
      nr  362  <|@ instruction v57|QWORD = MOV [v51|QWORD + v56|QWORD * 1] size: QWORD <|@ <|@
      nr  364  <|@ instruction CMP (x: v46|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction v77|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B57" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  350  <|@ instruction CMP (x: v52|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE v145|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction v79|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  378  <|@ instruction TEST (x: v79|DWORD[.], y: v79|DWORD[.]) size: DWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  384  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr  392  <|@ instruction v81|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction v82|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  396  <|@ instruction TEST (x: v82|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426301
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = MOVE v168|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction v89|DWORD[.] = COMPRESSPOINTER (input: v81|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  598  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr  600  <|@ instruction v90|QWORD[*] = XOR (x: v0|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  602  <|@ instruction TEST v90|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  604  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction v121|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  616  <|@ instruction v91|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  618  <|@ instruction v92|DWORD = MOVSXB [v91|QWORD[*] + v121|QWORD * 1] size: DWORD <|@ <|@
      nr  620  <|@ instruction CMP v92|DWORD y: 32 size: DWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v172|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B32" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  458  <|@ instruction v59|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  460  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction MOV (x: [v58|QWORD[.] + v42|DWORD * 4 + 16], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr  532  <|@ instruction v66|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  534  <|@ instruction v67|QWORD[*] = XOR (x: v66|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction TEST v67|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  538  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v159|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction TEST (x: v35|QWORD[.], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr  544  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction v122|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  550  <|@ instruction v69|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  552  <|@ instruction v68|QWORD[*] = SHR v69|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  554  <|@ instruction v70|DWORD = MOVSXB [v68|QWORD[*] + v122|QWORD * 1] size: DWORD <|@ <|@
      nr  556  <|@ instruction CMP v70|DWORD y: 32 size: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v171|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction v76|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr  710  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE v173|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581910371599640205
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v171|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction v60|QWORD[.] = LEA [v58|QWORD[.] + v42|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction v61|DWORD[.] = MOV [v60|QWORD[.]] size: DWORD <|@ <|@
      nr  474  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction TEST (x: v62|QWORD[.], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction v63|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction TEST (x: v63|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction v64|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  492  <|@ instruction MOV (x: [v63|QWORD + v64|QWORD * 1 - 8], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr  494  <|@ instruction v65|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr  496  <|@ instruction MOV (x: [r15|QWORD + 56], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v172|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  630  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[.] = MOVE v168|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction v83|QWORD[.] = LEA [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction v84|DWORD[.] = MOV [v83|QWORD[.]] size: DWORD <|@ <|@
      nr  422  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction TEST (x: v85|QWORD[.], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction v86|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  432  <|@ instruction TEST (x: v86|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction v87|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  440  <|@ instruction MOV (x: [v86|QWORD + v87|QWORD * 1 - 8], y: v85|QWORD[.]) size: QWORD <|@ <|@
      nr  442  <|@ instruction v88|QWORD = LEA [v86|QWORD - 8] size: QWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 56], y: v88|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v171|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v172|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  576  <|@ instruction v71|DWORD = MOVSXB [v68|QWORD[*] + v122|QWORD * 1] size: DWORD <|@ <|@
      nr  578  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577486745296679515
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v171|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  640  <|@ instruction v93|DWORD = MOVSXB [v91|QWORD[*] + v121|QWORD * 1] size: DWORD <|@ <|@
      nr  642  <|@ instruction TEST (x: v93|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v172|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction MOV (x: [v48|QWORD + 32], y: v46|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[.] = MOVE v145|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v169|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr  508  <|@ instruction v98|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE v171|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v171|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564592752682893746
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564271162101631196
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = MOVE v171|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v171|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction MOVB [v68|QWORD[*] + v122|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  654  <|@ instruction v72|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  656  <|@ instruction v73|QWORD[*] = ADD (x: v68|QWORD[*], y: v122|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ instruction TEST (x: v72|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction v74|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [v72|QWORD + v74|QWORD * 1 - 8], y: v73|QWORD[*]) size: QWORD <|@ <|@
      nr  668  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 112], y: v75|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v172|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  676  <|@ instruction MOVB [v91|QWORD[*] + v121|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  678  <|@ instruction v94|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  680  <|@ instruction v95|QWORD[*] = ADD (x: v91|QWORD[*], y: v121|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction TEST (x: v94|QWORD, y: v94|QWORD) size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction v96|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  690  <|@ instruction MOV (x: [v94|QWORD + v96|QWORD * 1 - 8], y: v95|QWORD[*]) size: QWORD <|@ <|@
      nr  692  <|@ instruction v97|QWORD = LEA [v94|QWORD - 8] size: QWORD <|@ <|@
      nr  694  <|@ instruction MOV (x: [r15|QWORD + 112], y: v97|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE v173|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction rsi|QWORD = MOVE v73|QWORD[*] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  728  <|@ instruction rsi|QWORD = MOVE v95|QWORD[*] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE v173|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction JUMP ~[] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v145|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  736  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction v106|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction v107|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr   76  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v3|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOVE v107|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|DWORD[.] = MOVE v106|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v128|DWORD[.] = STACKMOVE (input: v125|DWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = STACKMOVE v126|QWORD size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr   84  <|@ instruction v108|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [v108|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr   88  <|@ instruction v109|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr   90  <|@ instruction v110|QWORD = LEA [v109|QWORD + 16] size: QWORD <|@ <|@
      nr   92  <|@ instruction CMP (x: v110|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = MOVE v127|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 280], y: v110|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~[v109|QWORD + 208] instr: 3 <|@ <|@
      nr  102  <|@ instruction v112|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [v109|QWORD], y: v112|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction MOV [v109|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  108  <|@ instruction MOV [v109|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  110  <|@ instruction v113|QWORD[.] = MOVE v109|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE v113|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|DWORD[.] = MOVE v128|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [v114|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction rdx|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v114|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] v114|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr  124  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction MOV (x: [v14|QWORD + 32], y: v16|QWORD) size: QWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  130  <|@ instruction MOV (x: [v3|QWORD + 32], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = MOVE v130|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v132|DWORD[.] = MOVE v106|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  742  <|@ instruction v115|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  744  <|@ instruction v116|QWORD = LEA [v115|QWORD + 16] size: QWORD <|@ <|@
      nr  746  <|@ instruction CMP (x: v116|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 280], y: v116|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~[v115|QWORD + 208] instr: 3 <|@ <|@
      nr  756  <|@ instruction v118|QWORD = MOV [v107|QWORD + 184] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [v115|QWORD], y: v118|QWORD) size: QWORD <|@ <|@
      nr  760  <|@ instruction MOV [v115|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  762  <|@ instruction MOV [v115|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  764  <|@ instruction v119|QWORD[.] = MOVE v115|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  770  <|@ instruction MOV (x: [v120|QWORD[.] + 12], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  772  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE v120|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  776  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 4587195615000912736
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v159|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  784  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[-56107|0xffffffffffff24d5] // MoveResolver resolve mapping <|@ <|@
      nr  796  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v78|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: v0|QWORD[.] v38|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: v0|QWORD[.] v35|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580682074240651296
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v159|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = MOVE v127|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|DWORD[.] = MOVE v128|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  808  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: v108|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: v1|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: v0|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=v0|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr  812  <|@ instruction v111|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = MOVE v107|QWORD moveKind: QWORD <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  822  <|@ instruction v117|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE v117|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v159|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[-51995|0xffffffffffff34e5] // MoveResolver resolve mapping <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  836  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v177|QWORD[.] = MOVE v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  860  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr  862  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v147|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOVE input: int[-30771|0xffffffffffff87cd] // MoveResolver resolve mapping <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  852  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v103|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  856  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: v28|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: v0|QWORD[.] v28|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOVE input: int[-46643|0xffffffffffff49cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  832  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOVE input: int[-57611|0xffffffffffff1ef5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   14  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   16  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   18  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr   32  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   44  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   46  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr   48  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr   52  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   38  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  138  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  140  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  142  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr  144  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  176  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr  178  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  164  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  206  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  208  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD = MOVE r10|QWORD moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  224  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr  226  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607018771416986051
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE vstack:8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  260  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r11|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: vstack:2|QWORD[.] vstack:7|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  716  <|@ instruction r10|DWORD[.] = MOV [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr  722  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  214  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  216  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  218  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  220  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rcx|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: vstack:7|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: vstack:2|QWORD[.] vstack:7|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr  242  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  278  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  280  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: vstack:2|QWORD[.] vstack:11|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: vstack:2|QWORD[.] vstack:10|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: vstack:2|QWORD[.] vstack:7|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: rsi|QWORD[.] vstack:11|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: rsi|QWORD[.] vstack:10|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: rsi|QWORD[.] vstack:7|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr  292  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  294  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r13|DWORD[.] = MOVE vstack:9|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction rdx|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  310  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  312  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  314  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  316  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  318  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  322  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  324  <|@ instruction CMP (x: r11|QWORD, y: [rdx|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction r8|QWORD = MOV [rdx|QWORD + 40] size: QWORD <|@ <|@
      nr  344  <|@ instruction r9|DWORD = MOV [r8|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  356  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  358  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = MOV [r8|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  364  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B57" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  350  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  378  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: vstack:2|QWORD[.] 
locals: vstack:2|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: vstack:2|QWORD[.] vstack:7|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr  392  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction rsi|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  396  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426301
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  598  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  600  <|@ instruction r10|QWORD[*] = XOR (x: rsi|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  602  <|@ instruction TEST r10|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  604  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction r10|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  616  <|@ instruction r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  618  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  620  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B32" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  460  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction MOV (x: [r14|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  532  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.], y: vstack:10|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction TEST rsi|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  538  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction TEST (x: r9|QWORD[.], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  544  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction r13|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  552  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  554  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  556  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  710  <|@ instruction MOV (x: [r14|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581910371599640205
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  474  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  492  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  494  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  496  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  630  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction rdx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  432  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  440  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  576  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  578  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577486745296679515
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  640  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  642  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction MOV (x: [rdx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: vstack:2|QWORD[.] vstack:10|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: vstack:2|QWORD[.] vstack:10|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: vstack:2|QWORD[.] vstack:10|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: vstack:2|QWORD[.] vstack:7|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564592752682893746
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564271162101631196
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction MOVB [rsi|QWORD[*] + r13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  654  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  656  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction r11|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  668  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  676  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  678  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  680  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction r10|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  690  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  694  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  728  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction JUMP ~[] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  736  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr   76  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD = MOVE r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: vstack:3|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: vstack:2|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr   84  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: vstack:3|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: vstack:2|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; vstack:2|QWORD[.] 
>@ <|@ instruction NULLCHECK [rbx|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr   90  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   92  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE vstack:0|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr  102  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  108  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[.] = MOVE vstack:1|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: vstack:3|QWORD[.] vstack:4|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr  124  <|@ instruction rax|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  742  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  744  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  746  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr  756  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  760  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  762  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  770  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  772  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 4587195615000912736
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  784  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[-56107|0xffffffffffff24d5] // MoveResolver resolve mapping <|@ <|@
      nr  796  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: vstack:2|QWORD[.] vstack:11|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: vstack:2|QWORD[.] r9|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: vstack:2|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580682074240651296
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE vstack:0|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[.] = MOVE vstack:1|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  808  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: vstack:3|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: vstack:2|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: vstack:2|QWORD[.] vstack:3|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[-51995|0xffffffffffff34e5] // MoveResolver resolve mapping <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  836  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: vstack:2|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  860  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr  862  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: rsi|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30771|0xffffffffffff87cd] // MoveResolver resolve mapping <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  852  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  856  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: rbx|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: vstack:2|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-46643|0xffffffffffff49cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  832  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-57611|0xffffffffffff1ef5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   14  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   16  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   18  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr   32  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   44  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   46  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr   48  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr   52  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   38  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  138  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  140  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  142  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr  144  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  172  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  176  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr  178  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  164  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  206  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  208  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD = MOVE r10|QWORD moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  224  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr  226  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607018771416986051
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE vstack:8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  260  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r11|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: vstack:2|QWORD[.] vstack:7|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  716  <|@ instruction r10|DWORD[.] = MOV [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr  722  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  214  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  216  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  218  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  220  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rcx|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: vstack:7|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: vstack:2|QWORD[.] vstack:7|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr  242  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  278  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  280  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: vstack:2|QWORD[.] vstack:11|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: vstack:2|QWORD[.] vstack:10|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: vstack:2|QWORD[.] vstack:7|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: rsi|QWORD[.] vstack:11|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: rsi|QWORD[.] vstack:10|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: rsi|QWORD[.] vstack:7|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr  292  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  294  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r13|DWORD[.] = MOVE vstack:9|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction rdx|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  310  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  312  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  314  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  316  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  318  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  320  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  322  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  324  <|@ instruction CMP (x: r11|QWORD, y: [rdx|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction r8|QWORD = MOV [rdx|QWORD + 40] size: QWORD <|@ <|@
      nr  344  <|@ instruction r9|DWORD = MOV [r8|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  356  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  358  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = MOV [r8|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  364  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B57" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  350  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  378  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: vstack:2|QWORD[.] 
locals: vstack:2|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: vstack:2|QWORD[.] vstack:7|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr  392  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction rsi|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  396  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426301
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  598  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  600  <|@ instruction r10|QWORD[*] = XOR (x: rsi|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  602  <|@ instruction TEST r10|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  604  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction r10|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  616  <|@ instruction r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  618  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  620  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B32" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  460  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction MOV (x: [r14|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  532  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.], y: vstack:10|QWORD[.]) size: QWORD <|@ <|@
      nr  536  <|@ instruction TEST rsi|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  538  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction TEST (x: r9|QWORD[.], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  544  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction r13|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  552  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  554  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  556  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  710  <|@ instruction MOV (x: [r14|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581910371599640205
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  474  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  484  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  492  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  494  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  496  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  630  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction rdx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  432  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  440  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  576  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  578  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577486745296679515
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  640  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  642  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction MOV (x: [rdx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: vstack:2|QWORD[.] vstack:10|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: vstack:2|QWORD[.] vstack:10|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: vstack:2|QWORD[.] vstack:10|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: vstack:2|QWORD[.] vstack:7|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564592752682893746
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564271162101631196
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction MOVB [rsi|QWORD[*] + r13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  654  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  656  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction r11|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  668  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  676  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  678  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  680  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction r10|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  690  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  694  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  728  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction JUMP ~[] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  736  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr   76  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD = MOVE r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: vstack:3|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: vstack:2|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr   84  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: vstack:3|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: vstack:2|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; vstack:2|QWORD[.] 
>@ <|@ instruction NULLCHECK [rbx|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr   90  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr   92  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE vstack:0|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr  102  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  108  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[.] = MOVE vstack:1|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: vstack:3|QWORD[.] vstack:4|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr  124  <|@ instruction rax|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  742  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  744  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  746  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  754  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr  756  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  760  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  762  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  770  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  772  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 4587195615000912736
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  784  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[-56107|0xffffffffffff24d5] // MoveResolver resolve mapping <|@ <|@
      nr  796  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  800  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: vstack:2|QWORD[.] vstack:11|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: vstack:2|QWORD[.] r9|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: vstack:2|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580682074240651296
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE vstack:0|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD[.] = MOVE vstack:1|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  808  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: vstack:3|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: vstack:2|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  820  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: vstack:2|QWORD[.] vstack:3|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[-51995|0xffffffffffff34e5] // MoveResolver resolve mapping <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  836  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: vstack:2|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  860  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr  862  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: rsi|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30771|0xffffffffffff87cd] // MoveResolver resolve mapping <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  852  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  856  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: rbx|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: vstack:2|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-46643|0xffffffffffff49cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  832  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-57611|0xffffffffffff1ef5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction vstack:2|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   12  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   16  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr   42  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   58  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr   60  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction vstack:3|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   82  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   84  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   86  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr   88  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  110  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  126  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  130  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr  132  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  148  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  150  <|@ instruction vstack:8|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction r10|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  170  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr  172  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607018771416986051
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction r11|QWORD = MOVE vstack:8|QWORD moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  212  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r11|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: vstack:2|QWORD[.] vstack:7|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  812  <|@ instruction r10|DWORD[.] = MOV [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  814  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr  818  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  158  <|@ instruction vstack:7|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  162  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  166  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rcx|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction vstack:6|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: vstack:7|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: vstack:2|QWORD[.] vstack:7|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr  188  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r8|DWORD = MOVE vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction vstack:10|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction vstack:9|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  242  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  244  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction vstack:11|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: vstack:2|QWORD[.] vstack:11|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: vstack:2|QWORD[.] vstack:10|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: vstack:2|QWORD[.] vstack:7|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  260  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: rsi|QWORD[.] vstack:11|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: rsi|QWORD[.] vstack:10|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: rsi|QWORD[.] vstack:7|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  264  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r13|DWORD[.] = MOVE vstack:9|DWORD[.] moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rdx|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  288  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  290  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  292  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  296  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  298  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  300  <|@ instruction CMP (x: r11|QWORD, y: [rdx|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOV [rdx|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOV [r8|QWORD] size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  342  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction rdi|QWORD = MOV [r8|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  350  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B57" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction vstack:10|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  606  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: vstack:2|QWORD[.] 
locals: vstack:2|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: vstack:2|QWORD[.] vstack:7|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr  612  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  616  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426301
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  680  <|@ instruction r10|QWORD[*] = XOR (x: rsi|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  682  <|@ instruction TEST r10|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  698  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction r10|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  712  <|@ instruction r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  716  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B32" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  364  <|@ instruction rdx|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  366  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOV (x: [r14|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.], y: vstack:10|QWORD[.]) size: QWORD <|@ <|@
      nr  426  <|@ instruction TEST rsi|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction TEST (x: r9|QWORD[.], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  524  <|@ instruction MOV (x: [r14|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581910371599640205
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  380  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  394  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  632  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  648  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  476  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577486745296679515
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  732  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  734  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction MOV (x: [rdx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction vstack:10|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rdx|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: vstack:2|QWORD[.] vstack:10|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: vstack:2|QWORD[.] vstack:10|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: vstack:2|QWORD[.] vstack:10|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: vstack:2|QWORD[.] vstack:7|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564592752682893746
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564271162101631196
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction MOVB [rsi|QWORD[*] + r13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  492  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  754  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction r10|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  778  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  768  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction r14|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction vstack:3|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  892  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr  894  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction vstack:0|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction vstack:1|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction vstack:3|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: vstack:3|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: vstack:2|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr  908  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: vstack:3|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: vstack:2|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; vstack:2|QWORD[.] 
>@ <|@ instruction NULLCHECK [rbx|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  916  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  918  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction r11|QWORD = MOVE vstack:0|QWORD moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr  944  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  946  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  948  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rbp|DWORD[.] = MOVE vstack:1|DWORD[.] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  960  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  962  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction vstack:4|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: vstack:3|QWORD[.] vstack:4|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr  970  <|@ instruction rax|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction vstack:3|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction rbp|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction vstack:3|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  984  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  986  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  988  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1004  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr 1006  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr 1008  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1010  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr 1012  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr 1028  <|@ instruction rax|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 4587195615000912736
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction rsi|DWORD = MOVE input: int[-56107|0xffffffffffff24d5] <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  576  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  580  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: vstack:2|QWORD[.] vstack:11|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: vstack:2|QWORD[.] r9|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: vstack:2|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580682074240651296
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  922  <|@ instruction r11|QWORD = MOVE vstack:0|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction rbp|DWORD[.] = MOVE vstack:1|DWORD[.] moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  928  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: vstack:3|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: vstack:2|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=vstack:2|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: vstack:2|QWORD[.] vstack:3|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  996  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction r9|QWORD[.] = MOVE vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD = MOVE input: int[-51995|0xffffffffffff34e5] <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: vstack:2|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr  862  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: rsi|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-30771|0xffffffffffff87cd] <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  840  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: rbx|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: vstack:2|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: vstack:2|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: int[-46643|0xffffffffffff49cd] <|@ <|@
      nr  834  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction r10|DWORD = MOVE input: int[-57611|0xffffffffffff1ef5] <|@ <|@
      nr  598  <|@ instruction rbx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [898, 936[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [900, 954[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [6, 1028[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [22, 1024[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [966, 968[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[vstack:6|d]" vstack:6|d -1 [182, 194[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[vstack:7|q]" vstack:7|q -1 [158, 834[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[vstack:8|q]" vstack:8|q -1 [150, 821[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[vstack:9|d]" vstack:9|d -1 [236, 272[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[vstack:10|q]" vstack:10|q -1 [234, 800[ "NOT_SUPPORTED"
  vstack:11|d DWORD "[vstack:11|d]" vstack:11|d -1 [252, 580[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:56|q]" vstack:0|q -1 [898, 936[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:76|d]" vstack:1|d -1 [900, 954[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:32|q]" vstack:2|q -1 [6, 1028[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:40|q]" vstack:3|q -1 [22, 1024[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:56|q]" vstack:4|q -1 [966, 968[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[stack:60|d]" vstack:6|d -1 [182, 194[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[stack:56|q]" vstack:7|q -1 [158, 834[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[stack:48|q]" vstack:8|q -1 [150, 821[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[stack:60|d]" vstack:9|d -1 [236, 272[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[stack:72|q]" vstack:10|q -1 [234, 800[ "NOT_SUPPORTED"
  vstack:11|d DWORD "[stack:76|d]" vstack:11|d -1 [252, 580[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   12  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   16  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr   42  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   58  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr   60  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   82  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   84  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   86  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr   88  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  110  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  126  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  130  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr  132  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  148  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  150  <|@ instruction stack:48|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  170  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr  172  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607018771416986051
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction r11|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  212  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r11|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  812  <|@ instruction r10|DWORD[.] = MOV [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  814  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr  818  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  158  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  162  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  166  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rcx|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: stack:56|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr  188  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction stack:60|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  242  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  244  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: stack:32|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  260  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: rsi|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: rsi|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: rsi|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  264  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r13|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rdx|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  288  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  290  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  292  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  296  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  298  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  300  <|@ instruction CMP (x: r11|QWORD, y: [rdx|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOV [rdx|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOV [r8|QWORD] size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  342  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction rdi|QWORD = MOV [r8|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  350  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B57" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  606  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr  612  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  616  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426301
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  680  <|@ instruction r10|QWORD[*] = XOR (x: rsi|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  682  <|@ instruction TEST r10|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  698  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction r10|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  712  <|@ instruction r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  716  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B32" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  364  <|@ instruction rdx|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  366  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOV (x: [r14|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.], y: stack:72|QWORD[.]) size: QWORD <|@ <|@
      nr  426  <|@ instruction TEST rsi|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction TEST (x: r9|QWORD[.], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  524  <|@ instruction MOV (x: [r14|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581910371599640205
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  380  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  394  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  632  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  648  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  476  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577486745296679515
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  732  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  734  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction MOV (x: [rdx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564592752682893746
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564271162101631196
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction MOVB [rsi|QWORD[*] + r13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  492  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  754  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction r10|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  778  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  768  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  892  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr  894  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction stack:76|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr  908  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction NULLCHECK [rbx|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  916  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  918  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr  944  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  946  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  948  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  960  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  962  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr  970  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction rbp|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  984  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  986  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  988  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1004  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr 1006  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr 1008  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1010  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr 1012  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr 1028  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 4587195615000912736
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction rsi|DWORD = MOVE input: int[-56107|0xffffffffffff24d5] <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  576  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  580  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: stack:32|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: stack:32|QWORD[.] r9|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580682074240651296
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  922  <|@ instruction r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  928  <|@ st <@st|@live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  996  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD = MOVE input: int[-51995|0xffffffffffff34e5] <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr  862  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: rsi|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-30771|0xffffffffffff87cd] <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  840  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: rbx|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: stack:32|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: int[-46643|0xffffffffffff49cd] <|@ <|@
      nr  834  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction r10|DWORD = MOVE input: int[-57611|0xffffffffffff1ef5] <|@ <|@
      nr  598  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   12  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   16  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr   42  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   58  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr   60  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   82  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   84  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   86  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr   88  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  110  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  126  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  130  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr  132  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  148  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  150  <|@ instruction stack:48|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  170  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr  172  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607018771416986051
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction r11|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  212  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r11|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  812  <|@ instruction r10|DWORD[.] = MOV [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  814  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r14:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr  816  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r14:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr  818  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  158  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  162  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  166  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rcx|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: stack:56|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr  188  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction stack:60|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  242  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  244  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [stack:8, stack:20, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: stack:32|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  260  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:8, stack:20, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: rsi|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: rsi|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: rsi|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  264  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r13|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rdx|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  288  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  290  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  292  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  296  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  298  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  300  <|@ instruction CMP (x: r11|QWORD, y: [rdx|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOV [rdx|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOV [r8|QWORD] size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  342  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction rdi|QWORD = MOV [r8|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  350  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B57" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  606  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr  612  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  616  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426301
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  680  <|@ instruction r10|QWORD[*] = XOR (x: rsi|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  682  <|@ instruction TEST r10|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  698  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction r10|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  712  <|@ instruction r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  716  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B32" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  364  <|@ instruction rdx|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  366  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOV (x: [r14|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.], y: stack:72|QWORD[.]) size: QWORD <|@ <|@
      nr  426  <|@ instruction TEST rsi|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction TEST (x: r9|QWORD[.], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  524  <|@ instruction MOV (x: [r14|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581910371599640205
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  380  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  394  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  632  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  648  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  476  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577486745296679515
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  732  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  734  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction MOV (x: [rdx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564592752682893746
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564271162101631196
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction MOVB [rsi|QWORD[*] + r13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  492  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  754  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction r10|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  778  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  768  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  892  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr  894  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction stack:76|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@reference-map: [stack:4, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr  908  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ st <@st|@reference-map: [rbx:0, stack:4, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction NULLCHECK [rbx|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  916  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  918  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr  944  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  946  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  948  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  960  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  962  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ st <@st|@reference-map: [stack:24, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr  970  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction rbp|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  984  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  986  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  988  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1004  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr 1006  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr 1008  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1010  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr 1012  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr 1028  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 4587195615000912736
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction rsi|DWORD = MOVE input: int[-56107|0xffffffffffff24d5] <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  576  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  580  <|@ st <@st|@reference-map: [rbx:0, r9:0, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: stack:32|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: stack:32|QWORD[.] r9|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580682074240651296
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  922  <|@ instruction r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  928  <|@ st <@st|@reference-map: [rbx:0, rbp:0, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@reference-map: [rbp:0, stack:40, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  996  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD = MOVE input: int[-51995|0xffffffffffff34e5] <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@reference-map: [rdx:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr  862  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  864  <|@ st <@st|@reference-map: [rbx:0, rsi:0]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: rsi|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-30771|0xffffffffffff87cd] <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  840  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@reference-map: [rbx:0, stack:48]
live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: rbx|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: stack:32|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: int[-46643|0xffffffffffff49cd] <|@ <|@
      nr  834  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction r10|DWORD = MOVE input: int[-57611|0xffffffffffff1ef5] <|@ <|@
      nr  598  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   12  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   16  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr   42  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   58  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr   60  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   82  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   84  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   86  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr   88  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  110  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  126  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  130  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr  132  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  148  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  150  <|@ instruction stack:48|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  170  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr  172  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607018771416986051
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction r11|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  212  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r11|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  812  <|@ instruction r10|DWORD[.] = MOV [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  814  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r14:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr  816  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r14:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr  818  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  158  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  162  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  166  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rcx|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: stack:56|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr  188  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction stack:60|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  242  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  244  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [stack:8, stack:20, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: stack:32|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  260  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:8, stack:20, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: rsi|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: rsi|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: rsi|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  264  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r13|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rdx|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  288  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  290  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  292  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  296  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  298  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  300  <|@ instruction CMP (x: r11|QWORD, y: [rdx|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOV [rdx|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOV [r8|QWORD] size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  342  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction rdi|QWORD = MOV [r8|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  350  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B57" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  606  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr  612  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  616  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426301
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  680  <|@ instruction r10|QWORD[*] = XOR (x: rsi|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  682  <|@ instruction TEST r10|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  698  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction r10|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  712  <|@ instruction r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  716  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B32" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  364  <|@ instruction rdx|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  366  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOV (x: [r14|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.], y: stack:72|QWORD[.]) size: QWORD <|@ <|@
      nr  426  <|@ instruction TEST rsi|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction TEST (x: r9|QWORD[.], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  524  <|@ instruction MOV (x: [r14|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581910371599640205
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  380  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  394  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  632  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  648  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  476  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577486745296679515
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  732  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  734  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction MOV (x: [rdx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564592752682893746
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564271162101631196
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction MOVB [rsi|QWORD[*] + r13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  492  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  754  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction r10|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  778  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  768  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  892  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr  894  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction stack:76|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@reference-map: [stack:4, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr  908  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ st <@st|@reference-map: [rbx:0, stack:4, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction NULLCHECK [rbx|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  916  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  918  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr  944  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  946  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  948  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  960  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  962  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ st <@st|@reference-map: [stack:24, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr  970  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction rbp|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  984  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  986  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  988  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1004  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr 1006  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr 1008  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1010  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr 1012  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr 1028  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 4587195615000912736
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction rsi|DWORD = MOVE input: int[-56107|0xffffffffffff24d5] <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  576  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  580  <|@ st <@st|@reference-map: [rbx:0, r9:0, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: stack:32|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: stack:32|QWORD[.] r9|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580682074240651296
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  922  <|@ instruction r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  928  <|@ st <@st|@reference-map: [rbx:0, rbp:0, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@reference-map: [rbp:0, stack:40, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  996  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD = MOVE input: int[-51995|0xffffffffffff34e5] <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@reference-map: [rdx:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr  862  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  864  <|@ st <@st|@reference-map: [rbx:0, rsi:0]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: rsi|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-30771|0xffffffffffff87cd] <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  840  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@reference-map: [rbx:0, stack:48]
live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: rbx|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: stack:32|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: int[-46643|0xffffffffffff49cd] <|@ <|@
      nr  834  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction r10|DWORD = MOVE input: int[-57611|0xffffffffffff1ef5] <|@ <|@
      nr  598  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   12  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   16  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr   42  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   58  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr   60  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   82  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   84  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   86  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr   88  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  110  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  126  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  130  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr  132  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B9 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  148  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  150  <|@ instruction stack:48|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  170  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr  172  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607018771416986051
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction r11|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  212  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r11|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  812  <|@ instruction r10|DWORD[.] = MOV [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  814  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r14:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr  816  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r14:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr  818  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  158  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  162  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  166  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rcx|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: stack:56|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr  188  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction stack:60|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  242  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  244  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [stack:8, stack:20, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: stack:32|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  260  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:8, stack:20, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: rsi|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: rsi|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: rsi|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  264  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r13|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rdx|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  288  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  290  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  292  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  296  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  298  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  300  <|@ instruction CMP (x: r11|QWORD, y: [rdx|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B58" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOV [rdx|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOV [r8|QWORD] size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  342  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction rdi|QWORD = MOV [r8|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  350  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B57" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  606  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr  612  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  616  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426301
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  680  <|@ instruction r10|QWORD[*] = XOR (x: rsi|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  682  <|@ instruction TEST r10|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  698  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction r10|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  712  <|@ instruction r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  716  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B32" "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  364  <|@ instruction rdx|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  366  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOV (x: [r14|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.], y: stack:72|QWORD[.]) size: QWORD <|@ <|@
      nr  426  <|@ instruction TEST rsi|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction TEST (x: r9|QWORD[.], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  524  <|@ instruction MOV (x: [r14|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581910371599640205
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B27 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  380  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  394  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  632  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  648  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  476  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  482  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577486745296679515
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  732  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  734  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction MOV (x: [rdx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564592752682893746
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4564271162101631196
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction MOVB [rsi|QWORD[*] + r13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  492  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  754  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction r10|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  778  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  768  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B11 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  892  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr  894  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction stack:76|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@reference-map: [stack:4, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr  908  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ st <@st|@reference-map: [rbx:0, stack:4, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction NULLCHECK [rbx|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  916  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  922  <|@ instruction r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr  944  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  946  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  948  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  960  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  962  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ st <@st|@reference-map: [stack:24, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr  970  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction rbp|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  984  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  986  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  988  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1004  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr 1006  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr 1008  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1010  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr 1012  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr 1028  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B59" 
    xhandlers
    flags 
    probability 4587195615000912736
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction rsi|DWORD = MOVE input: int[-56107|0xffffffffffff24d5] <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  576  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  580  <|@ st <@st|@reference-map: [rbx:0, r9:0, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: stack:32|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: stack:32|QWORD[.] r9|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580682074240651296
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ instruction rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  928  <|@ st <@st|@reference-map: [rbx:0, rbp:0, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@reference-map: [rbp:0, stack:40, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  996  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD = MOVE input: int[-51995|0xffffffffffff34e5] <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@reference-map: [rdx:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr  862  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  864  <|@ st <@st|@reference-map: [rbx:0, rsi:0]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: rsi|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-30771|0xffffffffffff87cd] <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  840  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@reference-map: [rbx:0, stack:48]
live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: rbx|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: stack:32|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: int[-46643|0xffffffffffff49cd] <|@ <|@
      nr  834  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction r10|DWORD = MOVE input: int[-57611|0xffffffffffff1ef5] <|@ <|@
      nr  598  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   12  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   16  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr   42  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   58  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr   60  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B16" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   82  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   84  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   86  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr   88  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B16 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B16 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  110  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  126  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  130  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr  132  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  148  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  150  <|@ instruction stack:48|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  170  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr  172  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B18" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction r11|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  212  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r11|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  812  <|@ instruction r10|DWORD[.] = MOV [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  814  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r14:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr  816  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r14:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr  818  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  158  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  162  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  166  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rcx|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: stack:56|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr  188  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction stack:60|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  242  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  244  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [stack:8, stack:20, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: stack:32|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  260  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:8, stack:20, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: rsi|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: rsi|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: rsi|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  264  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B37" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r13|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rdx|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  288  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  290  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  292  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  296  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  298  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  300  <|@ instruction CMP (x: r11|QWORD, y: [rdx|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B59" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B37 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOV [rdx|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOV [r8|QWORD] size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  342  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction rdi|QWORD = MOV [r8|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  350  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B59" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  606  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr  612  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  616  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B72 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B65" "B67" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  680  <|@ instruction r10|QWORD[*] = XOR (x: rsi|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  682  <|@ instruction TEST r10|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  698  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction r10|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  712  <|@ instruction r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  716  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B36" 
    successors "B44" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  364  <|@ instruction rdx|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  366  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOV (x: [r14|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.], y: stack:72|QWORD[.]) size: QWORD <|@ <|@
      nr  426  <|@ instruction TEST rsi|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction TEST (x: r9|QWORD[.], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B50" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  524  <|@ instruction MOV (x: [r14|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  380  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  394  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  632  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B72 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  648  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  476  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  482  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  732  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  734  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction MOV (x: [rdx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction MOVB [rsi|QWORD[*] + r13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  492  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  754  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction r10|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  778  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  768  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  892  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr  894  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction stack:76|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@reference-map: [stack:4, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr  908  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ st <@st|@reference-map: [rbx:0, stack:4, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction NULLCHECK [rbx|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  916  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  922  <|@ instruction r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr  944  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  946  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  948  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  960  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  962  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ st <@st|@reference-map: [stack:24, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr  970  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction rbp|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  984  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  986  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  988  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1004  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr 1006  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr 1008  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1010  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr 1012  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr 1028  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B30" "B34" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction rsi|DWORD = MOVE input: int[-56107|0xffffffffffff24d5] <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  576  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  580  <|@ st <@st|@reference-map: [rbx:0, r9:0, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: stack:32|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: stack:32|QWORD[.] r9|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ instruction rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  928  <|@ st <@st|@reference-map: [rbx:0, rbp:0, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@reference-map: [rbp:0, stack:40, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  996  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD = MOVE input: int[-51995|0xffffffffffff34e5] <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@reference-map: [rdx:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr  862  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  864  <|@ st <@st|@reference-map: [rbx:0, rsi:0]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: rsi|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-30771|0xffffffffffff87cd] <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  840  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@reference-map: [rbx:0, stack:48]
live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: rbx|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: stack:32|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: int[-46643|0xffffffffffff49cd] <|@ <|@
      nr  834  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction r10|DWORD = MOVE input: int[-57611|0xffffffffffff1ef5] <|@ <|@
      nr  598  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   12  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   16  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr   42  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   58  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr   60  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B16" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   82  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   84  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   86  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr   88  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B16 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B16 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  110  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  126  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  130  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr  132  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  148  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  150  <|@ instruction stack:48|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  170  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr  172  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B18" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction r11|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  212  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r11|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  812  <|@ instruction r10|DWORD[.] = MOV [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  814  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r14:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr  816  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r14:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr  818  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  158  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  162  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  166  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rcx|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: stack:56|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr  188  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction stack:60|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  242  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  244  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [stack:8, stack:20, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: stack:32|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  260  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:8, stack:20, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: rsi|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: rsi|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: rsi|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  264  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B37" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r13|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rdx|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  288  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  290  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  292  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  296  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  298  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  300  <|@ instruction CMP (x: r11|QWORD, y: [rdx|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B59" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B37 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOV [rdx|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOV [r8|QWORD] size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  342  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction rdi|QWORD = MOV [r8|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  350  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B59" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  606  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr  612  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  616  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B72 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B65" "B67" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  680  <|@ instruction r10|QWORD[*] = XOR (x: rsi|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  682  <|@ instruction TEST r10|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  698  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction r10|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  712  <|@ instruction r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  716  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B36" 
    successors "B44" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  364  <|@ instruction rdx|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  366  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOV (x: [r14|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.], y: stack:72|QWORD[.]) size: QWORD <|@ <|@
      nr  426  <|@ instruction TEST rsi|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction TEST (x: r9|QWORD[.], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B50" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  524  <|@ instruction MOV (x: [r14|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  380  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  394  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  632  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B72 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  648  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  476  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  482  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  732  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  734  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction MOV (x: [rdx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction MOVB [rsi|QWORD[*] + r13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  492  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  754  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction r10|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  778  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  768  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  892  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr  894  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction stack:76|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@reference-map: [stack:4, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr  908  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ st <@st|@reference-map: [rbx:0, stack:4, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction NULLCHECK [rbx|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  916  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  922  <|@ instruction r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr  944  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  946  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  948  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  960  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  962  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ st <@st|@reference-map: [stack:24, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr  970  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction rbp|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  984  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  986  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  988  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1004  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr 1006  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr 1008  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1010  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr 1012  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr 1028  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B30" "B34" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction rsi|DWORD = MOVE input: int[-56107|0xffffffffffff24d5] <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  576  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  580  <|@ st <@st|@reference-map: [rbx:0, r9:0, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: stack:32|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: stack:32|QWORD[.] r9|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ instruction rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  928  <|@ st <@st|@reference-map: [rbx:0, rbp:0, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@reference-map: [rbp:0, stack:40, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  996  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD = MOVE input: int[-51995|0xffffffffffff34e5] <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@reference-map: [rdx:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr  862  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  864  <|@ st <@st|@reference-map: [rbx:0, rsi:0]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: rsi|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-30771|0xffffffffffff87cd] <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  840  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@reference-map: [rbx:0, stack:48]
live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: rbx|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: stack:32|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: int[-46643|0xffffffffffff49cd] <|@ <|@
      nr  834  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction r10|DWORD = MOVE input: int[-57611|0xffffffffffff1ef5] <|@ <|@
      nr  598  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   12  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   16  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr   42  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   58  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr   60  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B16" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   82  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   84  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   86  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr   88  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B16 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B16 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  110  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  126  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  130  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr  132  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  148  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  150  <|@ instruction stack:48|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  170  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr  172  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B18" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction r11|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  212  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r11|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  812  <|@ instruction r10|DWORD[.] = MOV [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  814  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r14:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr  816  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r14:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr  818  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  158  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  162  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  166  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rcx|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: stack:56|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr  188  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction stack:60|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  242  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  244  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [stack:8, stack:20, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: stack:32|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  260  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:8, stack:20, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: rsi|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: rsi|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: rsi|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  264  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B37" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r13|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rdx|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  288  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  290  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  292  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  296  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  298  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  300  <|@ instruction CMP (x: r11|QWORD, y: [rdx|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B59" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B37 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOV [rdx|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOV [r8|QWORD] size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  342  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction rdi|QWORD = MOV [r8|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  350  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B59" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  606  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr  612  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  616  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B72 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B65" "B67" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  680  <|@ instruction r10|QWORD[*] = XOR (x: rsi|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  682  <|@ instruction TEST r10|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  698  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction r10|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  712  <|@ instruction r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  716  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B36" 
    successors "B44" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  364  <|@ instruction rdx|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  366  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOV (x: [r14|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.], y: stack:72|QWORD[.]) size: QWORD <|@ <|@
      nr  426  <|@ instruction TEST rsi|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction TEST (x: r9|QWORD[.], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B50" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  524  <|@ instruction MOV (x: [r14|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  380  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  394  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  632  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B72 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  648  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  476  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  482  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  732  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  734  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction MOV (x: [rdx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction MOVB [rsi|QWORD[*] + r13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  492  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  754  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction r10|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  778  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  768  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  892  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr  894  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction stack:76|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@reference-map: [stack:4, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr  908  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ st <@st|@reference-map: [rbx:0, stack:4, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction NULLCHECK [rbx|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  916  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  922  <|@ instruction r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr  944  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  946  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  948  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  960  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  962  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ st <@st|@reference-map: [stack:24, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr  970  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction rbp|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  984  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  986  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  988  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1004  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr 1006  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr 1008  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1010  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr 1012  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr 1028  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B30" "B34" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction rsi|DWORD = MOVE input: int[-56107|0xffffffffffff24d5] <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  576  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  580  <|@ st <@st|@reference-map: [rbx:0, r9:0, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: stack:32|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: stack:32|QWORD[.] r9|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ instruction rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  928  <|@ st <@st|@reference-map: [rbx:0, rbp:0, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@reference-map: [rbp:0, stack:40, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  996  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD = MOVE input: int[-51995|0xffffffffffff34e5] <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@reference-map: [rdx:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr  862  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  864  <|@ st <@st|@reference-map: [rbx:0, rsi:0]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: rsi|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-30771|0xffffffffffff87cd] <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  840  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@reference-map: [rbx:0, stack:48]
live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: rbx|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: stack:32|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: int[-46643|0xffffffffffff49cd] <|@ <|@
      nr  834  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction r10|DWORD = MOVE input: int[-57611|0xffffffffffff1ef5] <|@ <|@
      nr  598  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   12  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   16  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr   42  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   58  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr   60  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B16" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   82  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   84  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   86  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr   88  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B16 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B16 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  110  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  126  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  130  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr  132  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  148  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  150  <|@ instruction stack:48|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  170  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr  172  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B18" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction r11|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  212  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r11|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  812  <|@ instruction r10|DWORD[.] = MOV [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  814  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r14:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr  816  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r14:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr  818  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  158  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  162  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  166  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rcx|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: stack:56|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr  188  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction stack:60|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  242  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  244  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [stack:8, stack:20, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: stack:32|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  260  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:8, stack:20, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: rsi|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: rsi|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: rsi|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  264  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B37" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r13|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rdx|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  288  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  290  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  292  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  296  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  298  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  300  <|@ instruction CMP (x: r11|QWORD, y: [rdx|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B59" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B37 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOV [rdx|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOV [r8|QWORD] size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  342  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction rdi|QWORD = MOV [r8|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  350  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B59" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  606  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr  612  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  616  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B72 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B65" "B67" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  680  <|@ instruction r10|QWORD[*] = XOR (x: rsi|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  682  <|@ instruction TEST r10|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  698  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction r10|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  712  <|@ instruction r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  716  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B36" 
    successors "B44" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  364  <|@ instruction rdx|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  366  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOV (x: [r14|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.], y: stack:72|QWORD[.]) size: QWORD <|@ <|@
      nr  426  <|@ instruction TEST rsi|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction TEST (x: r9|QWORD[.], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B50" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  524  <|@ instruction MOV (x: [r14|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  380  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  394  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  632  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B72 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  648  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  476  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  482  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  732  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  734  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction MOV (x: [rdx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction MOVB [rsi|QWORD[*] + r13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  492  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  754  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction r10|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  778  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  768  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  892  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr  894  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction stack:76|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@reference-map: [stack:4, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr  908  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ st <@st|@reference-map: [rbx:0, stack:4, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction NULLCHECK [rbx|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  916  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  922  <|@ instruction r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr  944  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  946  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  948  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  960  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  962  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ st <@st|@reference-map: [stack:24, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr  970  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction rbp|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  984  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  986  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  988  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1004  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr 1006  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr 1008  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1010  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr 1012  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr 1028  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B30" "B34" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction rsi|DWORD = MOVE input: int[-56107|0xffffffffffff24d5] <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  576  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  580  <|@ st <@st|@reference-map: [rbx:0, r9:0, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: stack:32|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: stack:32|QWORD[.] r9|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ instruction rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  928  <|@ st <@st|@reference-map: [rbx:0, rbp:0, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@reference-map: [rbp:0, stack:40, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  996  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD = MOVE input: int[-51995|0xffffffffffff34e5] <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@reference-map: [rdx:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr  862  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  864  <|@ st <@st|@reference-map: [rbx:0, rsi:0]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: rsi|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-30771|0xffffffffffff87cd] <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  840  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@reference-map: [rbx:0, stack:48]
live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: rbx|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: stack:32|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: int[-46643|0xffffffffffff49cd] <|@ <|@
      nr  834  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction r10|DWORD = MOVE input: int[-57611|0xffffffffffff1ef5] <|@ <|@
      nr  598  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   12  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>} <|@ <|@
      nr   16  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed} <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr   42  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595601734043921847
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   56  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   58  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr   60  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592384877167228635
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B92 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B92" 
    successors "B6" "B93" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4600105333671292343
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B7" 
    successors "B16" "B10" 
    xhandlers
    flags 
    probability 4605573990361670802
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   82  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   84  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   86  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>} <|@ <|@
      nr   88  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B16 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B16" "B12" 
    xhandlers
    flags 
    probability 4601070390734300306
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed} <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B16 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4596566791106929810
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  110  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  126  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  128  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  130  <|@ instruction rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD <|@ <|@
      nr  132  <|@ instruction CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4595509823847444898
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B90 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B90" 
    successors "B14" "B91" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4598956456215330482
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604781264917057118
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  148  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  150  <|@ instruction stack:48|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  170  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>} <|@ <|@
      nr  172  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B18" 
    successors "B23" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed} <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" "B63" "B83" "B85" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609007691104459942
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction r11|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  212  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r11|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607373567089646003
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14] <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" "B55" "B73" "B83" "B81" "B82" "B79" "B77" "B75" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4608709340467546443
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  812  <|@ instruction r10|DWORD[.] = MOV [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  814  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r14:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:21, 14] <|@ <|@
      nr  816  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, r14:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21]
stack: rsi|QWORD[.] 
locals: r14|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: r14|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14] <|@ <|@
      nr  818  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B84 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B84" 
    successors "B18" "B89" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610425316302536173
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  158  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  162  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  166  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rcx|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604824661933345304
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: stack:56|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14] <|@ <|@
      nr  188  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4601300003901738769
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction stack:60|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  242  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  244  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [stack:8, stack:20, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: stack:32|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  260  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:8, stack:20, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: rsi|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: rsi|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: rsi|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  264  <|@ instruction rbx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B37" "B28" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596984458029555762
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r13|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B37" "B30" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4596202814255653728
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rdx|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  288  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  290  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  292  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  296  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  298  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  300  <|@ instruction CMP (x: r11|QWORD, y: [rdx|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B59" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4591699214628283232
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4587195615000912736
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B37 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582692015373542240
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOV [rdx|QWORD + 40] size: QWORD <|@ <|@
      nr  328  <|@ instruction r9|DWORD = MOV [r8|QWORD] size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B56" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4580682074240651296
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  342  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  344  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction rdi|QWORD = MOV [r8|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  350  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B34" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4577183445179726272
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B56 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B56" 
    successors "B35" "B59" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4585185673868021792
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  590  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B72" "B67" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636398
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  606  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ st <@st|@reference-map: [stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] - 
scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14] <|@ <|@
      nr  612  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  616  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B72 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B65" "B67" "B71" "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594346410292636399
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  680  <|@ instruction r10|QWORD[*] = XOR (x: rsi|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  682  <|@ instruction TEST r10|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593828571292426302
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  698  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593053412466568509
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction r10|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  712  <|@ instruction r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  714  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  716  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592214513286228151
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B77 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B36" 
    successors "B44" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  364  <|@ instruction rdx|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  366  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247766
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOV (x: [r14|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.], y: stack:72|QWORD[.]) size: QWORD <|@ <|@
      nr  426  <|@ instruction TEST rsi|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594054689669876532
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction TEST (x: r9|QWORD[.], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4593460425545978923
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  454  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  460  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4592580825057697524
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B50" "B54" "B53" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4594597652934247767
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  524  <|@ instruction MOV (x: [r14|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B55 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B45 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579841034010993185
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  380  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  394  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  410  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414998
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4579439045784414997
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  632  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD <|@ <|@
      nr  634  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  636  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B72 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078841
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction r10|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  648  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776301
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  666  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578972292787999211
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B47 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578610503384078843
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B52" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4578190425687304634
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD <|@ <|@
      nr  476  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  482  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577864815223776303
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  732  <|@ instruction r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD <|@ <|@
      nr  734  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577193695879504017
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B79 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4574689786685246720
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction MOV (x: [rdx|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4567148942679285465
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:48]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2]
locals: - - 
scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2]
locals: stack:32|QWORD[.] stack:72|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14] <|@ <|@
      nr  802  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563897759704498567
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563608328181362271
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563272266023942906
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction MOVB [rsi|QWORD[*] + r13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  492  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r13|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  498  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562709321711442811
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r11|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4563011777653120241
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  752  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  754  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562474882177702412
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction r10|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  776  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  778  <|@ instruction rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548635533389461492
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4548218751996145228
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  768  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4599342120710210847
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B94" "B98" 
    xhandlers
    flags 
    probability 4595601734043921847
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3 <|@ <|@
      nr  892  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>} <|@ <|@
      nr  894  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction stack:76|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@reference-map: [stack:4, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1]
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27] <|@ <|@
      nr  908  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ st <@st|@reference-map: [rbx:0, stack:4, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction NULLCHECK [rbx|QWORD[.]] state [bci:6, 2, 2, 27] <|@ <|@
      nr  912  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  916  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  922  <|@ instruction r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4592768694147716374
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  940  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr  944  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  946  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr  948  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 4592850555496045177
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  960  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  962  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ st <@st|@reference-map: [stack:24, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7]
locals: - - 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] stack:56|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27] <|@ <|@
      nr  970  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593120158739044228
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589811391665874067
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction rbp|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD <|@ <|@
      nr  984  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  986  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD <|@ <|@
      nr  988  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4589298900410318599
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1004  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3 <|@ <|@
      nr 1006  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD <|@ <|@
      nr 1008  <|@ instruction MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1010  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed} <|@ <|@
      nr 1012  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B99" 
    successors 
    xhandlers
    flags 
    probability 4589345713337057525
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27] <|@ <|@
      nr 1028  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B30" "B34" 
    successors "B60" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction rsi|DWORD = MOVE input: int[-56107|0xffffffffffff24d5] <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 4589438030853780920
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  576  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  580  <|@ st <@st|@reference-map: [rbx:0, r9:0, stack:48]
live-base-pointers: []
scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5]
locals: - - 
scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2]
locals: stack:32|QWORD[.] stack:76|DWORD 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7]
locals: stack:32|QWORD[.] r9|QWORD[.] 
scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2]
locals: - - 
scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16]
locals: stack:32|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5, 2, 7, 2, 16, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    probability 4562881949191985316
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ instruction rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  928  <|@ st <@st|@reference-map: [rbx:0, rbp:0, stack:40, stack:48]
live-base-pointers: []
scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6]
stack: rbx|QWORD[.] 
locals: - vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2]
locals: - - 
scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2]
locals: stack:40|QWORD[.] vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27]
locals: stack:32|QWORD[.] - - 
vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040; stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27] <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559131277894153985
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ st <@st|@reference-map: [rbp:0, stack:40, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  996  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD = MOVE input: int[-51995|0xffffffffffff34e5] <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction MOV [r15|QWORD + 1004] y: -105761 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@reference-map: [rdx:0, stack:48]
live-base-pointers: []
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction MOV [r15|QWORD + 1004] y: -22067 size: DWORD <|@ <|@
      nr  862  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  864  <|@ st <@st|@reference-map: [rbx:0, rsi:0]
live-base-pointers: []
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0]
locals: rsi|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction r10|DWORD = MOVE input: int[-30771|0xffffffffffff87cd] <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" "B86" "B64" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  840  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@reference-map: [rbx:0, stack:48]
live-base-pointers: []
scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6]
stack: int[0|0x0] 
locals: - 
scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1]
locals: - 
scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1]
locals: rbx|QWORD[.] 
scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1]
locals: stack:32|QWORD[.] rbx|QWORD[.] 
scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:6, 1, 1, 1, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction r10|DWORD = MOVE input: int[-46643|0xffffffffffff49cd] <|@ <|@
      nr  834  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction r10|DWORD = MOVE input: int[-57611|0xffffffffffff1ef5] <|@ <|@
      nr  598  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: instanceof    #44         // scala.collection.LinearSeq
     4: ifeq          20
     7: aload_1       
     8: checkcast     #44         // scala.collection.LinearSeq
    11: astore_2      
    12: aload_0       
    13: aload_2       
    14: invokespecial #12         // loop$1:(scala.collection.LinearSeq)void
    17: goto          32
    20: aload_1       
    21: aload_0       
    22: invokedynamic #-15        // java.lang.invoke.Invokers$Holder.linkToTargetMethod:(java.lang.Object, java.lang.Object)java.lang.Object
    27: invokeinterface#6, 2       // scala.collection.TraversableOnce.foreach:(scala.Function1)void
    32: aload_0       
    33: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e20349bc00000000080000004d03d449bc0000000000000000493bc20f85d8ffffff906666660f1f840000000000660f1f440000660f1f44000089842400c0feff4883ec4848896c24404889742430448b520849bb00000000080000004f8d04d349bbaddeaddeaddeadde4d3b58200f84490000004181faaddeadde0f84b00500004d8b5028458b0ab900000000e9210000000f1f80000000008bd9c1e3038d5b084863db498b1c1a4c3bdb0f8471060000ffc1443bc97fe1e97e0500004889542428448b560849bb00000000080000004f8d04d349bbaddeaddeaddeadde4d3b58200f84450000004181faaddeadde0f84380000004d8b5028458b0ab900000000e91d0000006666908bd9c1e3038d5b084863db498b1c1a4c3bdb0f84f8050000ffc1443bc97fe1e9ea060000448b560849bb00000000080000004f8d14d34c895424204c8b542428e9ab0000006666660f1f84000000000049b9addeaddeaddeadde4c3bc90f85d00000004181f8addeadde0f85ff0600004c8b5424184c8b5c2420458b420c458bc849c1e1034d3b1d000000000f842c0000004d3b1d000000000f84c00000004d3b1d000000000f84980100004d3b1d000000000f8477030000e990060000488b742430498bd190e80000000090488bf0488b5c24184c8b742430448b5310438504d44d8b9f0801000041850349c1e2034c89542418458b420849b900000000080000004b8d0cc1493b0d000000000f843cffffff493b0d000000000f842fffffff493b0d000000000f8422ffffffe9f70500004489442414498bf248b8ffffffffffffffff6690e8000000009085c00f85b5030000448b442414e904ffffff4c894c24084489442414488b742430ba010000000356104c8bd6448bda44895c2404660f1f440000e80000000090488b742430448b5614428b14d50c000000468b1cd5080000008b5e103bd30f864c050000448b6c24144585ed0f841f010000428b14ed0800000049b800000000080000004f8d1cd84d8b9be8000000458b431049b90000000008000000498d14d14d63c84e3b1c0a0f84e30000004183f8200f85ab0400004c3bda0f84d00000004c8b4228458b08b900000000e91b000000908bf9c1e7038d7f084863ff498b3c384c3bdf0f84ef010000ffc1443bc97fe1e96c0400004c894c2408488b7424308b561085d20f842305000048c1e203488bf2488b54240848b8ffffffffffffffffe80000000090488bd8410fbe773085f6488b7424300f85130100004c8bd349c1ea03448956104c8bd64c33d349f7c20000f0ff0f84e80000004885db0f842c01000049ba0060d246527f00004c8bde49c1eb09470fbe04134183f8200f8536010000488b5c24184c8bf6e9fcfdffff458bf249c1e603410fbe573085d20f856b00000045896c9e10498d749e10483374240848f7c60000f0ff0f84480000004c8b4c24084d85c90f84b700000049bd0060d246527f0000498d749e1048c1ee09460fbe142e4183fa200f85ac0000004c8b742430ffc341895e10498bf6488b5c2418e984fdffff4c8b742430ebe6498d549e108b1248c1e2034885d274854d8b57384d85d20f84e70000004d8b5f484b89541af8498d52f849895738e962ffffff488b5c24184c8bf6e93dfdffff488d56108b1248c1e2034885d20f84dafeffff4d8b57384d85d20f84b20000004d8b5f484b89541af8498d52f849895738e9b7feffff4c8b742430e966ffffff488b5c24184c8bf6e9f0fcfffff083042400460fbe142e4585d24c8b7424300f8441ffffffe97b000000f083042400470fbe04134585c00f8596000000488b5c24184c8bf6e9b3fcffff4c895a20e9aefeffff4c894c2408488b7424304c8bd6488b5424080f1f440000e80000000090488b742430488b5c24184c8b742430e979fcffff488bf2e80000000090e983feffff488bf2e80000000090488b742430e908feffff42c6042e004d8b57704903f54d85d20f84520000004d8b9f800000004b89741af8498d72f849897770e993feffff4c8bf643c6041300498b77704d03da4885f60f842c0000004d8b97800000004e895c16f8488d76f849897770498bf6488b5c2418e9f1fbffffe80000000090e94ffeffff488b5c2418498bf3e80000000090498bf6e9d0fbffff4c8b742430498bc6488b6c24404883c448498b8f080100008501c5f877c34889542428e987faffff4c8bd649c1ea0349bbaddeaddeaddeadde4d3b05000000000f840d0000004d3b05000000000f85cf0000004c895c24184489542404488bf2488954242848b8ffffffffffffffff660f1f440000e80000000090488bd88503498bb718010000488d5610493b97280100004c8b5c24180f8730010000498997180100000f0d8ed0000000498b93b8000000488916c74608addeaddec7460c000000004c8bd68b6c240441896a0c488bf3498bd24c8954241848b8ffffffffffffffff6690e80000000090488b442430488b6c24404883c448498b8f080100008501c5f877c34d895820e90bfaffff48895424284d895820488b742430e98df9ffff418bea48895424284c8bf6498bb718010000488d5610493b97280100000f879d000000498997180100000f0d8ed0000000498b93b8000000488916c74608addeaddec7460c00000000488bd6896a0c488b74242848b8ffffffffffffffff0f1f440000e80000000090488b442430488b6c24404883c448498b8f080100008501c5f877c34c8b4c2408488b5c2418bed524ffff4189b7ec03000049c787f803000000000000e800000000908b6c2404498bf3e800000000904c8bd0e9e8feffff498bf3e80000000090488bd0e97bffffff4c8b4c2408488b5c2418bee534ffffebb141c787ec030000df62feff49c787f803000000000000e80000000090498bda488b74243041c787ec030000cda9ffff49c787f803000000000000e80000000090498bda41bacd87ffff458997ec03000049c787f803000000000000e8000000009041bacd49ffff488b5c2418ebdb41baf51effff488b5c2418ebcee80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 34 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f524d2f2db8, value=0x7f5227888080]:0x7f5227888080}  <||@
  Comment 64 [stack overflow check]  <||@
  Comment 64 3  <||@
  Comment 64 1  <||@
  Comment 75 block B0 null  <||@
  Comment 75 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 80 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD  <||@
  Comment 80 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 85 8 r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 85 [rdx:0, rsi:0, stack:48]at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 89 10 r11|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 99 12 r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3  <||@
  Comment 103 14 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>}  <||@
  Comment 103 {meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>}}  <||@
  Comment 113 16 CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD  <||@
  Comment 117 18 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 123 block B2 null  <||@
  Comment 123 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 28 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed}  <||@
  Comment 123 {meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed}}  <||@
  Comment 130 30 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 136 block B4 null  <||@
  Comment 136 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 40 r10|QWORD = MOV [r8|QWORD + 40] size: QWORD  <||@
  Comment 140 42 r9|DWORD = MOV [r10|QWORD] size: DWORD  <||@
  Comment 143 44 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 148 46 JUMP ~[] destination: B4 -> B5  <||@
  Comment 153 block B6 loop 0 depth 1 header:321|LoopBegin  <||@
  Comment 153 54 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 56 rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD  <||@
  Comment 165 58 rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD  <||@
  Comment 168 60 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 171 62 rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD  <||@
  Comment 175 64 CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 178 66 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92  <||@
  Comment 184 block B92 loop 0 depth 1 header:321|LoopBegin  <||@
  Comment 184 882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 184 884 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 186 886 JUMP ~[] destination: B92 -> B5  <||@
  Comment 186 block B5 loop 0 depth 1 header:321|LoopBegin  <||@
  Comment 186 48 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 186 50 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 189 52 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93  <||@
  Comment 196 block B1 null  <||@
  Comment 196 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 196 22 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 201 24 JUMP ~[] destination: B1 -> B8  <||@
  Comment 201 block B8 null  <||@
  Comment 201 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 201 80 r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 205 82 r11|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 215 84 r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3  <||@
  Comment 219 86 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>}  <||@
  Comment 219 {meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>}}  <||@
  Comment 229 88 CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD  <||@
  Comment 233 90 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B16 falseDestination: B8 -> B10  <||@
  Comment 239 block B10 null  <||@
  Comment 239 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 239 98 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed}  <||@
  Comment 239 {meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed}}  <||@
  Comment 246 100 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B16 falseDestination: B10 -> B12  <||@
  Comment 252 block B12 null  <||@
  Comment 252 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 252 108 r10|QWORD = MOV [r8|QWORD + 40] size: QWORD  <||@
  Comment 256 110 r9|DWORD = MOV [r10|QWORD] size: DWORD  <||@
  Comment 259 112 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 264 114 JUMP ~[] destination: B12 -> B13  <||@
  Comment 269 block B14 loop 1 depth 1 header:379|LoopBegin  <||@
  Comment 269 122 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 272 124 rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD  <||@
  Comment 277 126 rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD  <||@
  Comment 280 128 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 283 130 rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD  <||@
  Comment 287 132 CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 290 134 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90  <||@
  Comment 296 block B90 loop 1 depth 1 header:379|LoopBegin  <||@
  Comment 296 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 296 868 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 298 870 JUMP ~[] destination: B90 -> B13  <||@
  Comment 298 block B13 loop 1 depth 1 header:379|LoopBegin  <||@
  Comment 298 116 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 298 118 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 301 120 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91  <||@
  Comment 308 block B16 null  <||@
  Comment 308 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 308 144 r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 312 146 r11|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 322 148 r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3  <||@
  Comment 326 150 stack:48|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 331 152 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 336 154 JUMP ~[] destination: B16 -> B17  <||@
  Comment 341 block B18 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 341 168 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 352 170 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}  <||@
  Comment 352 {meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}}  <||@
  Comment 362 172 CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 365 174 BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B20  <||@
  Comment 371 block B22 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 371 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 371 200 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed}  <||@
  Comment 371 {meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed}}  <||@
  Comment 378 202 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86  <||@
  Comment 384 block B23 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 384 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 384 206 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 389 208 r11|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 394 210 r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 398 212 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3  <||@
  Comment 405 214 AMD64HOTSPOTSTRATEGYSWITCH ~r11|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 405 {DataSection[0x0]}  <||@
  Comment 418 {DataSection[0x8]}  <||@
  Comment 431 {DataSection[0x10]}  <||@
  Comment 444 {DataSection[0x18]}  <||@
  Comment 462 block B24 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 462 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 462 218 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 467 220 rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 470 222 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14]  <||@
  Comment 470 10  <||@
  Comment 471 {HotSpotMethod<ListBuffer.$plus$eq(Object)>}  <||@
  Comment 476 [stack:24, stack:48]at scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:56|QWORD[.] 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 477 224 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 480 226 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 485 228 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 490 230 JUMP ~[] destination: B24 -> B84  <||@
  Comment 490 block B84 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 490 810 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 490 812 r10|DWORD[.] = MOV [rbx|QWORD[.] + 16] size: DWORD  <||@
  Comment 494 814 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:21, 14]  <||@
  Comment 494 [rbx:0, rsi:0, r10:0, r14:0, stack:48]at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r14|QWORD[.]  |rbx|QWORD[.] 
     stack:   |rsi|QWORD[.]  |             
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |r14|QWORD[.]  |-  |-   <||@
  Comment 494 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 498 816 SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14]  <||@
  Comment 505 [rbx:0, rsi:0, r10:0, r14:0, stack:48]at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r14|QWORD[.]  |rbx|QWORD[.] 
     stack:   |rsi|QWORD[.]  |             
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |r14|QWORD[.]  |-  |-   <||@
  Comment 505 {infopoint: SAFEPOINT}  <||@
  Comment 505 14  <||@
  Comment 508 818 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3  <||@
  Comment 512 820 JUMP ~[] destination: B84 -> B17  <||@
  Comment 512 block B17 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 512 156 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 512 158 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 517 160 r8|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD  <||@
  Comment 521 162 r9|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 531 164 rcx|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3  <||@
  Comment 535 166 AMD64HOTSPOTSTRATEGYSWITCH ~rcx|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 535 {DataSection[0x20]}  <||@
  Comment 548 {DataSection[0x28]}  <||@
  Comment 561 {DataSection[0x30]}  <||@
  Comment 579 block B20 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 579 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 579 182 stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 584 184 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 587 186 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14]  <||@
  Comment 587 7  <||@
  Comment 599 {HotSpotMethod<TraversableOnce.isEmpty()>}  <||@
  Comment 604 [stack:24, stack:48]at scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:56|QWORD[.] 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 605 188 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 607 190 BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88  <||@
  Comment 613 block B21 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 613 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 613 194 r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 618 196 JUMP ~[] destination: B21 -> B22  <||@
  Comment 623 block B25 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 623 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 623 234 stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 628 236 stack:60|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 633 238 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 638 240 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 643 242 rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 646 244 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 649 248 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 652 252 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 657 254 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14]  <||@
  Comment 657 10  <||@
  Comment 663 {HotSpotMethod<ResizableArray.ensureSize(int)>}  <||@
  Comment 668 [stack:8, stack:20, stack:24, stack:48]at scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:32|QWORD[.]  |stack:76|DWORD 
  at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:72|QWORD[.] 
  at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:56|QWORD[.] 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 669 256 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 674 258 r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 678 260 rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14]  <||@
  Comment 678 [rsi:0, r10:0, stack:8, stack:20, stack:24, stack:48]at scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2, duringCall: true, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:76|DWORD 
  at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:72|QWORD[.] 
  at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:56|QWORD[.] 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 678 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 686 262 r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 694 264 rbx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 697 266 CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 699 268 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61  <||@
  Comment 705 block B26 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 705 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 705 272 r13|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 710 274 TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 713 276 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28  <||@
  Comment 719 block B28 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 719 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 719 284 rdx|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 727 286 r8|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 737 288 r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3  <||@
  Comment 741 290 r11|QWORD = MOV [r11|QWORD + 232] size: QWORD  <||@
  Comment 748 292 r8|DWORD = MOV [r11|QWORD + 16] size: DWORD  <||@
  Comment 752 294 r9|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 762 296 rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3  <||@
  Comment 766 298 r9|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 769 300 CMP (x: r11|QWORD, y: [rdx|QWORD + r9|QWORD * 1]) size: QWORD  <||@
  Comment 773 302 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30  <||@
  Comment 779 block B30 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 779 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 779 310 CMP r8|DWORD y: 32 size: DWORD  <||@
  Comment 783 312 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B59  <||@
  Comment 789 block B31 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 789 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 789 316 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 792 318 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B37 falseDestination: B31 -> B33  <||@
  Comment 798 block B33 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 798 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 798 326 r8|QWORD = MOV [rdx|QWORD + 40] size: QWORD  <||@
  Comment 802 328 r9|DWORD = MOV [r8|QWORD] size: DWORD  <||@
  Comment 805 330 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 810 332 JUMP ~[] destination: B33 -> B34  <||@
  Comment 815 block B35 loop 3 depth 2 outer 2 header:446|LoopBegin  <||@
  Comment 815 340 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 816 342 rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD  <||@
  Comment 821 344 rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD  <||@
  Comment 824 346 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 827 348 rdi|QWORD = MOV [r8|QWORD + rdi|QWORD * 1] size: QWORD  <||@
  Comment 831 350 CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 834 352 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56  <||@
  Comment 840 block B56 loop 3 depth 2 outer 2 header:446|LoopBegin  <||@
  Comment 840 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 840 534 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 842 536 JUMP ~[] destination: B56 -> B34  <||@
  Comment 842 block B34 loop 3 depth 2 outer 2 header:446|LoopBegin  <||@
  Comment 842 334 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 842 336 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 845 338 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B59  <||@
  Comment 852 block B63 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 852 582 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 852 584 stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 857 586 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 862 588 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 865 590 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 867 592 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 873 block B65 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 873 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 873 604 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3  <||@
  Comment 877 606 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 880 608 rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 885 610 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14]  <||@
  Comment 885 7  <||@
  Comment 895 {HotSpotMethod<Set.$plus(Object)>}  <||@
  Comment 900 [stack:24, stack:48]at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
     stack:   |stack:32|QWORD[.]  |  
  at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:56|QWORD[.] 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 901 612 rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 904 614 rsi|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD  <||@
  Comment 909 616 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 911 622 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 916 618 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B72 falseDestination: B65 -> B67  <||@
  Comment 922 block B72 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 922 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 922 676 r10|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3  <||@
  Comment 929 678 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 933 680 r10|QWORD[*] = XOR (x: rsi|QWORD[.], y: rbx|QWORD[.]) size: QWORD  <||@
  Comment 939 682 TEST r10|QWORD[*] y: -1048576 size: QWORD  <||@
  Comment 946 684 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74  <||@
  Comment 952 block B74 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 952 694 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 952 696 TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD  <||@
  Comment 955 698 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 961 block B76 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 961 708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 961 710 r10|QWORD = MOVE input: long[139991352238080|0x7f5246d26000]  <||@
  Comment 971 712 r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 978 714 r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD  <||@
  Comment 983 716 CMP r8|DWORD y: 32 size: DWORD  <||@
  Comment 987 718 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 993 block B77 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 993 720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 993 722 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 998 724 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1001 726 JUMP ~[] destination: B77 -> B84  <||@
  Comment 1006 block B37 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1006 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1006 362 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3  <||@
  Comment 1013 364 rdx|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD  <||@
  Comment 1018 366 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1020 368 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39  <||@
  Comment 1026 block B44 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1026 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1026 420 MOV (x: [r14|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1031 422 rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1036 424 rsi|QWORD[*] = XOR (x: rsi|QWORD[.], y: stack:72|QWORD[.]) size: QWORD  <||@
  Comment 1041 426 TEST rsi|QWORD[*] y: -1048576 size: QWORD  <||@
  Comment 1048 428 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 1054 block B46 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1054 436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1054 438 r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1059 440 TEST (x: r9|QWORD[.], y: r9|QWORD[.]) size: QWORD  <||@
  Comment 1062 442 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48  <||@
  Comment 1068 block B48 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1068 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1068 452 r13|QWORD = MOVE input: long[139991352238080|0x7f5246d26000]  <||@
  Comment 1078 454 rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1083 456 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1087 458 r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD  <||@
  Comment 1092 460 CMP r10|DWORD y: 32 size: DWORD  <||@
  Comment 1096 462 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 1102 block B49 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1102 464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1102 466 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1107 468 JUMP ~[] destination: B49 -> B55  <||@
  Comment 1107 block B55 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1107 520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1107 522 rbx|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 1109 524 MOV (x: [r14|QWORD[.] + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 1113 526 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1116 528 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1121 530 JUMP ~[] destination: B55 -> B84  <||@
  Comment 1126 block B45 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1126 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1126 432 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1131 434 JUMP ~[] destination: B45 -> B55  <||@
  Comment 1133 block B39 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1133 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1133 376 rdx|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1138 378 rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD  <||@
  Comment 1140 380 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3  <||@
  Comment 1144 382 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 1147 384 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41  <||@
  Comment 1149 block B41 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1149 390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1149 392 r10|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1153 394 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1156 396 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 1162 block B43 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1162 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1162 408 r11|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1166 410 MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 1171 412 rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1175 414 MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD  <||@
  Comment 1179 416 JUMP ~[] destination: B43 -> B44  <||@
  Comment 1184 block B73 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1184 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1184 688 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1189 690 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1192 692 JUMP ~[] destination: B73 -> B84  <||@
  Comment 1197 block B67 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1197 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1197 630 rdx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD  <||@
  Comment 1201 632 rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD  <||@
  Comment 1203 634 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3  <||@
  Comment 1207 636 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 1210 638 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B72 falseDestination: B67 -> B69  <||@
  Comment 1216 block B69 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1216 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1216 646 r10|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1220 648 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1223 650 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71  <||@
  Comment 1229 block B71 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1229 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1229 664 r11|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1233 666 MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 1238 668 rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1242 670 MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD  <||@
  Comment 1246 672 JUMP ~[] destination: B71 -> B72  <||@
  Comment 1251 block B47 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1251 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1251 446 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1256 448 JUMP ~[] destination: B47 -> B55  <||@
  Comment 1261 block B75 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1261 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1261 702 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1266 704 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1269 706 JUMP ~[] destination: B75 -> B84  <||@
  Comment 1274 block B50 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1274 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1274 472 MEMBAR barriers: 4  <||@
  Comment 1279 474 r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD  <||@
  Comment 1284 476 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1287 482 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1292 478 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52  <||@
  Comment 1303 block B78 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1303 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1303 730 MEMBAR barriers: 4  <||@
  Comment 1308 732 r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD  <||@
  Comment 1313 734 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1316 736 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 1322 block B79 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1322 738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1322 740 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1327 742 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1330 744 JUMP ~[] destination: B79 -> B84  <||@
  Comment 1335 block B36 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1335 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1335 356 MOV (x: [rdx|QWORD + 32], y: r11|QWORD) size: QWORD  <||@
  Comment 1339 358 JUMP ~[] destination: B36 -> B37  <||@
  Comment 1344 block B83 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1344 788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1344 790 stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1349 792 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1354 794 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1357 798 rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1362 800 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14]  <||@
  Comment 1362 10  <||@
  Comment 1367 {HotSpotMethod<FlatHashTable.addElem(Object)>}  <||@
  Comment 1372 [stack:8, stack:24, stack:48]at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:72|QWORD[.] 
  at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:72|QWORD[.] 
  at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:72|QWORD[.] 
  at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:56|QWORD[.] 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 1373 802 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1378 804 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1383 806 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1388 808 JUMP ~[] destination: B83 -> B84  <||@
  Comment 1393 block B42 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1393 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1393 400 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1396 402 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1396 {Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1402 404 JUMP ~[] destination: B42 -> B44  <||@
  Comment 1407 block B70 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1407 652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1407 654 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1410 656 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1410 {Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1416 658 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1421 660 JUMP ~[] destination: B70 -> B72  <||@
  Comment 1426 block B52 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1426 486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1426 490 MOVB [rsi|QWORD[*] + r13|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1431 492 r10|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1435 494 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r13|QWORD) size: QWORD  <||@
  Comment 1438 496 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1441 498 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 1447 block B54 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1447 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1447 510 r11|QWORD = MOV [r15|QWORD + 128] size: QWORD  <||@
  Comment 1454 512 MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1459 514 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1463 516 MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD  <||@
  Comment 1467 518 JUMP ~[] destination: B54 -> B55  <||@
  Comment 1472 block B80 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1472 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1472 748 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1475 750 MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1480 752 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1484 754 r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD) size: QWORD  <||@
  Comment 1487 756 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1490 758 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82  <||@
  Comment 1496 block B82 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1496 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1496 774 r10|QWORD = MOV [r15|QWORD + 128] size: QWORD  <||@
  Comment 1503 776 MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD  <||@
  Comment 1508 778 rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1512 780 MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD  <||@
  Comment 1516 782 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1519 784 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1524 786 JUMP ~[] destination: B82 -> B84  <||@
  Comment 1529 block B53 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1529 500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1529 502 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1529 504 - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1529 {Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1535 506 JUMP ~[] destination: B53 -> B55  <||@
  Comment 1540 block B81 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1540 760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1540 762 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1545 764 rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD  <||@
  Comment 1548 766 - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1548 {Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1554 768 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1557 770 JUMP ~[] destination: B81 -> B84  <||@
  Comment 1562 block B88 null  <||@
  Comment 1562 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1562 848 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1567 850 rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1570 852 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd  <||@
  Comment 1586 15  <||@
  Comment 1592 block B3 null  <||@
  Comment 1592 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1592 34 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1597 36 JUMP ~[] destination: B3 -> B8  <||@
  Comment 1602 block B93 null  <||@
  Comment 1602 888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1602 890 r10|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3  <||@
  Comment 1609 892 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>}  <||@
  Comment 1609 {meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>}}  <||@
  Comment 1619 894 AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 1619 {DataSection[0x38]}  <||@
  Comment 1632 {DataSection[0x40]}  <||@
  Comment 1645 block B94 null  <||@
  Comment 1645 896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1645 898 stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1650 900 stack:76|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1655 902 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1658 904 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1663 906 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27]  <||@
  Comment 1663 7  <||@
  Comment 1679 {HotSpotMethod<IterableLike.iterator()>}  <||@
  Comment 1684 [stack:4, stack:40, stack:48]at scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1, duringCall: true, rethrow: false]
              |0  |1                                                                           
     locals:  |-  |vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
  at scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                           
     locals:  |stack:40|QWORD[.]  |vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 1685 908 rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1688 910 NULLCHECK [rbx|QWORD[.]] state [bci:6, 2, 2, 27]  <||@
  Comment 1688 [rbx:0, stack:4, stack:40, stack:48]at scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6, duringCall: false, rethrow: false]
              |0             |1                                                                           
     locals:  |-             |vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
     stack:   |rbx|QWORD[.]  |                                                                            
  at scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                           
     locals:  |stack:40|QWORD[.]  |vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 1688 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1690 912 rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD  <||@
  Comment 1697 914 rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD  <||@
  Comment 1701 916 CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD  <||@
  Comment 1708 922 r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1713 918 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96  <||@
  Comment 1719 block B96 null  <||@
  Comment 1719 934 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1719 938 MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD  <||@
  Comment 1726 940 AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3  <||@
  Comment 1733 942 rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD  <||@
  Comment 1740 944 MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD  <||@
  Comment 1743 946 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed}  <||@
  Comment 1743 {meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed}}  <||@
  Comment 1750 948 MOV [rsi|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1757 950 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1757 952 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1760 954 rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 1764 956 JUMP ~[] destination: B96 -> B97  <||@
  Comment 1764 block B97 null  <||@
  Comment 1764 958 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1764 960 MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 1768 962 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1771 964 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1774 966 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1779 968 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27]  <||@
  Comment 1779 7  <||@
  Comment 1791 {HotSpotMethod<Iterator.foreach(Function1)>}  <||@
  Comment 1796 [stack:24, stack:40, stack:48]at scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:56|QWORD[.] 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 1797 970 rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1802 972 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd  <||@
  Comment 1818 15  <||@
  Comment 1824 block B15 null  <||@
  Comment 1824 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1824 138 MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD  <||@
  Comment 1828 140 JUMP ~[] destination: B15 -> B16  <||@
  Comment 1833 block B7 null  <||@
  Comment 1833 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1833 70 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1838 72 MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD  <||@
  Comment 1842 74 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1847 76 JUMP ~[] destination: B7 -> B8  <||@
  Comment 1852 block B98 null  <||@
  Comment 1852 974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1852 976 rbp|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1855 978 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1860 980 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1863 982 rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD  <||@
  Comment 1870 984 rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD  <||@
  Comment 1874 986 CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD  <||@
  Comment 1881 988 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100  <||@
  Comment 1887 block B100 null  <||@
  Comment 1887 1000 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1887 1002 MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD  <||@
  Comment 1894 1004 AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3  <||@
  Comment 1901 1006 rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD  <||@
  Comment 1908 1008 MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD  <||@
  Comment 1911 1010 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed}  <||@
  Comment 1911 {meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed}}  <||@
  Comment 1918 1012 MOV [rsi|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1925 1014 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1925 1016 rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1928 1018 JUMP ~[] destination: B100 -> B101  <||@
  Comment 1928 block B101 null  <||@
  Comment 1928 1020 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1928 1022 MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 1931 1024 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1936 1026 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27]  <||@
  Comment 1936 7  <||@
  Comment 1951 {HotSpotMethod<TraversableOnce.foreach(Function1)>}  <||@
  Comment 1956 [stack:48]at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 1957 1028 rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1962 1030 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd  <||@
  Comment 1978 15  <||@
  Comment 1984 block B59 null  <||@
  Comment 1984 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1984 548 r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1989 550 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1994 556 JUMP ~[] destination: B59 -> B60  <||@
  Comment 1994 block B60 null  <||@
  Comment 1994 558 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1994 560 rsi|DWORD = MOVE input: int[-56107|0xffffffffffff24d5]  <||@
  Comment 1999 562 JUMP ~[] destination: B60 -> B62  <||@
  Comment 1999 block B62 null  <||@
  Comment 1999 574 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1999 576 MOV (x: [r15|QWORD + 1004], y: rsi|DWORD) size: DWORD  <||@
  Comment 2006 578 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 2017 580 DEOPT info [bci:5, 2, 7, 2, 16, 14]  <||@
  Comment 2017 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f524d2f2da0, value=0x7f5227887084]:0x7f5227887084}  <||@
  Comment 2022 [rbx:0, r9:0, stack:48]at scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:32|QWORD[.]  |stack:76|DWORD 
  at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1           
     locals:  |stack:32|QWORD[.]  |r9|QWORD[.] 
  at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.] 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 2023 block B95 null  <||@
  Comment 2023 920 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2023 924 rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 2027 926 rsi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2030 928 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27]  <||@
  Comment 2030 {Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2035 [rbx:0, rbp:0, stack:40, stack:48]at scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6, duringCall: false, rethrow: false]
              |0             |1                                                                           
     locals:  |-             |vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
     stack:   |rbx|QWORD[.]  |                                                                            
  at scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                           
     locals:  |stack:40|QWORD[.]  |vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 2036 930 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2039 932 JUMP ~[] destination: B95 -> B97  <||@
  Comment 2044 block B99 null  <||@
  Comment 2044 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2044 992 rsi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2047 994 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0]  <||@
  Comment 2047 {Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2052 [rbp:0, stack:40, stack:48]at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2053 996 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2056 998 JUMP ~[] destination: B99 -> B101  <||@
  Comment 2061 block B61 null  <||@
  Comment 2061 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2061 566 r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2066 568 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2071 570 rsi|DWORD = MOVE input: int[-51995|0xffffffffffff34e5]  <||@
  Comment 2076 572 JUMP ~[] destination: B61 -> B62  <||@
  Comment 2078 block B91 null  <||@
  Comment 2078 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2078 876 MOV [r15|QWORD + 1004] y: -105761 size: DWORD  <||@
  Comment 2089 878 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 2100 880 DEOPT info [bci:0]  <||@
  Comment 2100 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f524d2f2da0, value=0x7f5227887084]:0x7f5227887084}  <||@
  Comment 2105 [rdx:0, stack:48]at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 2106 block B89 null  <||@
  Comment 2106 854 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2106 856 rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2109 858 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2114 860 MOV [r15|QWORD + 1004] y: -22067 size: DWORD  <||@
  Comment 2125 862 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 2136 864 DEOPT info [bci:0, 14]  <||@
  Comment 2136 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f524d2f2da0, value=0x7f5227887084]:0x7f5227887084}  <||@
  Comment 2141 [rbx:0, rsi:0]at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.] 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 2142 block B85 null  <||@
  Comment 2142 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2142 824 rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2145 826 r10|DWORD = MOVE input: int[-30771|0xffffffffffff87cd]  <||@
  Comment 2151 828 JUMP ~[] destination: B85 -> B87  <||@
  Comment 2151 block B87 null  <||@
  Comment 2151 838 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2151 840 MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD  <||@
  Comment 2158 842 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 2169 844 DEOPT info [bci:6, 1, 1, 1, 14]  <||@
  Comment 2169 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f524d2f2da0, value=0x7f5227887084]:0x7f5227887084}  <||@
  Comment 2174 [rbx:0, stack:48]at scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6, duringCall: false, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[0|0x0] 
  at scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |rbx|QWORD[.] 
  at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.] 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 2175 block B86 null  <||@
  Comment 2175 830 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2175 832 r10|DWORD = MOVE input: int[-46643|0xffffffffffff49cd]  <||@
  Comment 2181 834 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2186 836 JUMP ~[] destination: B86 -> B87  <||@
  Comment 2188 block B64 null  <||@
  Comment 2188 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2188 596 r10|DWORD = MOVE input: int[-57611|0xffffffffffff1ef5]  <||@
  Comment 2194 598 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2199 600 JUMP ~[] destination: B64 -> B87  <||@
  Comment 2201 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f5227976b80:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2201 4  <||@
  Comment 2207 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f524d2f2da8, value=0x7f5227886e20]:0x7f5227886e20}  <||@
  Comment 2207 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-41666[scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce)]"
  method "HotSpotCompilation-41666[scala.collection.generic.Growable.$plus$plus$eq(TraversableOnce)]"
  date 1649334769889
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f52335f93c0 448b560849c1e20349bc00000000080000004d03d449bc0000000000000000493bc20f8598ec28f4906666660f1f840000000000660f1f440000660f1f44000089842400c0feff4883ec4848896c24404889742430448b520849bb00000000080000004f8d04d349bb40ba5b41080000004d3b58200f84490000004181fa48772b080f84b00500004d8b5028458b0ab900000000e9210000000f1f80000000008bd9c1e3038d5b084863db498b1c1a4c3bdb0f8471060000ffc1443bc97fe1e97e0500004889542428448b560849bb00000000080000004f8d04d349bb401e5d41080000004d3b58200f84450000004181fac8a32b080f84380000004d8b5028458b0ab900000000e91d0000006666908bd9c1e3038d5b084863db498b1c1a4c3bdb0f84f8050000ffc1443bc97fe1e9ea060000448b560849bb00000000080000004f8d14d34c895424204c8b542428e9ab0000006666660f1f84000000000049b940805c41080000004c3bc90f85d00000004181f808902b080f85ff0600004c8b5424184c8b5c2420458b420c458bc849c1e1034d3b1d04feffff0f842c0000004d3b1dfffdffff0f84c00000004d3b1dfafdffff0f84980100004d3b1df5fdffff0f8477030000e990060000488b742430498bd190e8e4e728f490488bf0488b5c24184c8b742430448b5310438504d44d8b9f0801000041850349c1e2034c89542418458b420849b900000000080000004b8d0cc1493b0da2fdffff0f843cffffff493b0d9dfdffff0f842fffffff493b0d98fdffff0f8422ffffffe9f70500004489442414498bf248b8ffffffffffffffff6690e864e428f49085c00f85b5030000448b442414e904ffffff4c894c24084489442414488b742430ba010000000356104c8bd6448bda44895c2404660f1f440000e824e728f490488b742430448b5614428b14d50c000000468b1cd5080000008b5e103bd30f864c050000448b6c24144585ed0f841f010000428b14ed0800000049b800000000080000004f8d1cd84d8b9be8000000458b431049b90000000008000000498d14d14d63c84e3b1c0a0f84e30000004183f8200f85ab0400004c3bda0f84d00000004c8b4228458b08b900000000e91b000000908bf9c1e7038d7f084863ff498b3c384c3bdf0f84ef010000ffc1443bc97fe1e96c0400004c894c2408488b7424308b561085d20f842305000048c1e203488bf2488b54240848b8ffffffffffffffffe83ce328f490488bd8410fbe773085f6488b7424300f85130100004c8bd349c1ea03448956104c8bd64c33d349f7c20000f0ff0f84e80000004885db0f842c01000049ba0060d246527f00004c8bde49c1eb09470fbe04134183f8200f8536010000488b5c24184c8bf6e9fcfdffff458bf249c1e603410fbe573085d20f856b00000045896c9e10498d749e10483374240848f7c60000f0ff0f84480000004c8b4c24084d85c90f84b700000049bd0060d246527f0000498d749e1048c1ee09460fbe142e4183fa200f85ac0000004c8b742430ffc341895e10498bf6488b5c2418e984fdffff4c8b742430ebe6498d549e108b1248c1e2034885d274854d8b57384d85d20f84e70000004d8b5f484b89541af8498d52f849895738e962ffffff488b5c24184c8bf6e93dfdffff488d56108b1248c1e2034885d20f84dafeffff4d8b57384d85d20f84b20000004d8b5f484b89541af8498d52f849895738e9b7feffff4c8b742430e966ffffff488b5c24184c8bf6e9f0fcfffff083042400460fbe142e4585d24c8b7424300f8441ffffffe97b000000f083042400470fbe04134585c00f8596000000488b5c24184c8bf6e9b3fcffff4c895a20e9aefeffff4c894c2408488b7424304c8bd6488b5424080f1f440000e864e428f490488b742430488b5c24184c8b742430e979fcffff488bf2e8471538f490e983feffff488bf2e8391538f490488b742430e908feffff42c6042e004d8b57704903f54d85d20f84520000004d8b9f800000004b89741af8498d72f849897770e993feffff4c8bf643c6041300498b77704d03da4885f60f842c0000004d8b97800000004e895c16f8488d76f849897770498bf6488b5c2418e9f1fbffffe8c21b38f490e94ffeffff488b5c2418498bf3e8af1b38f490498bf6e9d0fbffff4c8b742430498bc6488b6c24404883c448498b8f080100008501c5f877c34889542428e987faffff4c8bd649c1ea0349bb40d05241080000004d3b057ef9ffff0f840d0000004d3b0579f9ffff0f85cf0000004c895c24184489542404488bf2488954242848b8ffffffffffffffff660f1f440000e82ce028f490488bd88503498bb718010000488d5610493b97280100004c8b5c24180f8730010000498997180100000f0d8ed0000000498b93b8000000488916c74608085a2a08c7460c000000004c8bd68b6c240441896a0c488bf3498bd24c8954241848b8ffffffffffffffff6690e8bcdf28f490488b442430488b6c24404883c448498b8f080100008501c5f877c34d895820e90bfaffff48895424284d895820488b742430e98df9ffff418bea48895424284c8bf6498bb718010000488d5610493b97280100000f879d000000498997180100000f0d8ed0000000498b93b8000000488916c74608085a2a08c7460c00000000488bd6896a0c488b74242848b8ffffffffffffffff0f1f440000e81cdf28f490488b442430488b6c24404883c448498b8f080100008501c5f877c34c8b4c2408488b5c2418bed524ffff4189b7ec03000049c787f803000000000000e8ded428f4908b6c2404498bf3e84dfb37f4904c8bd0e9e8feffff498bf3e83cfb37f490488bd0e97bffffff4c8b4c2408488b5c2418bee534ffffebb141c787ec030000df62feff49c787f803000000000000e88bd428f490498bda488b74243041c787ec030000cda9ffff49c787f803000000000000e867d428f490498bda41bacd87ffff458997ec03000049c787f803000000000000e846d428f49041bacd49ffff488b5c2418ebdb41baf51effff488b5c2418ebcee822cf37f490e8bcd128f490f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4  <||@
  Comment 0 2  <||@
  Comment 34 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f524d2f2db8, value=0x7f5227888080]:0x7f5227888080}  <||@
  Comment 64 [stack overflow check]  <||@
  Comment 64 3  <||@
  Comment 64 1  <||@
  Comment 75 block B0 null  <||@
  Comment 75 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 80 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36163343 slotKind: QWORD  <||@
  Comment 80 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 85 8 r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 85 [rdx:0, rsi:0, stack:48]at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 89 10 r11|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 99 12 r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3  <||@
  Comment 103 14 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>}  <||@
  Comment 103 {meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>}}  <||@
  Comment 113 16 CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD  <||@
  Comment 117 18 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 123 block B2 null  <||@
  Comment 123 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 28 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed}  <||@
  Comment 123 {meta{HotSpotType<Lscala/collection/LinearSeq;, resolved>;compressed}}  <||@
  Comment 130 30 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 136 block B4 null  <||@
  Comment 136 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 40 r10|QWORD = MOV [r8|QWORD + 40] size: QWORD  <||@
  Comment 140 42 r9|DWORD = MOV [r10|QWORD] size: DWORD  <||@
  Comment 143 44 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 148 46 JUMP ~[] destination: B4 -> B5  <||@
  Comment 153 block B6 loop 0 depth 1 header:321|LoopBegin  <||@
  Comment 153 54 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 56 rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD  <||@
  Comment 165 58 rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD  <||@
  Comment 168 60 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 171 62 rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD  <||@
  Comment 175 64 CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 178 66 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B92  <||@
  Comment 184 block B92 loop 0 depth 1 header:321|LoopBegin  <||@
  Comment 184 882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 184 884 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 186 886 JUMP ~[] destination: B92 -> B5  <||@
  Comment 186 block B5 loop 0 depth 1 header:321|LoopBegin  <||@
  Comment 186 48 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 186 50 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 189 52 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B93  <||@
  Comment 196 block B1 null  <||@
  Comment 196 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 196 22 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 201 24 JUMP ~[] destination: B1 -> B8  <||@
  Comment 201 block B8 null  <||@
  Comment 201 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 201 80 r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 205 82 r11|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 215 84 r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3  <||@
  Comment 219 86 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>}  <||@
  Comment 219 {meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>}}  <||@
  Comment 229 88 CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD  <||@
  Comment 233 90 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B16 falseDestination: B8 -> B10  <||@
  Comment 239 block B10 null  <||@
  Comment 239 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 239 98 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed}  <||@
  Comment 239 {meta{HotSpotType<Lscala/collection/generic/Growable;, resolved>;compressed}}  <||@
  Comment 246 100 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B10 -> B16 falseDestination: B10 -> B12  <||@
  Comment 252 block B12 null  <||@
  Comment 252 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 252 108 r10|QWORD = MOV [r8|QWORD + 40] size: QWORD  <||@
  Comment 256 110 r9|DWORD = MOV [r10|QWORD] size: DWORD  <||@
  Comment 259 112 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 264 114 JUMP ~[] destination: B12 -> B13  <||@
  Comment 269 block B14 loop 1 depth 1 header:379|LoopBegin  <||@
  Comment 269 122 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 272 124 rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD  <||@
  Comment 277 126 rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD  <||@
  Comment 280 128 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 283 130 rbx|QWORD = MOV [r10|QWORD + rbx|QWORD * 1] size: QWORD  <||@
  Comment 287 132 CMP (x: r11|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 290 134 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B90  <||@
  Comment 296 block B90 loop 1 depth 1 header:379|LoopBegin  <||@
  Comment 296 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 296 868 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 298 870 JUMP ~[] destination: B90 -> B13  <||@
  Comment 298 block B13 loop 1 depth 1 header:379|LoopBegin  <||@
  Comment 298 116 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 298 118 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 301 120 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B91  <||@
  Comment 308 block B16 null  <||@
  Comment 308 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 308 144 r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 312 146 r11|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 322 148 r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3  <||@
  Comment 326 150 stack:48|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 331 152 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 336 154 JUMP ~[] destination: B16 -> B17  <||@
  Comment 341 block B18 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 341 168 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 352 170 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}  <||@
  Comment 352 {meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}}  <||@
  Comment 362 172 CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 365 174 BRANCH trueDestinationProbability: 0.5708097300899702 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B20  <||@
  Comment 371 block B22 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 371 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 371 200 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed}  <||@
  Comment 371 {meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>;compressed}}  <||@
  Comment 378 202 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B86  <||@
  Comment 384 block B23 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 384 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 384 206 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 389 208 r11|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 394 210 r8|DWORD[.] = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 398 212 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3  <||@
  Comment 405 214 AMD64HOTSPOTSTRATEGYSWITCH ~r11|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/mutable/ListBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/ArrayBuffer;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/SetBuilder;, resolved>}, meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>}] keyTargets: [B23 -> B24, B23 -> B25, B23 -> B63, B23 -> B83] defaultTarget: B23 -> B85 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 405 {DataSection[0x0]}  <||@
  Comment 418 {DataSection[0x8]}  <||@
  Comment 431 {DataSection[0x10]}  <||@
  Comment 444 {DataSection[0x18]}  <||@
  Comment 462 block B24 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 462 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 462 218 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 467 220 rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 470 222 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<ListBuffer.$plus$eq(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 16, 14]  <||@
  Comment 470 10  <||@
  Comment 471 {HotSpotMethod<ListBuffer.$plus$eq(Object)>}  <||@
  Comment 476 [stack:24, stack:48]at scala.collection.mutable.ListBuffer.$plus$eq(ListBuffer.scala:44) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:56|QWORD[.] 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 477 224 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 480 226 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 485 228 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 490 230 JUMP ~[] destination: B24 -> B84  <||@
  Comment 490 block B84 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 490 810 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 490 812 r10|DWORD[.] = MOV [rbx|QWORD[.] + 16] size: DWORD  <||@
  Comment 494 814 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:21, 14]  <||@
  Comment 494 [rbx:0, rsi:0, r10:0, r14:0, stack:48]at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r14|QWORD[.]  |rbx|QWORD[.] 
     stack:   |rsi|QWORD[.]  |             
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |r14|QWORD[.]  |-  |-   <||@
  Comment 494 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 498 816 SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:21, 14]  <||@
  Comment 505 [rbx:0, rsi:0, r10:0, r14:0, stack:48]at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 21, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |r14|QWORD[.]  |rbx|QWORD[.] 
     stack:   |rsi|QWORD[.]  |             
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |r14|QWORD[.]  |-  |-   <||@
  Comment 505 {infopoint: SAFEPOINT}  <||@
  Comment 505 14  <||@
  Comment 508 818 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3  <||@
  Comment 512 820 JUMP ~[] destination: B84 -> B17  <||@
  Comment 512 block B17 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 512 156 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 512 158 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 517 160 r8|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD  <||@
  Comment 521 162 r9|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 531 164 rcx|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3  <||@
  Comment 535 166 AMD64HOTSPOTSTRATEGYSWITCH ~rcx|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/$colon$colon;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Stream$Empty$;, resolved>}] keyTargets: [B17 -> B18, B17 -> B18, B17 -> B18] defaultTarget: B17 -> B89 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 535 {DataSection[0x20]}  <||@
  Comment 548 {DataSection[0x28]}  <||@
  Comment 561 {DataSection[0x30]}  <||@
  Comment 579 block B20 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 579 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 579 182 stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 584 184 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 587 186 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.isEmpty()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 1, 1, 1, 14]  <||@
  Comment 587 7  <||@
  Comment 599 {HotSpotMethod<TraversableOnce.isEmpty()>}  <||@
  Comment 604 [stack:24, stack:48]at scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:56|QWORD[.] 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 605 188 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 607 190 BRANCH trueDestinationProbability: 0.5736108036307284 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B88  <||@
  Comment 613 block B21 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 613 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 613 194 r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 618 196 JUMP ~[] destination: B21 -> B22  <||@
  Comment 623 block B25 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 623 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 623 234 stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 628 236 stack:60|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 633 238 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 638 240 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 643 242 rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 646 244 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 649 248 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 652 252 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 657 254 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<ResizableArray.ensureSize(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 7, 2, 16, 14]  <||@
  Comment 657 10  <||@
  Comment 663 {HotSpotMethod<ResizableArray.ensureSize(int)>}  <||@
  Comment 668 [stack:8, stack:20, stack:24, stack:48]at scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:32|QWORD[.]  |stack:76|DWORD 
  at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:72|QWORD[.] 
  at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:56|QWORD[.] 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 669 256 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 674 258 r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 678 260 rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 2, 7, 2, 16, 14]  <||@
  Comment 678 [rsi:0, r10:0, stack:8, stack:20, stack:24, stack:48]at scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2, duringCall: true, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:76|DWORD 
  at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:72|QWORD[.] 
  at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:56|QWORD[.] 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 678 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 686 262 r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 694 264 rbx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 697 266 CMP (x: rdx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 699 268 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B61  <||@
  Comment 705 block B26 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 705 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 705 272 r13|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 710 274 TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 713 276 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B26 -> B37 falseDestination: B26 -> B28  <||@
  Comment 719 block B28 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 719 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 719 284 rdx|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 727 286 r8|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 737 288 r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3  <||@
  Comment 741 290 r11|QWORD = MOV [r11|QWORD + 232] size: QWORD  <||@
  Comment 748 292 r8|DWORD = MOV [r11|QWORD + 16] size: DWORD  <||@
  Comment 752 294 r9|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 762 296 rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 34359738368 shift: 3  <||@
  Comment 766 298 r9|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 769 300 CMP (x: r11|QWORD, y: [rdx|QWORD + r9|QWORD * 1]) size: QWORD  <||@
  Comment 773 302 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B37 falseDestination: B28 -> B30  <||@
  Comment 779 block B30 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 779 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 779 310 CMP r8|DWORD y: 32 size: DWORD  <||@
  Comment 783 312 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B59  <||@
  Comment 789 block B31 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 789 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 789 316 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 792 318 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B37 falseDestination: B31 -> B33  <||@
  Comment 798 block B33 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 798 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 798 326 r8|QWORD = MOV [rdx|QWORD + 40] size: QWORD  <||@
  Comment 802 328 r9|DWORD = MOV [r8|QWORD] size: DWORD  <||@
  Comment 805 330 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 810 332 JUMP ~[] destination: B33 -> B34  <||@
  Comment 815 block B35 loop 3 depth 2 outer 2 header:446|LoopBegin  <||@
  Comment 815 340 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 816 342 rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD  <||@
  Comment 821 344 rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD  <||@
  Comment 824 346 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 827 348 rdi|QWORD = MOV [r8|QWORD + rdi|QWORD * 1] size: QWORD  <||@
  Comment 831 350 CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 834 352 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B56  <||@
  Comment 840 block B56 loop 3 depth 2 outer 2 header:446|LoopBegin  <||@
  Comment 840 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 840 534 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 842 536 JUMP ~[] destination: B56 -> B34  <||@
  Comment 842 block B34 loop 3 depth 2 outer 2 header:446|LoopBegin  <||@
  Comment 842 334 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 842 336 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 845 338 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B59  <||@
  Comment 852 block B63 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 852 582 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 852 584 stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 857 586 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 862 588 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 865 590 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 867 592 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 873 block B65 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 873 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 873 604 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3  <||@
  Comment 877 606 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 880 608 rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 885 610 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Set.$plus(Object)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:6, 2, 16, 14]  <||@
  Comment 885 7  <||@
  Comment 895 {HotSpotMethod<Set.$plus(Object)>}  <||@
  Comment 900 [stack:24, stack:48]at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:24) [bci: 6, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
     stack:   |stack:32|QWORD[.]  |  
  at scala.collection.mutable.SetBuilder.$plus$eq(SetBuilder.scala:20) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:56|QWORD[.] 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 901 612 rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 904 614 rsi|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD  <||@
  Comment 909 616 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 911 622 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 916 618 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B65 -> B72 falseDestination: B65 -> B67  <||@
  Comment 922 block B72 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 922 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 922 676 r10|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3  <||@
  Comment 929 678 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 933 680 r10|QWORD[*] = XOR (x: rsi|QWORD[.], y: rbx|QWORD[.]) size: QWORD  <||@
  Comment 939 682 TEST r10|QWORD[*] y: -1048576 size: QWORD  <||@
  Comment 946 684 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74  <||@
  Comment 952 block B74 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 952 694 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 952 696 TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD  <||@
  Comment 955 698 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 961 block B76 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 961 708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 961 710 r10|QWORD = MOVE input: long[139991352238080|0x7f5246d26000]  <||@
  Comment 971 712 r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 978 714 r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD  <||@
  Comment 983 716 CMP r8|DWORD y: 32 size: DWORD  <||@
  Comment 987 718 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 993 block B77 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 993 720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 993 722 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 998 724 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1001 726 JUMP ~[] destination: B77 -> B84  <||@
  Comment 1006 block B37 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1006 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1006 362 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3  <||@
  Comment 1013 364 rdx|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD  <||@
  Comment 1018 366 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1020 368 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39  <||@
  Comment 1026 block B44 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1026 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1026 420 MOV (x: [r14|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1031 422 rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1036 424 rsi|QWORD[*] = XOR (x: rsi|QWORD[.], y: stack:72|QWORD[.]) size: QWORD  <||@
  Comment 1041 426 TEST rsi|QWORD[*] y: -1048576 size: QWORD  <||@
  Comment 1048 428 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 1054 block B46 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1054 436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1054 438 r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1059 440 TEST (x: r9|QWORD[.], y: r9|QWORD[.]) size: QWORD  <||@
  Comment 1062 442 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48  <||@
  Comment 1068 block B48 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1068 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1068 452 r13|QWORD = MOVE input: long[139991352238080|0x7f5246d26000]  <||@
  Comment 1078 454 rsi|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1083 456 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1087 458 r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD  <||@
  Comment 1092 460 CMP r10|DWORD y: 32 size: DWORD  <||@
  Comment 1096 462 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 1102 block B49 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1102 464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1102 466 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1107 468 JUMP ~[] destination: B49 -> B55  <||@
  Comment 1107 block B55 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1107 520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1107 522 rbx|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 1109 524 MOV (x: [r14|QWORD[.] + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 1113 526 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1116 528 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1121 530 JUMP ~[] destination: B55 -> B84  <||@
  Comment 1126 block B45 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1126 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1126 432 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1131 434 JUMP ~[] destination: B45 -> B55  <||@
  Comment 1133 block B39 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1133 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1133 376 rdx|QWORD[.] = LEA [r14|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1138 378 rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD  <||@
  Comment 1140 380 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3  <||@
  Comment 1144 382 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 1147 384 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41  <||@
  Comment 1149 block B41 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1149 390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1149 392 r10|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1153 394 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1156 396 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 1162 block B43 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1162 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1162 408 r11|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1166 410 MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 1171 412 rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1175 414 MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD  <||@
  Comment 1179 416 JUMP ~[] destination: B43 -> B44  <||@
  Comment 1184 block B73 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1184 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1184 688 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1189 690 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1192 692 JUMP ~[] destination: B73 -> B84  <||@
  Comment 1197 block B67 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1197 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1197 630 rdx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD  <||@
  Comment 1201 632 rdx|DWORD[.] = MOV [rdx|QWORD[.]] size: DWORD  <||@
  Comment 1203 634 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3  <||@
  Comment 1207 636 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 1210 638 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B67 -> B72 falseDestination: B67 -> B69  <||@
  Comment 1216 block B69 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1216 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1216 646 r10|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1220 648 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1223 650 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71  <||@
  Comment 1229 block B71 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1229 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1229 664 r11|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1233 666 MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 1238 668 rdx|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1242 670 MOV (x: [r15|QWORD + 56], y: rdx|QWORD) size: QWORD  <||@
  Comment 1246 672 JUMP ~[] destination: B71 -> B72  <||@
  Comment 1251 block B47 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1251 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1251 446 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1256 448 JUMP ~[] destination: B47 -> B55  <||@
  Comment 1261 block B75 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1261 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1261 702 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1266 704 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1269 706 JUMP ~[] destination: B75 -> B84  <||@
  Comment 1274 block B50 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1274 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1274 472 MEMBAR barriers: 4  <||@
  Comment 1279 474 r10|DWORD = MOVSXB [rsi|QWORD[*] + r13|QWORD * 1] size: DWORD  <||@
  Comment 1284 476 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1287 482 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1292 478 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52  <||@
  Comment 1303 block B78 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1303 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1303 730 MEMBAR barriers: 4  <||@
  Comment 1308 732 r8|DWORD = MOVSXB [r11|QWORD[*] + r10|QWORD * 1] size: DWORD  <||@
  Comment 1313 734 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1316 736 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 1322 block B79 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1322 738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1322 740 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1327 742 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1330 744 JUMP ~[] destination: B79 -> B84  <||@
  Comment 1335 block B36 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1335 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1335 356 MOV (x: [rdx|QWORD + 32], y: r11|QWORD) size: QWORD  <||@
  Comment 1339 358 JUMP ~[] destination: B36 -> B37  <||@
  Comment 1344 block B83 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1344 788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1344 790 stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1349 792 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1354 794 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1357 798 rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1362 800 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.addElem(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2, 2, 2, 2, 16, 14]  <||@
  Comment 1362 10  <||@
  Comment 1367 {HotSpotMethod<FlatHashTable.addElem(Object)>}  <||@
  Comment 1372 [stack:8, stack:24, stack:48]at scala.collection.mutable.FlatHashTable.addElem$(FlatHashTable.scala:138) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.HashSet.addElem(HashSet.scala:40) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:72|QWORD[.] 
  at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:59) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:72|QWORD[.] 
  at scala.collection.mutable.HashSet.$plus$eq(HashSet.scala:40) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:72|QWORD[.] 
  at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:56|QWORD[.] 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 1373 802 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1378 804 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1383 806 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1388 808 JUMP ~[] destination: B83 -> B84  <||@
  Comment 1393 block B42 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1393 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1393 400 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1396 402 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1396 {Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1402 404 JUMP ~[] destination: B42 -> B44  <||@
  Comment 1407 block B70 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1407 652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1407 654 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1410 656 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1410 {Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1416 658 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1421 660 JUMP ~[] destination: B70 -> B72  <||@
  Comment 1426 block B52 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1426 486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1426 490 MOVB [rsi|QWORD[*] + r13|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1431 492 r10|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1435 494 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r13|QWORD) size: QWORD  <||@
  Comment 1438 496 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1441 498 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 1447 block B54 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1447 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1447 510 r11|QWORD = MOV [r15|QWORD + 128] size: QWORD  <||@
  Comment 1454 512 MOV (x: [r10|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1459 514 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1463 516 MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD  <||@
  Comment 1467 518 JUMP ~[] destination: B54 -> B55  <||@
  Comment 1472 block B80 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1472 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1472 748 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1475 750 MOVB [r11|QWORD[*] + r10|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1480 752 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1484 754 r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD) size: QWORD  <||@
  Comment 1487 756 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1490 758 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82  <||@
  Comment 1496 block B82 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1496 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1496 774 r10|QWORD = MOV [r15|QWORD + 128] size: QWORD  <||@
  Comment 1503 776 MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: r11|QWORD[*]) size: QWORD  <||@
  Comment 1508 778 rsi|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1512 780 MOV (x: [r15|QWORD + 112], y: rsi|QWORD) size: QWORD  <||@
  Comment 1516 782 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1519 784 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1524 786 JUMP ~[] destination: B82 -> B84  <||@
  Comment 1529 block B53 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1529 500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1529 502 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1529 504 - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1529 {Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1535 506 JUMP ~[] destination: B53 -> B55  <||@
  Comment 1540 block B81 loop 2 depth 1 header:70|LoopBegin  <||@
  Comment 1540 760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1540 762 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1545 764 rsi|QWORD = MOVE r11|QWORD[*] moveKind: QWORD  <||@
  Comment 1548 766 - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1548 {Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1554 768 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1557 770 JUMP ~[] destination: B81 -> B84  <||@
  Comment 1562 block B88 null  <||@
  Comment 1562 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1562 848 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1567 850 rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1570 852 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd  <||@
  Comment 1586 15  <||@
  Comment 1592 block B3 null  <||@
  Comment 1592 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1592 34 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1597 36 JUMP ~[] destination: B3 -> B8  <||@
  Comment 1602 block B93 null  <||@
  Comment 1602 888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1602 890 r10|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@79436c07 encoding: base: 0 shift: 3  <||@
  Comment 1609 892 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>}  <||@
  Comment 1609 {meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>}}  <||@
  Comment 1619 894 AMD64HOTSPOTSTRATEGYSWITCH ~r8|QWORD - keyConstants: [meta{HotSpotType<Lscala/collection/immutable/Vector;, resolved>}, meta{HotSpotType<Lscala/collection/immutable/Map$WithDefault;, resolved>}] keyTargets: [B93 -> B94, B93 -> B94] defaultTarget: B93 -> B98 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 1619 {DataSection[0x38]}  <||@
  Comment 1632 {DataSection[0x40]}  <||@
  Comment 1645 block B94 null  <||@
  Comment 1645 896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1645 898 stack:56|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1650 900 stack:76|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1655 902 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1658 904 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1663 906 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<IterableLike.iterator()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:1, 2, 2, 27]  <||@
  Comment 1663 7  <||@
  Comment 1679 {HotSpotMethod<IterableLike.iterator()>}  <||@
  Comment 1684 [stack:4, stack:40, stack:48]at scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 1, duringCall: true, rethrow: false]
              |0  |1                                                                           
     locals:  |-  |vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
  at scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                           
     locals:  |stack:40|QWORD[.]  |vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 1685 908 rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1688 910 NULLCHECK [rbx|QWORD[.]] state [bci:6, 2, 2, 27]  <||@
  Comment 1688 [rbx:0, stack:4, stack:40, stack:48]at scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6, duringCall: false, rethrow: false]
              |0             |1                                                                           
     locals:  |-             |vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
     stack:   |rbx|QWORD[.]  |                                                                            
  at scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                           
     locals:  |stack:40|QWORD[.]  |vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 1688 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1690 912 rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD  <||@
  Comment 1697 914 rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD  <||@
  Comment 1701 916 CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD  <||@
  Comment 1708 922 r11|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1713 918 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96  <||@
  Comment 1719 block B96 null  <||@
  Comment 1719 934 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1719 938 MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD  <||@
  Comment 1726 940 AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3  <||@
  Comment 1733 942 rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD  <||@
  Comment 1740 944 MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD  <||@
  Comment 1743 946 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed}  <||@
  Comment 1743 {meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed}}  <||@
  Comment 1750 948 MOV [rsi|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1757 950 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1757 952 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1760 954 rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 1764 956 JUMP ~[] destination: B96 -> B97  <||@
  Comment 1764 block B97 null  <||@
  Comment 1764 958 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1764 960 MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 1768 962 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1771 964 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1774 966 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1779 968 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:7, 2, 2, 27]  <||@
  Comment 1779 7  <||@
  Comment 1791 {HotSpotMethod<Iterator.foreach(Function1)>}  <||@
  Comment 1796 [stack:24, stack:40, stack:48]at scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 7, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:56|QWORD[.] 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 1797 970 rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1802 972 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd  <||@
  Comment 1818 15  <||@
  Comment 1824 block B15 null  <||@
  Comment 1824 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1824 138 MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD  <||@
  Comment 1828 140 JUMP ~[] destination: B15 -> B16  <||@
  Comment 1833 block B7 null  <||@
  Comment 1833 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1833 70 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1838 72 MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD  <||@
  Comment 1842 74 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1847 76 JUMP ~[] destination: B7 -> B8  <||@
  Comment 1852 block B98 null  <||@
  Comment 1852 974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1852 976 rbp|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1855 978 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1860 980 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1863 982 rsi|QWORD = MOV [r15|QWORD + 280] size: QWORD  <||@
  Comment 1870 984 rdx|QWORD = LEA [rsi|QWORD + 16] size: QWORD  <||@
  Comment 1874 986 CMP (x: rdx|QWORD, y: [r15|QWORD + 296]) size: QWORD  <||@
  Comment 1881 988 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B100  <||@
  Comment 1887 block B100 null  <||@
  Comment 1887 1000 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1887 1002 MOV (x: [r15|QWORD + 280], y: rdx|QWORD) size: QWORD  <||@
  Comment 1894 1004 AMD64PREFETCH ~[rsi|QWORD + 208] instr: 3  <||@
  Comment 1901 1006 rdx|QWORD = MOV [r11|QWORD + 184] size: QWORD  <||@
  Comment 1908 1008 MOV (x: [rsi|QWORD], y: rdx|QWORD) size: QWORD  <||@
  Comment 1911 1010 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed}  <||@
  Comment 1911 {meta{HotSpotType<Lscala/collection/generic/Growable$$Lambda$4648/0x000000084152d040;, resolved>;compressed}}  <||@
  Comment 1918 1012 MOV [rsi|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1925 1014 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1925 1016 rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1928 1018 JUMP ~[] destination: B100 -> B101  <||@
  Comment 1928 block B101 null  <||@
  Comment 1928 1020 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1928 1022 MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 1931 1024 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1936 1026 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<TraversableOnce.foreach(Function1)> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:27]  <||@
  Comment 1936 7  <||@
  Comment 1951 {HotSpotMethod<TraversableOnce.foreach(Function1)>}  <||@
  Comment 1956 [stack:48]at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 1957 1028 rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1962 1030 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd  <||@
  Comment 1978 15  <||@
  Comment 1984 block B59 null  <||@
  Comment 1984 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1984 548 r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1989 550 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1994 556 JUMP ~[] destination: B59 -> B60  <||@
  Comment 1994 block B60 null  <||@
  Comment 1994 558 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1994 560 rsi|DWORD = MOVE input: int[-56107|0xffffffffffff24d5]  <||@
  Comment 1999 562 JUMP ~[] destination: B60 -> B62  <||@
  Comment 1999 block B62 null  <||@
  Comment 1999 574 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1999 576 MOV (x: [r15|QWORD + 1004], y: rsi|DWORD) size: DWORD  <||@
  Comment 2006 578 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 2017 580 DEOPT info [bci:5, 2, 7, 2, 16, 14]  <||@
  Comment 2017 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f524d2f2da0, value=0x7f5227887084]:0x7f5227887084}  <||@
  Comment 2022 [rbx:0, r9:0, stack:48]at scala.collection.mutable.ResizableArray.ensureSize$(ResizableArray.scala:93) [bci: 5, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.ArrayBuffer.ensureSize(ArrayBuffer.scala:48) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:32|QWORD[.]  |stack:76|DWORD 
  at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:84) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1           
     locals:  |stack:32|QWORD[.]  |r9|QWORD[.] 
  at scala.collection.mutable.ArrayBuffer.$plus$eq(ArrayBuffer.scala:48) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.generic.Growable.loop$1(Growable.scala:53) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.] 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 2023 block B95 null  <||@
  Comment 2023 920 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2023 924 rbp|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 2027 926 rsi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2030 928 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:6, 2, 2, 27]  <||@
  Comment 2030 {Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2035 [rbx:0, rbp:0, stack:40, stack:48]at scala.collection.IterableLike.foreach(IterableLike.scala:71) [bci: 6, duringCall: false, rethrow: false]
              |0             |1                                                                           
     locals:  |-             |vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
     stack:   |rbx|QWORD[.]  |                                                                            
  at scala.collection.IterableLike.foreach$(IterableLike.scala:70) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.AbstractIterable.foreach(Iterable.scala:54) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                                                                           
     locals:  |stack:40|QWORD[.]  |vobject:Growable$$Lambda$4648/0x000000084152d040:0{arg$1=stack:32|QWORD[.]} 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:59) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 2036 930 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2039 932 JUMP ~[] destination: B95 -> B97  <||@
  Comment 2044 block B99 null  <||@
  Comment 2044 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2044 992 rsi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2047 994 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0]  <||@
  Comment 2047 {Stub<NewInstanceStub.newInstance>@0x7f5227979700:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2052 [rbp:0, stack:40, stack:48]at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-   <||@
  Comment 2053 996 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2056 998 JUMP ~[] destination: B99 -> B101  <||@
  Comment 2061 block B61 null  <||@
  Comment 2061 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2061 566 r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2066 568 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2071 570 rsi|DWORD = MOVE input: int[-51995|0xffffffffffff34e5]  <||@
  Comment 2076 572 JUMP ~[] destination: B61 -> B62  <||@
  Comment 2078 block B91 null  <||@
  Comment 2078 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2078 876 MOV [r15|QWORD + 1004] y: -105761 size: DWORD  <||@
  Comment 2089 878 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 2100 880 DEOPT info [bci:0]  <||@
  Comment 2100 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f524d2f2da0, value=0x7f5227887084]:0x7f5227887084}  <||@
  Comment 2105 [rdx:0, stack:48]at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 2106 block B89 null  <||@
  Comment 2106 854 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2106 856 rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2109 858 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2114 860 MOV [r15|QWORD + 1004] y: -22067 size: DWORD  <||@
  Comment 2125 862 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 2136 864 DEOPT info [bci:0, 14]  <||@
  Comment 2136 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f524d2f2da0, value=0x7f5227887084]:0x7f5227887084}  <||@
  Comment 2141 [rbx:0, rsi:0]at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.] 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 2142 block B85 null  <||@
  Comment 2142 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2142 824 rbx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2145 826 r10|DWORD = MOVE input: int[-30771|0xffffffffffff87cd]  <||@
  Comment 2151 828 JUMP ~[] destination: B85 -> B87  <||@
  Comment 2151 block B87 null  <||@
  Comment 2151 838 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2151 840 MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD  <||@
  Comment 2158 842 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 2169 844 DEOPT info [bci:6, 1, 1, 1, 14]  <||@
  Comment 2169 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f524d2f2da0, value=0x7f5227887084]:0x7f5227887084}  <||@
  Comment 2174 [rbx:0, stack:48]at scala.collection.TraversableOnce.nonEmpty(TraversableOnce.scala:111) [bci: 6, duringCall: false, rethrow: false]
              |0          
     locals:  |-          
     stack:   |int[0|0x0] 
  at scala.collection.TraversableOnce.nonEmpty$(TraversableOnce.scala:111) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at scala.collection.AbstractTraversable.nonEmpty(Traversable.scala:104) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |rbx|QWORD[.] 
  at scala.collection.generic.Growable.loop$1(Growable.scala:52) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.] 
  at scala.collection.generic.Growable.$plus$plus$eq(Growable.scala:58) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 2175 block B86 null  <||@
  Comment 2175 830 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2175 832 r10|DWORD = MOVE input: int[-46643|0xffffffffffff49cd]  <||@
  Comment 2181 834 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2186 836 JUMP ~[] destination: B86 -> B87  <||@
  Comment 2188 block B64 null  <||@
  Comment 2188 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2188 596 r10|DWORD = MOVE input: int[-57611|0xffffffffffff1ef5]  <||@
  Comment 2194 598 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2199 600 JUMP ~[] destination: B64 -> B87  <||@
  Comment 2201 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f5227976b80:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2201 4  <||@
  Comment 2207 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f524d2f2da8, value=0x7f5227886e20]:0x7f5227886e20}  <||@
  Comment 2207 5  <||@
  HexCodeFile>>> <|@
end_nmethod
