begin_compilation
  name " HotSpotCompilation-9982[scala.collection.mutable.FlatHashTable.addEntry(Object)]"
  method "HotSpotCompilation-9982[scala.collection.mutable.FlatHashTable.addEntry(Object)]"
  date 1649331761822
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v995 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v995  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! -
uncheckedStamp: a! Lscala/collection/mutable/FlatHashTable;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v413 ?258 ?756 ?756 ?23 ?23 v1041 v1057 ?203 ?175 ?223 ?42 ?47 v1026 v1024 v1040 ?201 v1042 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v451 i434 ?258 ?756 ?23 a399 v358 v1043 ?42 ?175 ?47 v369 v359 v137 ?223 v233 v370 v371 v380 a927 v1058 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry(Object)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 153
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - 
=== Succesors ===
=== Usages ===
v769 i434 v995 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v995 v1010 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
nullCheck: true
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v1058 
=== Succesors ===
next: v996 
=== Usages ===
v859 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v1058 #next: v996  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1057 
=== Succesors ===
next: v494 
=== Usages ===
v856 v989 v991 
=== Predecessor ===
v995 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1057 #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
rawvalue: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 34359738368 shift: 3)
stampKind: Klass*(compressed base: 34359738368 shift: 3)
value: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v996 
y: v988 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v996 y: v988  <|@  <|@
f <@~|@floating>@ <|@
tid j419 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:753) [bci: 22]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:67) [bci: 7]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] â‡ˆ0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v889 v951 v937 v799 v769 v787 v807 v777 v893 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v989 
=== Succesors ===
trueSuccessor: v491 
falseSuccessor: v493 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v989 #trueSuccessor: v491 #falseSuccessor: v493  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v291  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v995 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v995  <|@  <|@
f <@~|@floating>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
displacement: 488
scale: Times1
stamp: void*
=== Inputs ===
base: v859 
index: - 
=== Succesors ===
=== Usages ===
v291 v448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v859 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1023 
=== Succesors ===
next: v13 
=== Usages ===
v10 
=== Predecessor ===
v491 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1023 #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
rawvalue: meta{HotSpotMethod<Object.hashCode()>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<Object.hashCode()>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v291 
y: v9 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v291 y: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i418 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.hubOffset(GraalHotSpotVMConfig) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 4]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:67) [bci: 7]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] â‡Š0000000000000008 â‡ˆ0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j425 i651 i709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 v1077 v224 v279 v427 i644 i703 v883 v946 ?223 ?47 v1076 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v11 
falseSuccessor: v12 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v11 #falseSuccessor: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j438 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j438  <|@  <|@
f <@~|@floating>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
j438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j438 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:753) [bci: 29]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:67) [bci: 7]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1043 
=== Succesors ===
next: v424 
=== Usages ===
j420 j425 
=== Predecessor ===
v11 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1043 #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid j435 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 18]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
rawvalue: 7
stableDimension: 0
stamp: i64 [7] â‡Š0000000000000007 â‡ˆ0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j420 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j420 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$124/0x000000084014b040@3d402943
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 18]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: i64 [0 - 7] â‡ˆ0000000000000007
=== Inputs ===
x: j438 
y: j435 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j438 y: j435  <|@  <|@
f <@~|@floating>@ <|@
tid j436 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 38]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j420 
y: j436 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j420 y: j436  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 44]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v421 
=== Succesors ===
trueSuccessor: v423 
falseSuccessor: v422 
=== Usages ===
=== Predecessor ===
j438 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v421 #trueSuccessor: v423 #falseSuccessor: v422  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:72) [bci: 47]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid j425 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$172/0x0000000840292440@2e0f974
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:72) [bci: 54]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: i64 [0 - 72057594037927935] â‡ˆ00ffffffffffffff
=== Inputs ===
x: j438 
y: i418 
=== Succesors ===
=== Usages ===
i426 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j438 y: i418  <|@  <|@
f <@~|@floating>@ <|@
tid i426 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$162/0x0000000840295840@304a2d13
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$163/0x0000000840295040@7fd4c829
inputBits: 64
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:72) [bci: 60]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
resultBits: 32
stamp: i32
=== Inputs ===
value: j425 
=== Succesors ===
=== Usages ===
v427 i22 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j425  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:73) [bci: 72]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i426 
y: i48 
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i426 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:73) [bci: 83]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v427 
=== Succesors ===
trueSuccessor: v432 
falseSuccessor: v431 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v427 #trueSuccessor: v432 #falseSuccessor: v431  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:77) [bci: 88]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v430  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:77) [bci: 88]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v432 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:74) [bci: 86]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v16  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
v431 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:77) [bci: 88]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v428  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:77) [bci: 88]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:77) [bci: 88]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v428 v430 
=== Succesors ===
next: i434 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v428 v430 #next: i434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i434 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: identity_hashcode(Object)int
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e095940
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.identityHashCode(ForeignCallDescriptor, Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:77) [bci: 92]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: i32
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: a2 
=== Succesors ===
next: v485 
=== Usages ===
i22 
=== Predecessor ===
v429 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: a2 #next: v485  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
i434 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1023 
=== Succesors ===
next: j450 
=== Usages ===
v1044 v451 
=== Predecessor ===
v12 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1023 #next: j450  <|@  <|@
f <@~|@floating>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: v448 
index: - 
=== Succesors ===
=== Usages ===
j450 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j450 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1044 
=== Succesors ===
next: i18 
=== Usages ===
v451 
=== Predecessor ===
v448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1044 #next: i18  <|@  <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
referencedType: [null]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@776908f1
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
computedAddress: j450 
metaspaceMethod: v448 
arguments: a2 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j450 metaspaceMethod: v448 arguments: a2  <|@  <|@
tid ?756 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 153
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - a1 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
polymorphic: true
stamp: i32
targetMethod: Indirect#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v451 
stateDuring: ?756 
=== Succesors ===
next: v20 
=== Usages ===
i22 
=== Predecessor ===
j450 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v451 stateDuring: ?756 #next: v20  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
i18 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v21 
values: i426 i18 i434 
=== Succesors ===
=== Usages ===
?23 i129 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v21 values: i426 i18 i434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v16 v20 v485 
=== Succesors ===
next: a997 
=== Usages ===
i22 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v16 v20 v485 #next: a997  <|@  <|@
f <@~|@floating>@ <|@
tid a296 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 0]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
rawvalue: Class:scala.util.hashing.package$
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:scala.util.hashing.package$]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1025 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: a296 
index: - 
=== Succesors ===
=== Usages ===
a997 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a296 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a997 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: package$.MODULE$
nodeSourcePosition: at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 0]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
nullCheck: false
stamp: n# Lscala/util/hashing/package$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1025 
=== Succesors ===
next: v1078 
=== Usages ===
v1078 
=== Predecessor ===
v21 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1025 #next: v1078  <|@  <|@
tid ?23 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 153
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - a1 i22 
=== Succesors ===
=== Usages ===
v777 v1078 i999 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - a1 i22  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?23 
object: a997 
=== Succesors ===
next: a998 
=== Usages ===
=== Predecessor ===
a997 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?23 object: a997 #next: a998  <|@  <|@
f <@~|@floating>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a998 a1005 a1020 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a998 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.table
nodeSourcePosition: at scala.collection.mutable.HashSet.table(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 15]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1026 
=== Succesors ===
next: i999 
=== Usages ===
a305 v1027 
=== Predecessor ===
v1078 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1026 #next: i999  <|@  <|@
f <@~|@floating>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a998 
=== Succesors ===
=== Usages ===
i999 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a998  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i999 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 20]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?23 
guard: - 
address: v1027 
=== Succesors ===
next: i1000 
=== Usages ===
i114 v313 
=== Predecessor ===
a998 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?23 guard: - address: v1027 #next: i1000  <|@  <|@
f <@~|@floating>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1000 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1000 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.seedvalue
nodeSourcePosition: at scala.collection.mutable.HashSet.seedvalue(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 3]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1024 
=== Succesors ===
next: v506 
=== Usages ===
i122 i123 
=== Predecessor ===
i999 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1024 #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 22]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] â‡Š00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i114 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 22]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i999 
y: i113 
=== Succesors ===
=== Usages ===
i116 i119 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i999 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.util.hashing.package$.byteswap32(package.scala:26) [bci: 1]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
rawvalue: -1640532531
stableDimension: 0
stamp: i32 [-1640532531] â‡Š000000009e3775cd â‡ˆ000000009e3775cd
stampKind: i32
value: int[-1640532531|0xffffffff9e3775cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i129 i131 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$184/0x00000008402b6840@66fb48d9
nodeSourcePosition: at scala.util.hashing.package$.byteswap32(package.scala:26) [bci: 3]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32
=== Inputs ===
x: i22 
y: i128 
=== Succesors ===
=== Usages ===
i130 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i22 y: i128  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.reverseBytes(int) [bci: -1]
at scala.util.hashing.package$.byteswap32(package.scala:27) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32
=== Inputs ===
value: i129 
=== Succesors ===
=== Usages ===
i131 
=== Predecessor ===
- >@ <|@
instruction <@ReverseBytes|@org.graalvm.compiler.replacements.nodes.ReverseBytesNode>@ value: i129  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$184/0x00000008402b6840@66fb48d9
nodeSourcePosition: at scala.util.hashing.package$.byteswap32(package.scala:28) [bci: 9]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32
=== Inputs ===
x: i130 
y: i128 
=== Succesors ===
=== Usages ===
i122 i124 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i130 y: i128  <|@  <|@
f <@~|@floating>@ <|@
tid i122 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$172/0x0000000840292440@2e0f974
nodeSourcePosition: at java.base@11.0.14.1/java.lang.Integer.rotateRight(Integer.java:1734) [bci: 2]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 8]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32
=== Inputs ===
x: i131 
y: i1000 
=== Succesors ===
=== Usages ===
i125 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i131 y: i1000  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$1390/0x00000008409a4840@1c7512a
nodeSourcePosition: at java.base@11.0.14.1/java.lang.Integer.rotateRight(Integer.java:1734) [bci: 5]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 8]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32
=== Inputs ===
value: i1000 
=== Succesors ===
=== Usages ===
i124 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i1000  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$126/0x000000084014a840@131afb18
nodeSourcePosition: at java.base@11.0.14.1/java.lang.Integer.rotateRight(Integer.java:1734) [bci: 6]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 8]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32
=== Inputs ===
x: i131 
y: i123 
=== Succesors ===
=== Usages ===
i125 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i131 y: i123  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$127/0x000000084014ac40@4f58fb43
nodeSourcePosition: at java.base@11.0.14.1/java.lang.Integer.rotateRight(Integer.java:1734) [bci: 7]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 8]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32
=== Inputs ===
x: i122 
y: i124 
=== Succesors ===
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i122 y: i124  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:334) [bci: 25]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] â‡Š0000000000000020 â‡ˆ0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
i117 v626 v941 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.bitCount(int) [bci: -1]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:334) [bci: 28]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32 [0 - 32] â‡ˆ000000000000003f
=== Inputs ===
value: i114 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@BitCount|@org.graalvm.compiler.replacements.nodes.BitCountNode>@ value: i114  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$191/0x00000008402b4040@599896a8
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:334) [bci: 31]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32 [0 - 32] â‡ˆ000000000000003f
=== Inputs ===
x: i115 
y: i116 
=== Succesors ===
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i115 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$172/0x0000000840292440@2e0f974
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:334) [bci: 32]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32
=== Inputs ===
x: i125 
y: i117 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i125 y: i117  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$124/0x000000084014b040@3d402943
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:334) [bci: 34]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32
=== Inputs ===
x: i114 
y: i118 
=== Succesors ===
=== Usages ===
i272 v1028 ?223 i228 ?258 v313 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i114 y: i118  <|@  <|@
f <@~|@floating>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:154) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@15088f07
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i119 
y: i999 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i119 y: i999  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:154) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v313 
=== Succesors ===
trueSuccessor: v503 
falseSuccessor: v505 
=== Usages ===
=== Predecessor ===
i1000 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v313 #trueSuccessor: v503 #falseSuccessor: v505  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:154) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1001 
=== Usages ===
a1001 
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1001  <|@  <|@
f <@~|@floating>@ <|@
tid a305 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.mutable.HashSet.table(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 15]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a998 
=== Succesors ===
=== Usages ===
v1028 a283 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a998  <|@  <|@
f <@~|@floating>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a305 
index: i119 
=== Succesors ===
=== Usages ===
a1001 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a305 index: i119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1001 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:154) [bci: 18]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v503 
address: v1028 
=== Succesors ===
next: v222 
=== Usages ===
a323 v372 v1060 
=== Predecessor ===
v503 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v503 address: v1028 #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1001 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1001  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 35]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i56 i76 v105 v104 i659 i228 i717 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:155) [bci: 21]
stamp: void
trueSuccessorProbability: 0.7174130347860855
=== Inputs ===
condition: v372 
=== Succesors ===
trueSuccessor: v220 
falseSuccessor: v221 
=== Usages ===
=== Predecessor ===
a1001 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v372 #trueSuccessor: v220 #falseSuccessor: v221  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v270  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
v220 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1002 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1002  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1001 
=== Succesors ===
=== Usages ===
v1002 v1004 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1001  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1060 
=== Succesors ===
next: v236 
=== Usages ===
v868 
=== Predecessor ===
v221 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1060 #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid a323 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:154) [bci: 18]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1001 
=== Succesors ===
=== Usages ===
v370 v371 v233 v380 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1001  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:122) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a323 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a323  <|@  <|@
f <@*|@fixed>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:122) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
trueSuccessorProbability: 0.07891854419410749
=== Inputs ===
condition: v233 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v235 
=== Usages ===
=== Predecessor ===
v1002 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v233 #trueSuccessor: v234 #falseSuccessor: v235  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:122) [bci: 5]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1077 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1077  <|@  <|@
f <@*|@fixed>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 33]
stamp: void
=== Inputs ===
result: i48 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i48 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 7]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1003  <|@  <|@
f <@~|@floating>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1002 
=== Succesors ===
=== Usages ===
v1035 v1046 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1002  <|@  <|@
f <@~|@floating>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: v868 
index: - 
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v868 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:164) [bci: 54]
at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:130) [bci: 1]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1046 
=== Succesors ===
next: v240 
=== Usages ===
v586 
=== Predecessor ===
v235 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1046 #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:130) [bci: 1]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
rawvalue: meta{HotSpotType<Ljava/lang/Number;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/Number;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v549 v586 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:164) [bci: 58]
at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:130) [bci: 1]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1003 
y: v541 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1003 y: v541  <|@  <|@
tid ?258 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 156
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i119 - 
=== Succesors ===
=== Usages ===
?257 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i119 -  <|@  <|@
tid ?257 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<BoxesRunTime.equals(Object, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: BoxesRunTime.java
sourceLine: 123
stackSize: 0
=== Inputs ===
outerFrameState: ?258 
values: - - 
=== Succesors ===
=== Usages ===
?759 ?758 ?757 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?258 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:145) [bci: 50]
at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:132) [bci: 17]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
rawvalue: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 34359738368 shift: 3)
stampKind: Klass*(compressed base: 34359738368 shift: 3)
value: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v993 v994 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:130) [bci: 1]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
trueSuccessorProbability: 0.05476550680786685
=== Inputs ===
condition: v586 
=== Succesors ===
trueSuccessor: v238 
falseSuccessor: v239 
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v586 #trueSuccessor: v238 #falseSuccessor: v239  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 7]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i244 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i244  <|@  <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
referencedType: [null]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@16c89608
stamp: void
targetMethod: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)>
=== Inputs ===
arguments: a323 a2 
=== Succesors ===
=== Usages ===
i244 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a323 a2  <|@  <|@
tid ?757 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<BoxesRunTime.equals2(Object, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: BoxesRunTime.java
sourceLine: 131
stackSize: 0
=== Inputs ===
outerFrameState: ?257 
values: - - 
=== Succesors ===
=== Usages ===
i244 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?257 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i244 <|@
d <@d|@=== Debug Properties ===
bci: 12
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#BoxesRunTime.equalsNumObject
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v370 
stateDuring: ?757 
=== Succesors ===
next: v262 
=== Usages ===
i261 
=== Predecessor ===
v238 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v370 stateDuring: ?757 #next: v262  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
i244 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:132) [bci: 16]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1004 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:144) [bci: 39]
at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:132) [bci: 17]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1060 
=== Succesors ===
next: v825 
=== Usages ===
v994 
=== Predecessor ===
v239 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1060 #next: v825  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:145) [bci: 50]
at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:132) [bci: 17]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1004 
y: v992 
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1004 y: v992  <|@  <|@
f <@*|@fixed>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:132) [bci: 17]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
trueSuccessorProbability: 0.029046971273105515
=== Inputs ===
condition: v994 
=== Succesors ===
trueSuccessor: v823 
falseSuccessor: v822 
=== Usages ===
=== Predecessor ===
v1004 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v994 #trueSuccessor: v823 #falseSuccessor: v822  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 23]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i252 
=== Usages ===
=== Predecessor ===
v825 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i252  <|@  <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
referencedType: [null]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@28083eb1
stamp: void
targetMethod: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)>
=== Inputs ===
arguments: a323 a2 
=== Succesors ===
=== Usages ===
i252 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a323 a2  <|@  <|@
tid ?759 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<BoxesRunTime.equals2(Object, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: BoxesRunTime.java
sourceLine: 133
stackSize: 0
=== Inputs ===
outerFrameState: ?257 
values: - - 
=== Succesors ===
=== Usages ===
i252 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?257 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i252 <|@
d <@d|@=== Debug Properties ===
bci: 28
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#BoxesRunTime.equalsCharObject
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v371 
stateDuring: ?759 
=== Succesors ===
next: v263 
=== Usages ===
i261 
=== Predecessor ===
v823 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v371 stateDuring: ?759 #next: v263  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
i252 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:134) [bci: 32]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v377 
=== Usages ===
=== Predecessor ===
v825 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
displacement: 472
scale: Times1
stamp: void*
=== Inputs ===
base: v868 
index: - 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v868 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1035 
=== Succesors ===
next: j379 
=== Usages ===
v1036 v380 
=== Predecessor ===
v822 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1035 #next: j379  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: v377 
index: - 
=== Succesors ===
=== Usages ===
j379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v377 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j379 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1036 
=== Succesors ===
next: i255 
=== Usages ===
v380 
=== Predecessor ===
v377 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1036 #next: i255  <|@  <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
referencedType: [null]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@4327902f
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j379 
metaspaceMethod: v377 
arguments: a323 a2 
=== Succesors ===
=== Usages ===
i255 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j379 metaspaceMethod: v377 arguments: a323 a2  <|@  <|@
tid ?758 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<BoxesRunTime.equals2(Object, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: BoxesRunTime.java
sourceLine: 137
stackSize: 0
=== Inputs ===
outerFrameState: ?257 
values: - - 
=== Succesors ===
=== Usages ===
i255 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?257 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i255 <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
polymorphic: true
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Indirect#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v380 
stateDuring: ?758 
=== Succesors ===
next: v264 
=== Usages ===
i261 
=== Predecessor ===
j379 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v380 stateDuring: ?758 #next: v264  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
i255 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i261 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v259 
values: i244 i252 i255 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v259 values: i244 i252 i255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v262 v263 v264 
=== Succesors ===
next: v227 
=== Usages ===
i261 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v262 v263 v264 #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i261 
y: i48 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i261 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stamp: void
trueSuccessorProbability: 0.7817474354439335
=== Inputs ===
condition: v224 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v226 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v224 #trueSuccessor: v225 #falseSuccessor: v226  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1005 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1005 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.table
nodeSourcePosition: at scala.collection.mutable.HashSet.table(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 38]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1026 
=== Succesors ===
next: i1006 
=== Usages ===
a325 v1029 
=== Predecessor ===
v225 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1026 #next: i1006  <|@  <|@
tid ?223 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 156
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i119 - i48 
=== Succesors ===
=== Usages ===
v807 i230 i1006 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i119 - i48  <|@  <|@
f <@~|@floating>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1005 
=== Succesors ===
=== Usages ===
i1006 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1006 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 43]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?223 
guard: - 
address: v1029 
=== Succesors ===
next: i230 
=== Usages ===
i230 v332 
=== Predecessor ===
a1005 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?223 guard: - address: v1029 #next: i230  <|@  <|@
f <@~|@floating>@ <|@
tid i228 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 36]
stamp: i32
=== Inputs ===
x: i119 
y: i55 
=== Succesors ===
=== Usages ===
i230 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i119 y: i55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i230 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 44]
op: REM
stamp: i32 [-2147483646 - 2147483646]
type: SIGNED
=== Inputs ===
stateBefore: ?223 
x: i228 
y: i1006 
zeroCheck: - 
=== Succesors ===
next: v514 
=== Usages ===
v1030 i277 v332 
=== Predecessor ===
i1006 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?223 x: i228 y: i1006 zeroCheck: - #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@15088f07
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i230 
y: i1006 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i230 y: i1006  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v332 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v513 
=== Usages ===
=== Predecessor ===
i230 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v332 #trueSuccessor: v511 #falseSuccessor: v513  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1007 
=== Usages ===
a1007 
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1007  <|@  <|@
f <@~|@floating>@ <|@
tid a325 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.mutable.HashSet.table(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 38]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1005 
=== Succesors ===
=== Usages ===
v1030 a281 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1005  <|@  <|@
f <@~|@floating>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a325 
index: i230 
=== Succesors ===
=== Usages ===
a1007 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a325 index: i230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1007 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v511 
address: v1030 
=== Succesors ===
next: v32 
=== Usages ===
a340 
=== Predecessor ===
v511 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v511 address: v1030 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid a340 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1007 
=== Succesors ===
=== Usages ===
a278 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1007  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:155) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
a1007 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a278 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v33 
values: a340 a357 
=== Succesors ===
=== Usages ===
v1059 v38 v369 v137 v359 v358 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v33 values: a340 a357  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483646 - 2147483646]
valueDescription: i32
=== Inputs ===
merge: v33 
values: i230 i61 
=== Succesors ===
=== Usages ===
?175 i272 ?47 i56 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v33 values: i230 i61  <|@  <|@
f <@~|@floating>@ <|@
tid a281 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v33 
values: a325 a342 
=== Succesors ===
=== Usages ===
a283 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v33 values: a325 a342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 0.283551449833205
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:155) [bci: 20]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v32 
=== Succesors ===
next: v44 
=== Usages ===
a278 i277 v40 v52 v66 a281 v539 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v32 #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:155) [bci: 21]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a278 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a278  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:155) [bci: 21]
stamp: void
trueSuccessorProbability: 0.7174130347860855
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v40 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v40 #falseSuccessor: v43  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v269  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
v40 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i272 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v268 
values: i277 i119 
=== Succesors ===
=== Usages ===
?42 ?203 v1039 v386 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v268 values: i277 i119  <|@  <|@
f <@~|@floating>@ <|@
tid a283 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v268 
values: a281 a305 
=== Succesors ===
=== Usages ===
v1039 v1061 v1037 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v268 values: a281 a305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v269 v270 
=== Succesors ===
next: i1008 
=== Usages ===
i272 a283 v1011 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v269 v270 #next: i1008  <|@  <|@
tid ?42 <|@
d <@d|@=== Debug Properties ===
bci: 58
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 161
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i272 - 
=== Succesors ===
=== Usages ===
v787 i1008 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i272 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a283 
index: - 
=== Succesors ===
=== Usages ===
i1008 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a283 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1008 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?42 
guard: - 
address: v1037 
=== Succesors ===
next: v1009 
=== Usages ===
v386 
=== Predecessor ===
v268 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?42 guard: - address: v1037 #next: v1009  <|@  <|@
f <@~|@floating>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a283 
index: - 
=== Succesors ===
=== Usages ===
v1009 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a283 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1061 
=== Succesors ===
next: v522 
=== Usages ===
v874 
=== Predecessor ===
i1008 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1061 #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@15088f07
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i272 
y: i1008 
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i272 y: i1008  <|@  <|@
f <@*|@fixed>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v386 
=== Succesors ===
trueSuccessor: v519 
falseSuccessor: v521 
=== Usages ===
=== Predecessor ===
v1009 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v386 #trueSuccessor: v519 #falseSuccessor: v521  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1010 
=== Usages ===
v400 
=== Predecessor ===
v522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1010  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:215) [bci: 46]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1058 
=== Succesors ===
next: v1011 
=== Usages ===
v877 
=== Predecessor ===
v519 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1058 #next: v1011  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1009 
=== Succesors ===
=== Usages ===
v1038 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1009  <|@  <|@
f <@~|@floating>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: v874 
index: - 
=== Succesors ===
=== Usages ===
v1011 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v874 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ObjArrayKlass::_element_klass:final
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: Klass*!
=== Inputs ===
stateBefore: - 
guard: v268 
address: v1038 
=== Succesors ===
next: i663 
=== Usages ===
v667 v655 v1047 v629 v636 
=== Predecessor ===
v1010 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v268 address: v1038 #next: i663  <|@  <|@
f <@~|@floating>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: v1011 
index: - 
=== Succesors ===
=== Usages ===
i663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v1011 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: Klass::_super_check_offset:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:76) [bci: 10]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1047 
=== Succesors ===
next: v1012 
=== Usages ===
v626 j627 
=== Predecessor ===
v1011 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1047 #next: v1012  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:215) [bci: 46]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1010 
=== Succesors ===
=== Usages ===
v1048 v636 v1049 v1052 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1010  <|@  <|@
f <@~|@floating>@ <|@
tid j627 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 32
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 36]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i663 
=== Succesors ===
=== Usages ===
v1048 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i663  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: v877 
index: j627 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v877 index: j627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 36]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1048 
=== Succesors ===
next: v632 
=== Usages ===
v629 
=== Predecessor ===
i663 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1048 #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 40]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1011 
y: v1012 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1011 y: v1012  <|@  <|@
f <@~|@floating>@ <|@
tid i649 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] â‡Š0000000000000003 â‡ˆ0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i650 i708 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 43]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v629 
=== Succesors ===
trueSuccessor: v630 
falseSuccessor: v631 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v629 #trueSuccessor: v630 #falseSuccessor: v631  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:81) [bci: 46]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
v630 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:90) [bci: 70]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:77) [bci: 21]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i663 
y: i115 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i663 y: i115  <|@  <|@
f <@~|@floating>@ <|@
tid i791 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -102699
stableDimension: 0
stamp: i32 [-102699] â‡Š00000000fffe6ed5 â‡ˆ00000000fffe6ed5
stampKind: i32
value: int[-102699|0xfffffffffffe6ed5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i785 i785 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:90) [bci: 72]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v626 
=== Succesors ===
trueSuccessor: v633 
falseSuccessor: v634 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v626 #trueSuccessor: v633 #falseSuccessor: v634  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 84]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 2]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v877 
y: v1011 
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v877 y: v1011  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 5]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v636 
=== Succesors ===
trueSuccessor: v637 
falseSuccessor: v638 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v636 #trueSuccessor: v637 #falseSuccessor: v638  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:101) [bci: 8]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v675  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
v637 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 17]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: j664 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j664  <|@  <|@
f <@~|@floating>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: v877 
index: - 
=== Succesors ===
=== Usages ===
j664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v877 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j664 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 27]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1049 
=== Succesors ===
next: i665 
=== Usages ===
v1050 v1051 
=== Predecessor ===
v638 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1049 #next: i665  <|@  <|@
f <@~|@floating>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j664 
index: - 
=== Succesors ===
=== Usages ===
i665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i665 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 41]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1050 
=== Succesors ===
next: v642 
=== Usages ===
v645 
=== Predecessor ===
j664 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1050 #next: v642  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
i665 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i48 i659 
=== Succesors ===
=== Usages ===
v645 i650 i659 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v643 values: i48 i659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v642 
=== Succesors ===
next: v648 
=== Usages ===
i644 v647 v657 v660 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v642 #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@c50510
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i644 
y: i665 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i644 y: i665  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v645 
=== Succesors ===
trueSuccessor: v646 
falseSuccessor: v647 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v645 #trueSuccessor: v646 #falseSuccessor: v647  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 56]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: j666 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j666  <|@  <|@
f <@~|@floating>@ <|@
tid i650 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$126/0x000000084014a840@131afb18
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i32 [-2147483648 - 2147483640] â‡ˆ00000000fffffff8
=== Inputs ===
x: i644 
y: i649 
=== Succesors ===
=== Usages ===
i651 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i644 y: i649  <|@  <|@
f <@~|@floating>@ <|@
tid i651 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 12]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i32 [-2147483648 - 2147483640] â‡ˆ00000000fffffff8
=== Inputs ===
x: i650 
y: i418 
=== Succesors ===
=== Usages ===
j652 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i650 y: i418  <|@  <|@
f <@~|@floating>@ <|@
tid j652 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 32
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] â‡ˆfffffffffffffff8
=== Inputs ===
value: i651 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i651  <|@  <|@
f <@~|@floating>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j664 
index: j652 
=== Succesors ===
=== Usages ===
j666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: j652  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j666 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1051 
=== Succesors ===
next: v658 
=== Usages ===
v654 
=== Predecessor ===
v646 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1051 #next: v658  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 22]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: Klass*
=== Inputs ===
input: j666 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j666  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 66]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v654 
y: v1011 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v654 y: v1011  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 72]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v655 
=== Succesors ===
trueSuccessor: v657 
falseSuccessor: v656 
=== Usages ===
=== Predecessor ===
j666 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v655 #trueSuccessor: v657 #falseSuccessor: v656  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:110) [bci: 75]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v643 
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v643 #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: v877 
index: - 
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v877 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:110) [bci: 86]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1052 
value: v1011 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v676 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1052 value: v1011 stateAfter: - lastLocationAccess: - #next: v676  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
v667 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v674 v675 v676 
=== Succesors ===
next: a1013 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v674 v675 v676 #next: a1013  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1013 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1013 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.sizemap
nodeSourcePosition: at scala.collection.mutable.HashSet.sizemap(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.nnSizeMapAdd(FlatHashTable.scala:259) [bci: 1]
at scala.collection.mutable.FlatHashTable.nnSizeMapAdd$(FlatHashTable.scala:259) [bci: 2]
at scala.collection.mutable.HashSet.nnSizeMapAdd(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:163) [bci: 83]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1041 
=== Succesors ===
next: v530 
=== Usages ===
v457 
=== Predecessor ===
v833 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1041 #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.nnSizeMapAdd(FlatHashTable.scala:259) [bci: 6]
at scala.collection.mutable.FlatHashTable.nnSizeMapAdd$(FlatHashTable.scala:259) [bci: 2]
at scala.collection.mutable.HashSet.nnSizeMapAdd(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:163) [bci: 83]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1013 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1013  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.nnSizeMapAdd(FlatHashTable.scala:259) [bci: 6]
at scala.collection.mutable.FlatHashTable.nnSizeMapAdd$(FlatHashTable.scala:259) [bci: 2]
at scala.collection.mutable.HashSet.nnSizeMapAdd(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:163) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v457 
=== Succesors ===
trueSuccessor: v527 
falseSuccessor: v529 
=== Usages ===
=== Predecessor ===
a1013 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v457 #trueSuccessor: v527 #falseSuccessor: v529  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.nnSizeMapAdd(FlatHashTable.scala:259) [bci: 33]
at scala.collection.mutable.FlatHashTable.nnSizeMapAdd$(FlatHashTable.scala:259) [bci: 2]
at scala.collection.mutable.HashSet.nnSizeMapAdd(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:163) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: j879 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j879  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j879 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:773) [bci: 3]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:182) [bci: 11]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a880 
=== Usages ===
v1062 v1064 v1066 
=== Predecessor ===
v527 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: a880  <|@  <|@
f <@~|@floating>@ <|@
tid a878 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a880 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:184) [bci: 22]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
predefinedStamp: [null]
stamp: a - NULL
=== Inputs ===
object: a878 
=== Succesors ===
next: j881 
=== Usages ===
=== Predecessor ===
j879 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a878 #next: j881  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a283 
index: i272 
=== Succesors ===
=== Usages ===
v400 j881 j928 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a283 index: i272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j881 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:185) [bci: 28]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1039 
=== Succesors ===
next: i907 
=== Usages ===
v1063 
=== Predecessor ===
a880 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1039 #next: i907  <|@  <|@
f <@~|@floating>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j879 
index: - 
=== Succesors ===
=== Usages ===
i907 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j879 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i907 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:187) [bci: 48]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v1062 
=== Succesors ===
next: v886 
=== Usages ===
i908 
=== Predecessor ===
j881 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1062 #next: v886  <|@  <|@
f <@~|@floating>@ <|@
tid i908 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:187) [bci: 48]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i907 
=== Succesors ===
=== Usages ===
v883 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i907  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:200) [bci: 206]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i908 
y: i48 
=== Succesors ===
=== Usages ===
v886 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i908 y: i48  <|@  <|@
f <@~|@floating>@ <|@
tid j905 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:220) [bci: 375]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] â‡Šfffffffffffffff8 â‡ˆfffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j906 j964 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:200) [bci: 217]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v883 
=== Succesors ===
trueSuccessor: v884 
falseSuccessor: v885 
=== Usages ===
=== Predecessor ===
i907 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v883 #trueSuccessor: v884 #falseSuccessor: v885  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:230) [bci: 427]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v917 
=== Usages ===
=== Predecessor ===
v886 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v917  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v884 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:203) [bci: 220]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: a909 
=== Usages ===
=== Predecessor ===
v886 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a909  <|@  <|@
f <@~|@floating>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j881 
index: - 
=== Succesors ===
=== Usages ===
a909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j881 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a909 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:204) [bci: 236]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1063 
=== Succesors ===
next: j888 
=== Usages ===
a910 
=== Predecessor ===
v885 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1063 #next: j888  <|@  <|@
f <@~|@floating>@ <|@
tid a910 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:204) [bci: 236]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
op: Uncompress
stamp: a -
=== Inputs ===
value: a909 
=== Succesors ===
=== Usages ===
j888 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a909  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:204) [bci: 239]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a910 
=== Succesors ===
next: v892 
=== Usages ===
v889 a900 v913 
=== Predecessor ===
a909 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a910 #next: v892  <|@  <|@
f <@~|@floating>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:212) [bci: 296]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j888 
y: j419 
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j888 y: j419  <|@  <|@
f <@*|@fixed>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:212) [bci: 304]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v889 
=== Succesors ===
trueSuccessor: v891 
falseSuccessor: v890 
=== Usages ===
=== Predecessor ===
j888 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v889 #trueSuccessor: v891 #falseSuccessor: v890  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572430233452165828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:230) [bci: 427]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v918 
=== Usages ===
=== Predecessor ===
v892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v918  <|@  <|@
f <@*|@fixed>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v891 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:213) [bci: 307]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: j911 
=== Usages ===
=== Predecessor ===
v892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j911  <|@  <|@
f <@~|@floating>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j879 
index: - 
=== Succesors ===
=== Usages ===
j911 v914 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j879 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j911 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:217) [bci: 331]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1066 
=== Succesors ===
next: v896 
=== Usages ===
v893 j906 v1065 
=== Predecessor ===
v890 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1066 #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:218) [bci: 345]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j911 
y: j419 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j911 y: j419  <|@  <|@
f <@*|@fixed>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:218) [bci: 351]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v893 
=== Succesors ===
trueSuccessor: v894 
falseSuccessor: v895 
=== Usages ===
=== Predecessor ===
j911 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v893 #trueSuccessor: v894 #falseSuccessor: v895  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:226) [bci: 414]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: a900 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:226) [bci: 419]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: a -
trackedPointer: true
=== Inputs ===
input: j888 
=== Succesors ===
next: v901 
=== Usages ===
v901 
=== Predecessor ===
v894 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j888 #next: v901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: write_barrier_pre(Object)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e095940
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:226) [bci: 424]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a900 
=== Succesors ===
next: v920 
=== Usages ===
=== Predecessor ===
a900 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a900 #next: v920  <|@  <|@
f <@*|@fixed>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v901 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:219) [bci: 354]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: j912 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j912  <|@  <|@
f <@~|@floating>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: j879 
index: - 
=== Succesors ===
=== Usages ===
j912 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j879 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j912 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:219) [bci: 362]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1064 
=== Succesors ===
next: v913 
=== Usages ===
v1065 
=== Predecessor ===
v895 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1064 #next: v913  <|@  <|@
f <@~|@floating>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
=== Inputs ===
base: j911 
index: j912 
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j911 index: j912  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Log
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:223) [bci: 397]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1065 
value: j888 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v914 
=== Usages ===
=== Predecessor ===
j912 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1065 value: j888 stateAfter: - lastLocationAccess: - #next: v914  <|@  <|@
f <@~|@floating>@ <|@
tid j906 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:220) [bci: 375]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i64
=== Inputs ===
x: j911 
y: j905 
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j911 y: j905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Index
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:224) [bci: 408]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1066 
value: j906 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v919 
=== Usages ===
=== Predecessor ===
v913 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1066 value: j906 stateAfter: - lastLocationAccess: - #next: v919  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v914 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v917 v918 v919 v920 
=== Succesors ===
next: v400 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v917 v918 v919 v920 #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid a399 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v519 
address: v1039 
value: a399 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j926 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v519 address: v1039 value: a399 stateAfter: - lastLocationAccess: - #next: j926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j926 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:773) [bci: 3]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:235) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a927 
=== Usages ===
v1067 v1068 
=== Predecessor ===
v400 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: a927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:236) [bci: 8]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
predefinedStamp: [null]
stamp: a Ljava/lang/Object;
=== Inputs ===
object: a2 
=== Succesors ===
next: j928 
=== Usages ===
j929 
=== Predecessor ===
j926 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2 #next: j928  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j928 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:242) [bci: 35]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1039 
=== Succesors ===
next: j929 
=== Usages ===
j930 j932 
=== Predecessor ===
a927 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1039 #next: j929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j929 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:256) [bci: 137]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a927 
=== Succesors ===
next: v936 
=== Usages ===
j930 v937 
=== Predecessor ===
j928 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a927 #next: v936  <|@  <|@
f <@~|@floating>@ <|@
tid j930 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$185/0x00000008402b6c40@7f610884
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:260) [bci: 151]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i64
=== Inputs ===
x: j928 
y: j929 
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j928 y: j929  <|@  <|@
f <@~|@floating>@ <|@
tid j960 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:275) [bci: 254]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
rawvalue: -1048576
stableDimension: 0
stamp: i64 [-1048576] â‡Šfffffffffff00000 â‡ˆfffffffffff00000
stampKind: i64
value: long[-1048576|0xfffffffffff00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:275) [bci: 254]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
x: j930 
y: j960 
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j930 y: j960  <|@  <|@
f <@*|@fixed>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:275) [bci: 262]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v961 
=== Succesors ===
trueSuccessor: v934 
falseSuccessor: v935 
=== Usages ===
=== Predecessor ===
j929 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v961 #trueSuccessor: v934 #falseSuccessor: v935  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v977 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v977  <|@  <|@
f <@*|@fixed>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v934 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:276) [bci: 265]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v940 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v940  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:279) [bci: 279]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j929 
y: j419 
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j929 y: j419  <|@  <|@
f <@*|@fixed>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:279) [bci: 287]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v937 
=== Succesors ===
trueSuccessor: v939 
falseSuccessor: v938 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v937 #trueSuccessor: v939 #falseSuccessor: v938  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v978  <|@  <|@
f <@*|@fixed>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v939 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:280) [bci: 290]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: i965 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i965  <|@  <|@
f <@~|@floating>@ <|@
tid i931 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:264) [bci: 170]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] â‡Š0000000000000009 â‡ˆ0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j932 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j932 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$172/0x0000000840292440@2e0f974
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:264) [bci: 173]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i64 [0 - 36028797018963967] â‡ˆ007fffffffffffff
=== Inputs ===
x: j928 
y: i931 
=== Succesors ===
=== Usages ===
j933 v1070 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j928 y: i931  <|@  <|@
f <@~|@floating>@ <|@
tid j959 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:116) [bci: 6]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:265) [bci: 180]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
rawvalue: 139991352238080
stableDimension: 0
stamp: i64 [139991352238080] â‡Š00007f5246d26000 â‡ˆ00007f5246d26000
stampKind: i64
value: long[139991352238080|0x7f5246d26000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j933 v1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j932 
index: j959 
=== Succesors ===
=== Usages ===
i965 i967 v969 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j932 index: j959  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i965 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: GC-Card
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:280) [bci: 296]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v1070 
=== Succesors ===
next: v944 
=== Usages ===
i966 
=== Predecessor ===
v938 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1070 #next: v944  <|@  <|@
f <@~|@floating>@ <|@
tid i966 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:280) [bci: 296]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i965 
=== Succesors ===
=== Usages ===
v941 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i965  <|@  <|@
f <@~|@floating>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:284) [bci: 320]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i966 
y: i115 
=== Succesors ===
=== Usages ===
v944 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i966 y: i115  <|@  <|@
f <@*|@fixed>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:284) [bci: 331]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v941 
=== Succesors ===
trueSuccessor: v943 
falseSuccessor: v942 
=== Usages ===
=== Predecessor ===
i965 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v941 #trueSuccessor: v943 #falseSuccessor: v942  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600255641850084083
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v979 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v979  <|@  <|@
f <@*|@fixed>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v943 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:285) [bci: 334]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v945 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v945  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
barriers: 4
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:285) [bci: 338]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: i967 
=== Usages ===
=== Predecessor ===
v942 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i967 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: GC-Card
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:286) [bci: 347]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v1070 
=== Succesors ===
next: v949 
=== Usages ===
i968 
=== Predecessor ===
v945 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1070 #next: v949  <|@  <|@
f <@~|@floating>@ <|@
tid i968 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:286) [bci: 347]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i967 
=== Succesors ===
=== Usages ===
v946 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i967  <|@  <|@
f <@~|@floating>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:287) [bci: 363]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i968 
y: i48 
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i968 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:287) [bci: 374]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v946 
=== Succesors ===
trueSuccessor: v948 
falseSuccessor: v947 
=== Usages ===
=== Predecessor ===
i967 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v946 #trueSuccessor: v948 #falseSuccessor: v947  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585428038581536961
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v980 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v980  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v948 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:288) [bci: 377]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v969 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v969  <|@  <|@
f <@~|@floating>@ <|@
tid i974 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:289) [bci: 409]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] â‡ˆ0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:289) [bci: 409]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1070 
value: i974 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j970 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1070 value: i974 stateAfter: - lastLocationAccess: - #next: j970  <|@  <|@
f <@~|@floating>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j926 
index: - 
=== Succesors ===
=== Usages ===
j970 v973 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j926 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j970 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:295) [bci: 441]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1067 
=== Succesors ===
next: v954 
=== Usages ===
v951 j964 v1069 
=== Predecessor ===
v969 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1067 #next: v954  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:296) [bci: 455]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j970 
y: j419 
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j970 y: j419  <|@  <|@
f <@~|@floating>@ <|@
tid j933 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:270) [bci: 219]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i64 [139991352238080 - 36168788371202047] â‡ˆ00ffffffffffffff
=== Inputs ===
x: j932 
y: j959 
=== Succesors ===
=== Usages ===
v958 v972 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j932 y: j959  <|@  <|@
f <@*|@fixed>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:296) [bci: 461]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v951 
=== Succesors ===
trueSuccessor: v952 
falseSuccessor: v953 
=== Usages ===
=== Predecessor ===
j970 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v951 #trueSuccessor: v952 #falseSuccessor: v953  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:305) [bci: 524]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v958  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: write_barrier_post(Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e095940
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:305) [bci: 529]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j933 
=== Succesors ===
next: v982 
=== Usages ===
=== Predecessor ===
v952 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j933 #next: v982  <|@  <|@
f <@*|@fixed>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v958 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:297) [bci: 464]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: j971 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j971  <|@  <|@
f <@~|@floating>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
displacement: 128
scale: Times1
stamp: void*
=== Inputs ===
base: j926 
index: - 
=== Succesors ===
=== Usages ===
j971 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j926 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j971 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:297) [bci: 472]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1068 
=== Succesors ===
next: v972 
=== Usages ===
v1069 
=== Predecessor ===
v953 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1068 #next: v972  <|@  <|@
f <@~|@floating>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
=== Inputs ===
base: j970 
index: j971 
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j970 index: j971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Log
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:302) [bci: 507]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1069 
value: j933 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v973 
=== Usages ===
=== Predecessor ===
j971 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1069 value: j933 stateAfter: - lastLocationAccess: - #next: v973  <|@  <|@
f <@~|@floating>@ <|@
tid j964 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:298) [bci: 485]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i64
=== Inputs ===
x: j970 
y: j905 
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j970 y: j905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Index
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:303) [bci: 518]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1067 
value: j964 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v981 
=== Usages ===
=== Predecessor ===
v972 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1067 value: j964 stateAfter: - lastLocationAccess: - #next: v981  <|@  <|@
f <@*|@fixed>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v973 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B47" "B49" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v977 v978 v979 v980 v981 v982 
=== Succesors ===
next: i1014 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v977 v978 v979 v980 v981 v982 #next: i1014  <|@  <|@
f <@~|@floating>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1014 v404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1014 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.tableSize
nodeSourcePosition: at scala.collection.mutable.HashSet.tableSize(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 69]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1040 
=== Succesors ===
next: v404 
=== Usages ===
i76 
=== Predecessor ===
v976 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1040 #next: v404  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 75]
stamp: i32
=== Inputs ===
x: i1014 
y: i55 
=== Succesors ===
=== Usages ===
?201 v404 v89 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1014 y: i55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashSet.tableSize
nodeSourcePosition: at scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1040 
value: i76 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1015 
=== Usages ===
=== Predecessor ===
i1014 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1040 value: i76 stateAfter: - lastLocationAccess: - #next: i1015  <|@  <|@
f <@~|@floating>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1015 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1015 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.threshold
nodeSourcePosition: at scala.collection.mutable.HashSet.threshold(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 95]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1042 
=== Succesors ===
next: v92 
=== Usages ===
v89 
=== Predecessor ===
v404 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1042 #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 100]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@c50510
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i76 
y: i1015 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i76 y: i1015  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 100]
stamp: void
trueSuccessorProbability: 0.998047964305633
=== Inputs ===
condition: v89 
=== Succesors ===
trueSuccessor: v90 
falseSuccessor: v91 
=== Usages ===
=== Predecessor ===
i1015 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v89 #trueSuccessor: v90 #falseSuccessor: v91  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:165) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:165) [bci: 108]
stamp: void
=== Inputs ===
result: i55 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i55 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1016 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1016  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v996 
=== Succesors ===
=== Usages ===
v1054 v1053 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v996  <|@  <|@
f <@~|@floating>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: v856 
index: - 
=== Succesors ===
=== Usages ===
v722 v1016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v856 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SecondarySuperCache
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:66) [bci: 10]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1053 
=== Succesors ===
next: v694 
=== Usages ===
v691 
=== Predecessor ===
v91 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1053 #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
rawvalue: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v691 v722 v713 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:66) [bci: 14]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1016 
y: v683 
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1016 y: v683  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:66) [bci: 17]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v691 
=== Succesors ===
trueSuccessor: v692 
falseSuccessor: v693 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v691 #trueSuccessor: v692 #falseSuccessor: v693  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:67) [bci: 20]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v754 
=== Predecessor ===
v692 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 29]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 2]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
rawvalue: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 34359738368 shift: 3)
stampKind: Klass*(compressed base: 34359738368 shift: 3)
value: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v991 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 2]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v996 
y: v990 
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v996 y: v990  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 5]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v991 
=== Succesors ===
trueSuccessor: v696 
falseSuccessor: v697 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v991 #trueSuccessor: v696 #falseSuccessor: v697  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:101) [bci: 8]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v730  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v754 
=== Predecessor ===
v696 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 17]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: j719 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j719  <|@  <|@
f <@~|@floating>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: v856 
index: - 
=== Succesors ===
=== Usages ===
j719 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v856 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j719 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 27]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1054 
=== Succesors ===
next: i720 
=== Usages ===
v1055 v1056 
=== Predecessor ===
v697 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1054 #next: i720  <|@  <|@
f <@~|@floating>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j719 
index: - 
=== Succesors ===
=== Usages ===
i720 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j719 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i720 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 41]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1055 
=== Succesors ===
next: v701 
=== Usages ===
v704 
=== Predecessor ===
j719 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1055 #next: v701  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v702 
=== Predecessor ===
i720 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v702 
values: i48 i717 
=== Succesors ===
=== Usages ===
v704 i708 i717 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v702 values: i48 i717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v701 
=== Succesors ===
next: v707 
=== Usages ===
i703 v706 v715 v718 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v701 #next: v707  <|@  <|@
f <@~|@floating>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@c50510
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i703 
y: i720 
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i703 y: i720  <|@  <|@
f <@*|@fixed>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v704 
=== Succesors ===
trueSuccessor: v705 
falseSuccessor: v706 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v704 #trueSuccessor: v705 #falseSuccessor: v706  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 56]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: j721 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j721  <|@  <|@
f <@~|@floating>@ <|@
tid i708 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$126/0x000000084014a840@131afb18
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: i32 [-2147483648 - 2147483640] â‡ˆ00000000fffffff8
=== Inputs ===
x: i703 
y: i649 
=== Succesors ===
=== Usages ===
i709 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i703 y: i649  <|@  <|@
f <@~|@floating>@ <|@
tid i709 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 12]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: i32 [-2147483648 - 2147483640] â‡ˆ00000000fffffff8
=== Inputs ===
x: i708 
y: i418 
=== Succesors ===
=== Usages ===
j710 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i708 y: i418  <|@  <|@
f <@~|@floating>@ <|@
tid j710 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 32
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] â‡ˆfffffffffffffff8
=== Inputs ===
value: i709 
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i709  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j719 
index: j710 
=== Succesors ===
=== Usages ===
j721 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j719 index: j710  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j721 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1056 
=== Succesors ===
next: v716 
=== Usages ===
v712 
=== Predecessor ===
v705 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1056 #next: v716  <|@  <|@
f <@~|@floating>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 22]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: Klass*
=== Inputs ===
input: j721 
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j721  <|@  <|@
f <@~|@floating>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 66]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v712 
y: v683 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v712 y: v683  <|@  <|@
f <@*|@fixed>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 72]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v713 
=== Succesors ===
trueSuccessor: v715 
falseSuccessor: v714 
=== Usages ===
=== Predecessor ===
j721 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v713 #trueSuccessor: v715 #falseSuccessor: v714  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:110) [bci: 75]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v702 
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v702 #next: v722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:110) [bci: 86]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1053 
value: v683 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v731 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1053 value: v683 stateAfter: - lastLocationAccess: - #next: v731  <|@  <|@
f <@*|@fixed>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v754 
=== Predecessor ===
v722 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v729 v730 v731 
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v729 v730 v731 #next: v97  <|@  <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
referencedType: [null]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@7cb6363a
stamp: void
targetMethod: HotSpotMethod<FlatHashTable.growTable()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?763 <|@
d <@d|@=== Debug Properties ===
bci: 104
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 164
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
bci: 104
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
polymorphic: false
stamp: void
targetMethod: Direct#FlatHashTable.growTable
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v413 
stateDuring: ?763 
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v754 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v413 stateDuring: ?763 #next: v105  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:165) [bci: 108]
stamp: void
=== Inputs ===
result: i55 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i55 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 98]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v718 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v718  <|@  <|@
f <@~|@floating>@ <|@
tid i717 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 98]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: i32
=== Inputs ===
x: i703 
y: i55 
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i703 y: i55  <|@  <|@
f <@*|@fixed>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
loopBegin: v702 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v702  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 104]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v702 
=== Succesors ===
next: v736 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v702 #next: v736  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 76
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 162
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i272 - 
=== Succesors ===
=== Usages ===
?201 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i272 -  <|@  <|@
tid ?201 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<HashSet.tableSize_$eq(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 41
stackSize: 0
=== Inputs ===
outerFrameState: ?203 
values: a1 i76 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?203 values: a1 i76  <|@  <|@
f <@*|@fixed>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
reason: ClassCastException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@3a797466
stamp: void
=== Inputs ===
stateBefore: ?201 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?201  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.nnSizeMapAdd(FlatHashTable.scala:259) [bci: 6]
at scala.collection.mutable.FlatHashTable.nnSizeMapAdd$(FlatHashTable.scala:259) [bci: 2]
at scala.collection.mutable.HashSet.nnSizeMapAdd(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:163) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v792 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v792  <|@  <|@
f <@~|@floating>@ <|@
tid i793 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -104723
stableDimension: 0
stamp: i32 [-104723] â‡Š00000000fffe66ed â‡ˆ00000000fffe66ed
stampKind: i32
value: int[-104723|0xfffffffffffe66ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i785 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v782 
=== Predecessor ===
v529 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 98]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid i659 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 98]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i32
=== Inputs ===
x: i644 
y: i55 
=== Succesors ===
=== Usages ===
i644 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i644 y: i55  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
loopBegin: v643 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v643  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 104]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v643 
=== Succesors ===
next: v849 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v643 #next: v849  <|@  <|@
f <@*|@fixed>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v782 
=== Predecessor ===
v647 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:91) [bci: 75]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v850  <|@  <|@
f <@*|@fixed>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v782 
=== Predecessor ===
v634 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v788 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v788  <|@  <|@
f <@~|@floating>@ <|@
tid i789 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -99099
stableDimension: 0
stamp: i32 [-99099] â‡Š00000000fffe7ce5 â‡ˆ00000000fffe7ce5
stampKind: i32
value: int[-99099|0xfffffffffffe7ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i785 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v782 
=== Predecessor ===
v521 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i785 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-104723 - -97803] â‡Š00000000fffe00c5 â‡ˆ00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v782 
values: i789 i793 i791 i791 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v782 values: i789 i793 i791 i791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v788 v792 v849 v850 
=== Succesors ===
next: v787 
=== Usages ===
i785 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v788 v792 v849 v850 #next: v787  <|@  <|@
f <@*|@fixed>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
stateBefore: ?42 
actionAndReason: i785 
speculation: j419 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v782 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?42 actionAndReason: i785 speculation: j419  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1017 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1017  <|@  <|@
f <@~|@floating>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a278 
index: - 
=== Succesors ===
=== Usages ===
v1017 v1019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1059 
=== Succesors ===
next: v140 
=== Usages ===
v862 
=== Predecessor ===
v43 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1059 #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:122) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a278 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a278  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:122) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
trueSuccessorProbability: 0.07891854419410749
=== Inputs ===
condition: v137 
=== Succesors ===
trueSuccessor: v138 
falseSuccessor: v139 
=== Usages ===
=== Predecessor ===
v1017 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v137 #trueSuccessor: v138 #falseSuccessor: v139  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    probability 4563576711971613252
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:122) [bci: 5]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v177  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1071 
=== Predecessor ===
v138 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 7]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1018 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1018  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1017 
=== Succesors ===
=== Usages ===
v1033 v1045 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1017  <|@  <|@
f <@~|@floating>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: v862 
index: - 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v862 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:164) [bci: 54]
at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:130) [bci: 1]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1045 
=== Succesors ===
next: v148 
=== Usages ===
v549 
=== Predecessor ===
v139 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1045 #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:164) [bci: 58]
at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:130) [bci: 1]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1018 
y: v541 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1018 y: v541  <|@  <|@
tid ?175 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 156
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i277 - 
=== Succesors ===
=== Usages ===
?171 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i277 -  <|@  <|@
tid ?171 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<BoxesRunTime.equals(Object, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: BoxesRunTime.java
sourceLine: 123
stackSize: 0
=== Inputs ===
outerFrameState: ?175 
values: - - 
=== Succesors ===
=== Usages ===
?762 ?761 ?760 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?175 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:130) [bci: 1]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
trueSuccessorProbability: 0.05476550680786685
=== Inputs ===
condition: v549 
=== Succesors ===
trueSuccessor: v146 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v549 #trueSuccessor: v146 #falseSuccessor: v147  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 7]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i155 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i155  <|@  <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
referencedType: [null]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2e1c8772
stamp: void
targetMethod: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)>
=== Inputs ===
arguments: a278 a2 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a278 a2  <|@  <|@
tid ?760 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<BoxesRunTime.equals2(Object, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: BoxesRunTime.java
sourceLine: 131
stackSize: 0
=== Inputs ===
outerFrameState: ?171 
values: - - 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?171 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i155 <|@
d <@d|@=== Debug Properties ===
bci: 12
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#BoxesRunTime.equalsNumObject
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v358 
stateDuring: ?760 
=== Succesors ===
next: v179 
=== Usages ===
i178 
=== Predecessor ===
v146 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v358 stateDuring: ?760 #next: v179  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
i155 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:132) [bci: 16]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1019 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1019  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:144) [bci: 39]
at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:132) [bci: 17]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1059 
=== Succesors ===
next: v815 
=== Usages ===
v993 
=== Predecessor ===
v147 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1059 #next: v815  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:145) [bci: 50]
at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:132) [bci: 17]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1019 
y: v992 
=== Succesors ===
=== Usages ===
v815 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1019 y: v992  <|@  <|@
f <@*|@fixed>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:132) [bci: 17]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
trueSuccessorProbability: 0.029046971273105515
=== Inputs ===
condition: v993 
=== Succesors ===
trueSuccessor: v813 
falseSuccessor: v812 
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v993 #trueSuccessor: v813 #falseSuccessor: v812  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 23]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i165 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i165  <|@  <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
referencedType: [null]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@4788c9b6
stamp: void
targetMethod: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)>
=== Inputs ===
arguments: a278 a2 
=== Succesors ===
=== Usages ===
i165 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a278 a2  <|@  <|@
tid ?762 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<BoxesRunTime.equals2(Object, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: BoxesRunTime.java
sourceLine: 133
stackSize: 0
=== Inputs ===
outerFrameState: ?171 
values: - - 
=== Succesors ===
=== Usages ===
i165 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?171 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i165 <|@
d <@d|@=== Debug Properties ===
bci: 28
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#BoxesRunTime.equalsCharObject
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v359 
stateDuring: ?762 
=== Succesors ===
next: v180 
=== Usages ===
i178 
=== Predecessor ===
v813 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v359 stateDuring: ?762 #next: v180  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
i165 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:134) [bci: 32]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
displacement: 472
scale: Times1
stamp: void*
=== Inputs ===
base: v862 
index: - 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v862 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1033 
=== Succesors ===
next: j368 
=== Usages ===
v1034 v369 
=== Predecessor ===
v812 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1033 #next: j368  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: v365 
index: - 
=== Succesors ===
=== Usages ===
j368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1034 
=== Succesors ===
next: i169 
=== Usages ===
v369 
=== Predecessor ===
v365 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1034 #next: i169  <|@  <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
referencedType: [null]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@38518f80
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j368 
metaspaceMethod: v365 
arguments: a278 a2 
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j368 metaspaceMethod: v365 arguments: a278 a2  <|@  <|@
tid ?761 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<BoxesRunTime.equals2(Object, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: BoxesRunTime.java
sourceLine: 137
stackSize: 0
=== Inputs ===
outerFrameState: ?171 
values: - - 
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?171 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
polymorphic: true
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Indirect#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v369 
stateDuring: ?761 
=== Succesors ===
next: v181 
=== Usages ===
i178 
=== Predecessor ===
j368 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v369 stateDuring: ?761 #next: v181  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
i169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i178 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v176 
values: i155 i165 i169 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v176 values: i155 i165 i169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v179 v180 v181 
=== Succesors ===
next: v54 
=== Usages ===
i178 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v179 v180 v181 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i178 
y: i48 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i178 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stamp: void
trueSuccessorProbability: 0.7817474354439335
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v50 
falseSuccessor: v1072 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v50 #falseSuccessor: v1072  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1020 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1020  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1020 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.table
nodeSourcePosition: at scala.collection.mutable.HashSet.table(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 38]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1026 
=== Succesors ===
next: i1021 
=== Usages ===
a342 v1031 
=== Predecessor ===
v50 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1026 #next: i1021  <|@  <|@
tid ?47 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 156
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i277 - i48 
=== Succesors ===
=== Usages ===
i61 v486 v799 i1021 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i277 - i48  <|@  <|@
f <@~|@floating>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1020 
=== Succesors ===
=== Usages ===
i1021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1020  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1021 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 43]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?47 
guard: - 
address: v1031 
=== Succesors ===
next: i61 
=== Usages ===
i61 v349 
=== Predecessor ===
a1020 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?47 guard: - address: v1031 #next: i61  <|@  <|@
f <@~|@floating>@ <|@
tid i56 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 36]
stamp: i32 [-2147483645 - 2147483647]
=== Inputs ===
x: i277 
y: i55 
=== Succesors ===
=== Usages ===
i61 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i277 y: i55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i61 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 44]
op: REM
stamp: i32 [-2147483645 - 2147483646]
type: SIGNED
=== Inputs ===
stateBefore: ?47 
x: i56 
y: i1021 
zeroCheck: - 
=== Succesors ===
next: v540 
=== Usages ===
i277 v1032 v349 
=== Predecessor ===
i1021 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?47 x: i56 y: i1021 zeroCheck: - #next: v540  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@15088f07
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i61 
y: i1021 
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i61 y: i1021  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v349 
=== Succesors ===
trueSuccessor: v536 
falseSuccessor: v539 
=== Usages ===
=== Predecessor ===
i61 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v349 #trueSuccessor: v536 #falseSuccessor: v539  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v486 
=== Usages ===
a1022 
=== Predecessor ===
v540 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:155) [bci: 20]
stamp: void
=== Inputs ===
stateBefore: ?47 
=== Succesors ===
next: a1022 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?47 #next: a1022  <|@  <|@
f <@~|@floating>@ <|@
tid a342 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.mutable.HashSet.table(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 38]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1020 
=== Succesors ===
=== Usages ===
v1032 a281 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1020  <|@  <|@
f <@~|@floating>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a342 
index: i61 
=== Succesors ===
=== Usages ===
a1022 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a342 index: i61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1022 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v536 
address: v1032 
=== Succesors ===
next: v66 
=== Usages ===
a357 
=== Predecessor ===
v486 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v536 address: v1032 #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid a357 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1022 
=== Succesors ===
=== Usages ===
a278 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1022  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:155) [bci: 20]
stamp: void
=== Inputs ===
loopBegin: v33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a1022 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v33  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v799 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v799  <|@  <|@
f <@~|@floating>@ <|@
tid i801 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -89627
stableDimension: 0
stamp: i32 [-89627] â‡Š00000000fffea1e5 â‡ˆ00000000fffea1e5
stampKind: i32
value: int[-89627|0xfffffffffffea1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 43]
stamp: void
=== Inputs ===
stateBefore: ?47 
actionAndReason: i801 
speculation: j419 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?47 actionAndReason: i801 speculation: j419  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569704089601104753
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1073 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1073  <|@  <|@
f <@*|@fixed>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1071 
=== Predecessor ===
v1072 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1073 v177 
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1073 v177 #next: v52  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v279 
=== Usages ===
=== Predecessor ===
v1071 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v279  <|@  <|@
f <@*|@fixed>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 33]
stamp: void
=== Inputs ===
result: i48 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i48 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v807 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v807  <|@  <|@
f <@~|@floating>@ <|@
tid i809 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -85275
stableDimension: 0
stamp: i32 [-85275] â‡Š00000000fffeb2e5 â‡ˆ00000000fffeb2e5
stampKind: i32
value: int[-85275|0xfffffffffffeb2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v807 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 43]
stamp: void
=== Inputs ===
stateBefore: ?223 
actionAndReason: i809 
speculation: j419 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?223 actionAndReason: i809 speculation: j419  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1076 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1076  <|@  <|@
f <@*|@fixed>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 33]
stamp: void
=== Inputs ===
result: i48 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i48 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:154) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v777 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v777  <|@  <|@
f <@~|@floating>@ <|@
tid i781 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -80411
stableDimension: 0
stamp: i32 [-80411] â‡Š00000000fffec5e5 â‡ˆ00000000fffec5e5
stampKind: i32
value: int[-80411|0xfffffffffffec5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v777 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: void
=== Inputs ===
stateBefore: ?23 
actionAndReason: i781 
speculation: j419 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?23 actionAndReason: i781 speculation: j419  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v769 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v769  <|@  <|@
f <@~|@floating>@ <|@
tid i771 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -74803
stableDimension: 0
stamp: i32 [-74803] â‡Š00000000fffedbcd â‡ˆ00000000fffedbcd
stampKind: i32
value: int[-74803|0xfffffffffffedbcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v769 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i771 
speculation: j419 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i771 speculation: j419  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: [v4|QWORD + 488]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = AND v7|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = SHR v7|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV v9|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v16|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v19|DWORD = MOV [v18|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = DEC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = IMUL v15|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = BSWAP v22|DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = IMUL v23|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = NEG v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SHL (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = OR (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = POPCNT v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SHR (x: v28|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND (x: v21|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = MOV [v34|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|DWORD[.], y: v35|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD, v34|QWORD[.]] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction v60|DWORD = MOV [v59|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV [v59|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v61|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [v63|QWORD + 232] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOV [v65|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v68|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOVSXD v66|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: [v67|QWORD + v69|QWORD * 1]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v66|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-102699|0xfffffffffffe6ed5]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr   -1  <|@ instruction [v111|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v77|DWORD[.], y: v77|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v78|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD[.] + v58|DWORD * 4 + 16], y: v85|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[*] = XOR (x: v86|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v87|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[*] = SHR v89|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v91|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600255641850084083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B47" "B49" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ADD (x: v97|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v98|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOV [v35|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [v38|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v35|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [v38|QWORD + 472] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [v44|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v44|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v47|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = INC v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v50|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v49|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = MOV [v52|QWORD[.] + v51|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.], v51|DWORD, v52|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOV [v55|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = UNCOMPRESSPOINTER (input: v112|DWORD, ~baseRegister: v114|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV [v113|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v115|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v55|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [v113|QWORD + 472] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [v118|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v120|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v121|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction v123|DWORD = MOV [v122|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = INC v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v124|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v123|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v123|DWORD, y: v125|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction SAFEPOINT v126|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v128|DWORD[.] = MOV [v127|QWORD[.] + v125|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = UNCOMPRESSPOINTER (input: v128|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|QWORD[.], v125|DWORD, v127|QWORD[.]] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.], v56|DWORD, v57|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v55|QWORD[.], y: v55|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v116|DWORD] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v117|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV [v67|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV [v70|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SHL v72|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = LEA [v73|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVSXD v74|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v70|QWORD + v75|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = INC v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v110|DWORD] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-102699|0xfffffffffffe6ed5]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = MOV [v79|QWORD[.]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD + v83|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v82|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 56], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|DWORD, v57|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v92|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585428038581536961
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD + 32], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|DWORD] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v4|QWORD + 488] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v12|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572430233452165828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v88|QWORD[*] + v90|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[*] = ADD (x: v88|QWORD[*], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v93|QWORD + v95|QWORD * 1 - 8], y: v94|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 112], y: v96|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569704089601104753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    probability 4563576711971613252
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v100|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: [v99|QWORD + 32]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v99|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOV [v102|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL v104|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = LEA [v105|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVSXD v106|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOV [v102|QWORD + v107|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: v108|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = INC v104|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v103|DWORD, y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v94|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD + 32], y: v101|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-99099|0xfffffffffffe7ce5]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: v0|QWORD[.] v98|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: v0|QWORD[.] - v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104723|0xfffffffffffe66ed]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v995 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v995  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! -
uncheckedStamp: a! Lscala/collection/mutable/FlatHashTable;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v413 ?258 ?756 ?756 ?23 ?23 v1041 v1057 ?203 ?175 ?223 ?42 ?47 v1026 v1024 v1040 ?201 v1042 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v451 i434 ?258 ?756 ?23 a399 v358 v1043 ?42 ?175 ?47 v369 v359 v137 ?223 v233 v370 v371 v380 a927 v1058 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry(Object)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 153
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - 
=== Succesors ===
=== Usages ===
v769 i434 v995 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v995 v1010 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v995 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
nullCheck: true
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v1058 
=== Succesors ===
next: v996 
=== Usages ===
v859 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v1058 #next: v996  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v996 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1057 
=== Succesors ===
next: v494 
=== Usages ===
v856 v989 v991 
=== Predecessor ===
v995 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1057 #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
result meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
rawvalue: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 34359738368 shift: 3)
stampKind: Klass*(compressed base: 34359738368 shift: 3)
value: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v996 
y: v988 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v996 y: v988  <|@  <|@
f <@~|@floating>@ <|@
tid j419 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:753) [bci: 22]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:67) [bci: 7]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] â‡ˆ0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v889 v951 v937 v799 v769 v787 v807 v777 v893 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v989 
=== Succesors ===
trueSuccessor: v491 
falseSuccessor: v493 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v989 #trueSuccessor: v491 #falseSuccessor: v493  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v291  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v995 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v995  <|@  <|@
f <@~|@floating>@ <|@
tid v1023 <|@
result [v4|QWORD + 488] <|@
d <@d|@=== Debug Properties ===
displacement: 488
scale: Times1
stamp: void*
=== Inputs ===
base: v859 
index: - 
=== Succesors ===
=== Usages ===
v291 v448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v859 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v291 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1023 
=== Succesors ===
next: v13 
=== Usages ===
v10 
=== Predecessor ===
v491 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1023 #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
rawvalue: meta{HotSpotMethod<Object.hashCode()>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<Object.hashCode()>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v291 
y: v9 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v291 y: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i418 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.hubOffset(GraalHotSpotVMConfig) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 4]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:67) [bci: 7]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] â‡Š0000000000000008 â‡ˆ0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j425 i651 i709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 v1077 v224 v279 v427 i644 i703 v883 v946 ?223 ?47 v1076 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@fb83e9ab <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v11 
falseSuccessor: v12 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v11 #falseSuccessor: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: [v4|QWORD + 488]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j438 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j438  <|@  <|@
f <@~|@floating>@ <|@
tid v1043 <|@
result [v1|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
j438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j438 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:753) [bci: 29]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:67) [bci: 7]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1043 
=== Succesors ===
next: v424 
=== Usages ===
j420 j425 
=== Predecessor ===
v11 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1043 #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid j435 <|@
result long[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 18]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
rawvalue: 7
stableDimension: 0
stamp: i64 [7] â‡Š0000000000000007 â‡ˆ0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j420 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j420 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$124/0x000000084014b040@3d402943
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 18]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: i64 [0 - 7] â‡ˆ0000000000000007
=== Inputs ===
x: j438 
y: j435 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j438 y: j435  <|@  <|@
f <@~|@floating>@ <|@
tid j436 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 38]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j420 
y: j436 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j420 y: j436  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 44]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v421 
=== Succesors ===
trueSuccessor: v423 
falseSuccessor: v422 
=== Usages ===
=== Predecessor ===
j438 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v421 #trueSuccessor: v423 #falseSuccessor: v422  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = AND v7|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:72) [bci: 47]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid j425 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$172/0x0000000840292440@2e0f974
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:72) [bci: 54]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: i64 [0 - 72057594037927935] â‡ˆ00ffffffffffffff
=== Inputs ===
x: j438 
y: i418 
=== Succesors ===
=== Usages ===
i426 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j438 y: i418  <|@  <|@
f <@~|@floating>@ <|@
tid i426 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$162/0x0000000840295840@304a2d13
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$163/0x0000000840295040@7fd4c829
inputBits: 64
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:72) [bci: 60]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
resultBits: 32
stamp: i32
=== Inputs ===
value: j425 
=== Succesors ===
=== Usages ===
v427 i22 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j425  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:73) [bci: 72]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i426 
y: i48 
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i426 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:73) [bci: 83]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v427 
=== Succesors ===
trueSuccessor: v432 
falseSuccessor: v431 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v427 #trueSuccessor: v432 #falseSuccessor: v431  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = SHR v7|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV v9|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:77) [bci: 88]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v430  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:77) [bci: 88]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v432 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:74) [bci: 86]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v16  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
v431 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:77) [bci: 88]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v428  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:77) [bci: 88]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:77) [bci: 88]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v428 v430 
=== Succesors ===
next: i434 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v428 v430 #next: i434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i434 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: identity_hashcode(Object)int
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e095940
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.identityHashCode(ForeignCallDescriptor, Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:77) [bci: 92]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:63) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: i32
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: a2 
=== Succesors ===
next: v485 
=== Usages ===
i22 
=== Predecessor ===
v429 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: a2 #next: v485  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:45) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
i434 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v448 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1023 
=== Succesors ===
next: j450 
=== Usages ===
v1044 v451 
=== Predecessor ===
v12 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1023 #next: j450  <|@  <|@
f <@~|@floating>@ <|@
tid v1044 <|@
result [v12|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: v448 
index: - 
=== Succesors ===
=== Usages ===
j450 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j450 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1044 
=== Succesors ===
next: i18 
=== Usages ===
v451 
=== Predecessor ===
v448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1044 #next: i18  <|@  <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
referencedType: [null]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@776908f1
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
computedAddress: j450 
metaspaceMethod: v448 
arguments: a2 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j450 metaspaceMethod: v448 arguments: a2  <|@  <|@
tid ?756 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 153
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - a1 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i18 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
polymorphic: true
stamp: i32
targetMethod: Indirect#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v451 
stateDuring: ?756 
=== Succesors ===
next: v20 
=== Usages ===
i22 
=== Predecessor ===
j450 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v451 stateDuring: ?756 #next: v20  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
i18 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v4|QWORD + 488] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v12|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i22 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v21 
values: i426 i18 i434 
=== Succesors ===
=== Usages ===
?23 i129 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v21 values: i426 i18 i434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v16 v20 v485 
=== Succesors ===
next: a997 
=== Usages ===
i22 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v16 v20 v485 #next: a997  <|@  <|@
f <@~|@floating>@ <|@
tid a296 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 0]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
rawvalue: Class:scala.util.hashing.package$
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:scala.util.hashing.package$]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1025 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1025 <|@
result [v16|QWORD[.] + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: a296 
index: - 
=== Succesors ===
=== Usages ===
a997 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a296 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a997 <|@
result v17|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: package$.MODULE$
nodeSourcePosition: at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 0]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
nullCheck: false
stamp: n# Lscala/util/hashing/package$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1025 
=== Succesors ===
next: v1078 
=== Usages ===
v1078 
=== Predecessor ===
v21 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1025 #next: v1078  <|@  <|@
tid ?23 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 153
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - a1 i22 
=== Succesors ===
=== Usages ===
v777 v1078 i999 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - a1 i22  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?23 
object: a997 
=== Succesors ===
next: a998 
=== Usages ===
=== Predecessor ===
a997 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?23 object: a997 #next: a998  <|@  <|@
f <@~|@floating>@ <|@
tid v1026 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a998 a1005 a1020 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a998 <|@
result v18|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.table
nodeSourcePosition: at scala.collection.mutable.HashSet.table(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 15]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1026 
=== Succesors ===
next: i999 
=== Usages ===
a305 v1027 
=== Predecessor ===
v1078 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1026 #next: i999  <|@  <|@
f <@~|@floating>@ <|@
tid v1027 <|@
result [v18|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a998 
=== Succesors ===
=== Usages ===
i999 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a998  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i999 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 20]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?23 
guard: - 
address: v1027 
=== Succesors ===
next: i1000 
=== Usages ===
i114 v313 
=== Predecessor ===
a998 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?23 guard: - address: v1027 #next: i1000  <|@  <|@
f <@~|@floating>@ <|@
tid v1024 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1000 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1000 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.seedvalue
nodeSourcePosition: at scala.collection.mutable.HashSet.seedvalue(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 3]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1024 
=== Succesors ===
next: v506 
=== Usages ===
i122 i123 
=== Predecessor ===
i999 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1024 #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 22]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] â‡Š00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i114 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 22]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i999 
y: i113 
=== Succesors ===
=== Usages ===
i116 i119 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i999 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
result int[-1640532531|0xffffffff9e3775cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.util.hashing.package$.byteswap32(package.scala:26) [bci: 1]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
rawvalue: -1640532531
stableDimension: 0
stamp: i32 [-1640532531] â‡Š000000009e3775cd â‡ˆ000000009e3775cd
stampKind: i32
value: int[-1640532531|0xffffffff9e3775cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i129 i131 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$184/0x00000008402b6840@66fb48d9
nodeSourcePosition: at scala.util.hashing.package$.byteswap32(package.scala:26) [bci: 3]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32
=== Inputs ===
x: i22 
y: i128 
=== Succesors ===
=== Usages ===
i130 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i22 y: i128  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.reverseBytes(int) [bci: -1]
at scala.util.hashing.package$.byteswap32(package.scala:27) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32
=== Inputs ===
value: i129 
=== Succesors ===
=== Usages ===
i131 
=== Predecessor ===
- >@ <|@
instruction <@ReverseBytes|@org.graalvm.compiler.replacements.nodes.ReverseBytesNode>@ value: i129  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$184/0x00000008402b6840@66fb48d9
nodeSourcePosition: at scala.util.hashing.package$.byteswap32(package.scala:28) [bci: 9]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32
=== Inputs ===
x: i130 
y: i128 
=== Succesors ===
=== Usages ===
i122 i124 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i130 y: i128  <|@  <|@
f <@~|@floating>@ <|@
tid i122 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$172/0x0000000840292440@2e0f974
nodeSourcePosition: at java.base@11.0.14.1/java.lang.Integer.rotateRight(Integer.java:1734) [bci: 2]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 8]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32
=== Inputs ===
x: i131 
y: i1000 
=== Succesors ===
=== Usages ===
i125 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i131 y: i1000  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$1390/0x00000008409a4840@1c7512a
nodeSourcePosition: at java.base@11.0.14.1/java.lang.Integer.rotateRight(Integer.java:1734) [bci: 5]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 8]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32
=== Inputs ===
value: i1000 
=== Succesors ===
=== Usages ===
i124 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i1000  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$126/0x000000084014a840@131afb18
nodeSourcePosition: at java.base@11.0.14.1/java.lang.Integer.rotateRight(Integer.java:1734) [bci: 6]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 8]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32
=== Inputs ===
x: i131 
y: i123 
=== Succesors ===
=== Usages ===
i125 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i131 y: i123  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$127/0x000000084014ac40@4f58fb43
nodeSourcePosition: at java.base@11.0.14.1/java.lang.Integer.rotateRight(Integer.java:1734) [bci: 7]
at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 8]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32
=== Inputs ===
x: i122 
y: i124 
=== Succesors ===
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i122 y: i124  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
result int[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:334) [bci: 25]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] â‡Š0000000000000020 â‡ˆ0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
i117 v626 v941 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.bitCount(int) [bci: -1]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:334) [bci: 28]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32 [0 - 32] â‡ˆ000000000000003f
=== Inputs ===
value: i114 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@BitCount|@org.graalvm.compiler.replacements.nodes.BitCountNode>@ value: i114  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$191/0x00000008402b4040@599896a8
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:334) [bci: 31]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32 [0 - 32] â‡ˆ000000000000003f
=== Inputs ===
x: i115 
y: i116 
=== Succesors ===
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i115 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$172/0x0000000840292440@2e0f974
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:334) [bci: 32]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32
=== Inputs ===
x: i125 
y: i117 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i125 y: i117  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$124/0x000000084014b040@3d402943
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:334) [bci: 34]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: i32
=== Inputs ===
x: i114 
y: i118 
=== Succesors ===
=== Usages ===
i272 v1028 ?223 i228 ?258 v313 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i114 y: i118  <|@  <|@
f <@~|@floating>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:154) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@15088f07
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i119 
y: i999 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i119 y: i999  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:154) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v313 
=== Succesors ===
trueSuccessor: v503 
falseSuccessor: v505 
=== Usages ===
=== Predecessor ===
i1000 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v313 #trueSuccessor: v503 #falseSuccessor: v505  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v16|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v19|DWORD = MOV [v18|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = DEC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = IMUL v15|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = BSWAP v22|DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = IMUL v23|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = NEG v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SHL (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = OR (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = POPCNT v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SHR (x: v28|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND (x: v21|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:154) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1001 
=== Usages ===
a1001 
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1001  <|@  <|@
f <@~|@floating>@ <|@
tid a305 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.mutable.HashSet.table(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:333) [bci: 15]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a998 
=== Succesors ===
=== Usages ===
v1028 a283 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a998  <|@  <|@
f <@~|@floating>@ <|@
tid v1028 <|@
result [v34|QWORD[.] + v33|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a305 
index: i119 
=== Succesors ===
=== Usages ===
a1001 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a305 index: i119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1001 <|@
result v35|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:154) [bci: 18]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v503 
address: v1028 
=== Succesors ===
next: v222 
=== Usages ===
a323 v372 v1060 
=== Predecessor ===
v503 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v503 address: v1028 #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1001 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1001  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 35]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i56 i76 v105 v104 i659 i228 i717 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:155) [bci: 21]
stamp: void
trueSuccessorProbability: 0.7174130347860855
=== Inputs ===
condition: v372 
=== Succesors ===
trueSuccessor: v220 
falseSuccessor: v221 
=== Usages ===
=== Predecessor ===
a1001 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v372 #trueSuccessor: v220 #falseSuccessor: v221  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = MOV [v34|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|DWORD[.], y: v35|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v270  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
v220 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD, v34|QWORD[.]] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1002 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1002  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
result [v35|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1001 
=== Succesors ===
=== Usages ===
v1002 v1004 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1001  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1002 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1060 
=== Succesors ===
next: v236 
=== Usages ===
v868 
=== Predecessor ===
v221 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1060 #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid a323 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:154) [bci: 18]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1001 
=== Succesors ===
=== Usages ===
v370 v371 v233 v380 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1001  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:122) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a323 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a323  <|@  <|@
f <@*|@fixed>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:122) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
trueSuccessorProbability: 0.07891854419410749
=== Inputs ===
condition: v233 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v235 
=== Usages ===
=== Predecessor ===
v1002 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v233 #trueSuccessor: v234 #falseSuccessor: v235  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOV [v35|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:122) [bci: 5]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1077 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1077  <|@  <|@
f <@*|@fixed>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 33]
stamp: void
=== Inputs ===
result: i48 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i48 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 7]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1003  <|@  <|@
f <@~|@floating>@ <|@
tid v868 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1002 
=== Succesors ===
=== Usages ===
v1035 v1046 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1002  <|@  <|@
f <@~|@floating>@ <|@
tid v1046 <|@
result [v38|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: v868 
index: - 
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v868 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1003 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:164) [bci: 54]
at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:130) [bci: 1]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1046 
=== Succesors ===
next: v240 
=== Usages ===
v586 
=== Predecessor ===
v235 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1046 #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:130) [bci: 1]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
rawvalue: meta{HotSpotType<Ljava/lang/Number;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/Number;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v549 v586 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:164) [bci: 58]
at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:130) [bci: 1]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1003 
y: v541 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1003 y: v541  <|@  <|@
tid ?258 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 156
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i119 - 
=== Succesors ===
=== Usages ===
?257 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i119 -  <|@  <|@
tid ?257 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<BoxesRunTime.equals(Object, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: BoxesRunTime.java
sourceLine: 123
stackSize: 0
=== Inputs ===
outerFrameState: ?258 
values: - - 
=== Succesors ===
=== Usages ===
?759 ?758 ?757 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?258 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
result meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:145) [bci: 50]
at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:132) [bci: 17]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
rawvalue: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 34359738368 shift: 3)
stampKind: Klass*(compressed base: 34359738368 shift: 3)
value: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v993 v994 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:130) [bci: 1]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
trueSuccessorProbability: 0.05476550680786685
=== Inputs ===
condition: v586 
=== Succesors ===
trueSuccessor: v238 
falseSuccessor: v239 
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v586 #trueSuccessor: v238 #falseSuccessor: v239  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [v38|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 7]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i244 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i244  <|@  <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
referencedType: [null]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@16c89608
stamp: void
targetMethod: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)>
=== Inputs ===
arguments: a323 a2 
=== Succesors ===
=== Usages ===
i244 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a323 a2  <|@  <|@
tid ?757 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<BoxesRunTime.equals2(Object, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: BoxesRunTime.java
sourceLine: 131
stackSize: 0
=== Inputs ===
outerFrameState: ?257 
values: - - 
=== Succesors ===
=== Usages ===
i244 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?257 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i244 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 12
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#BoxesRunTime.equalsNumObject
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v370 
stateDuring: ?757 
=== Succesors ===
next: v262 
=== Usages ===
i261 
=== Predecessor ===
v238 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v370 stateDuring: ?757 #next: v262  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
i244 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|DWORD] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:132) [bci: 16]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1004 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1004 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:144) [bci: 39]
at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:132) [bci: 17]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1060 
=== Succesors ===
next: v825 
=== Usages ===
v994 
=== Predecessor ===
v239 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1060 #next: v825  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:145) [bci: 50]
at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:132) [bci: 17]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1004 
y: v992 
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1004 y: v992  <|@  <|@
f <@*|@fixed>@ <|@
tid v825 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@fb83e9ab <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:132) [bci: 17]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
trueSuccessorProbability: 0.029046971273105515
=== Inputs ===
condition: v994 
=== Succesors ===
trueSuccessor: v823 
falseSuccessor: v822 
=== Usages ===
=== Predecessor ===
v1004 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v994 #trueSuccessor: v823 #falseSuccessor: v822  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v35|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 23]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i252 
=== Usages ===
=== Predecessor ===
v825 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i252  <|@  <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
referencedType: [null]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@28083eb1
stamp: void
targetMethod: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)>
=== Inputs ===
arguments: a323 a2 
=== Succesors ===
=== Usages ===
i252 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a323 a2  <|@  <|@
tid ?759 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<BoxesRunTime.equals2(Object, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: BoxesRunTime.java
sourceLine: 133
stackSize: 0
=== Inputs ===
outerFrameState: ?257 
values: - - 
=== Succesors ===
=== Usages ===
i252 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?257 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i252 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 28
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#BoxesRunTime.equalsCharObject
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v371 
stateDuring: ?759 
=== Succesors ===
next: v263 
=== Usages ===
i261 
=== Predecessor ===
v823 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v371 stateDuring: ?759 #next: v263  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
i252 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:134) [bci: 32]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v377 
=== Usages ===
=== Predecessor ===
v825 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
result [v38|QWORD + 472] <|@
d <@d|@=== Debug Properties ===
displacement: 472
scale: Times1
stamp: void*
=== Inputs ===
base: v868 
index: - 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v868 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v377 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1035 
=== Succesors ===
next: j379 
=== Usages ===
v1036 v380 
=== Predecessor ===
v822 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1035 #next: j379  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
result [v44|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: v377 
index: - 
=== Succesors ===
=== Usages ===
j379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v377 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j379 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1036 
=== Succesors ===
next: i255 
=== Usages ===
v380 
=== Predecessor ===
v377 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1036 #next: i255  <|@  <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
referencedType: [null]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@4327902f
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j379 
metaspaceMethod: v377 
arguments: a323 a2 
=== Succesors ===
=== Usages ===
i255 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j379 metaspaceMethod: v377 arguments: a323 a2  <|@  <|@
tid ?758 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<BoxesRunTime.equals2(Object, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: BoxesRunTime.java
sourceLine: 137
stackSize: 0
=== Inputs ===
outerFrameState: ?257 
values: - - 
=== Succesors ===
=== Usages ===
i255 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?257 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i255 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
polymorphic: true
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Indirect#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v380 
stateDuring: ?758 
=== Succesors ===
next: v264 
=== Usages ===
i261 
=== Predecessor ===
j379 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v380 stateDuring: ?758 #next: v264  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
i255 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [v38|QWORD + 472] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [v44|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v44|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i261 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v259 
values: i244 i252 i255 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v259 values: i244 i252 i255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v262 v263 v264 
=== Succesors ===
next: v227 
=== Usages ===
i261 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v262 v263 v264 #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i261 
y: i48 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i261 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stamp: void
trueSuccessorProbability: 0.7817474354439335
=== Inputs ===
condition: v224 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v226 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v224 #trueSuccessor: v225 #falseSuccessor: v226  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v47|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1005 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1005 <|@
result v48|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.table
nodeSourcePosition: at scala.collection.mutable.HashSet.table(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 38]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1026 
=== Succesors ===
next: i1006 
=== Usages ===
a325 v1029 
=== Predecessor ===
v225 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1026 #next: i1006  <|@  <|@
tid ?223 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 156
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i119 - i48 
=== Succesors ===
=== Usages ===
v807 i230 i1006 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i119 - i48  <|@  <|@
f <@~|@floating>@ <|@
tid v1029 <|@
result [v48|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1005 
=== Succesors ===
=== Usages ===
i1006 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1006 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 43]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?223 
guard: - 
address: v1029 
=== Succesors ===
next: i230 
=== Usages ===
i230 v332 
=== Predecessor ===
a1005 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?223 guard: - address: v1029 #next: i230  <|@  <|@
f <@~|@floating>@ <|@
tid i228 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 36]
stamp: i32
=== Inputs ===
x: i119 
y: i55 
=== Succesors ===
=== Usages ===
i230 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i119 y: i55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i230 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 44]
op: REM
stamp: i32 [-2147483646 - 2147483646]
type: SIGNED
=== Inputs ===
stateBefore: ?223 
x: i228 
y: i1006 
zeroCheck: - 
=== Succesors ===
next: v514 
=== Usages ===
v1030 i277 v332 
=== Predecessor ===
i1006 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?223 x: i228 y: i1006 zeroCheck: - #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@15088f07
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i230 
y: i1006 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i230 y: i1006  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v332 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v513 
=== Usages ===
=== Predecessor ===
i230 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v332 #trueSuccessor: v511 #falseSuccessor: v513  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = INC v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v50|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v49|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1007 
=== Usages ===
a1007 
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1007  <|@  <|@
f <@~|@floating>@ <|@
tid a325 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.mutable.HashSet.table(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 38]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1005 
=== Succesors ===
=== Usages ===
v1030 a281 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1005  <|@  <|@
f <@~|@floating>@ <|@
tid v1030 <|@
result [v52|QWORD[.] + v51|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a325 
index: i230 
=== Succesors ===
=== Usages ===
a1007 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a325 index: i230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1007 <|@
result v53|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v511 
address: v1030 
=== Succesors ===
next: v32 
=== Usages ===
a340 
=== Predecessor ===
v511 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v511 address: v1030 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid a340 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1007 
=== Succesors ===
=== Usages ===
a278 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1007  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:155) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
a1007 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = MOV [v52|QWORD[.] + v51|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.], v51|DWORD, v52|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a278 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v33 
values: a340 a357 
=== Succesors ===
=== Usages ===
v1059 v38 v369 v137 v359 v358 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v33 values: a340 a357  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483646 - 2147483646]
valueDescription: i32
=== Inputs ===
merge: v33 
values: i230 i61 
=== Succesors ===
=== Usages ===
?175 i272 ?47 i56 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v33 values: i230 i61  <|@  <|@
f <@~|@floating>@ <|@
tid a281 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v33 
values: a325 a342 
=== Succesors ===
=== Usages ===
a283 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v33 values: a325 a342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 0.283551449833205
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:155) [bci: 20]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v32 
=== Succesors ===
next: v44 
=== Usages ===
a278 i277 v40 v52 v66 a281 v539 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v32 #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:155) [bci: 21]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a278 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a278  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:155) [bci: 21]
stamp: void
trueSuccessorProbability: 0.7174130347860855
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v40 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v40 #falseSuccessor: v43  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.], v56|DWORD, v57|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v55|QWORD[.], y: v55|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v269  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
v40 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|DWORD, v57|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i272 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v268 
values: i277 i119 
=== Succesors ===
=== Usages ===
?42 ?203 v1039 v386 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v268 values: i277 i119  <|@  <|@
f <@~|@floating>@ <|@
tid a283 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v268 
values: a281 a305 
=== Succesors ===
=== Usages ===
v1039 v1061 v1037 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v268 values: a281 a305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v269 v270 
=== Succesors ===
next: i1008 
=== Usages ===
i272 a283 v1011 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v269 v270 #next: i1008  <|@  <|@
tid ?42 <|@
d <@d|@=== Debug Properties ===
bci: 58
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 161
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i272 - 
=== Succesors ===
=== Usages ===
v787 i1008 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i272 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1037 <|@
result [v59|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a283 
index: - 
=== Succesors ===
=== Usages ===
i1008 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a283 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1008 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?42 
guard: - 
address: v1037 
=== Succesors ===
next: v1009 
=== Usages ===
v386 
=== Predecessor ===
v268 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?42 guard: - address: v1037 #next: v1009  <|@  <|@
f <@~|@floating>@ <|@
tid v1061 <|@
result [v59|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a283 
index: - 
=== Succesors ===
=== Usages ===
v1009 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a283 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1009 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1061 
=== Succesors ===
next: v522 
=== Usages ===
v874 
=== Predecessor ===
i1008 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1061 #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@15088f07
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i272 
y: i1008 
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i272 y: i1008  <|@  <|@
f <@*|@fixed>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v386 
=== Succesors ===
trueSuccessor: v519 
falseSuccessor: v521 
=== Usages ===
=== Predecessor ===
v1009 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v386 #trueSuccessor: v519 #falseSuccessor: v521  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction v60|DWORD = MOV [v59|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV [v59|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1010 
=== Usages ===
v400 
=== Predecessor ===
v522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1010  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1010 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:215) [bci: 46]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1058 
=== Succesors ===
next: v1011 
=== Usages ===
v877 
=== Predecessor ===
v519 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1058 #next: v1011  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1009 
=== Succesors ===
=== Usages ===
v1038 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1009  <|@  <|@
f <@~|@floating>@ <|@
tid v1038 <|@
result [v63|QWORD + 232] <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: v874 
index: - 
=== Succesors ===
=== Usages ===
v1011 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v874 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1011 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ObjArrayKlass::_element_klass:final
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: Klass*!
=== Inputs ===
stateBefore: - 
guard: v268 
address: v1038 
=== Succesors ===
next: i663 
=== Usages ===
v667 v655 v1047 v629 v636 
=== Predecessor ===
v1010 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v268 address: v1038 #next: i663  <|@  <|@
f <@~|@floating>@ <|@
tid v1047 <|@
result [v65|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: v1011 
index: - 
=== Succesors ===
=== Usages ===
i663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v1011 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i663 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: Klass::_super_check_offset:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:76) [bci: 10]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1047 
=== Succesors ===
next: v1012 
=== Usages ===
v626 j627 
=== Predecessor ===
v1011 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1047 #next: v1012  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:215) [bci: 46]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1010 
=== Succesors ===
=== Usages ===
v1048 v636 v1049 v1052 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1010  <|@  <|@
f <@~|@floating>@ <|@
tid j627 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 32
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 36]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i663 
=== Succesors ===
=== Usages ===
v1048 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i663  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
result [v67|QWORD + v69|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: v877 
index: j627 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v877 index: j627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1012 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 36]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1048 
=== Succesors ===
next: v632 
=== Usages ===
v629 
=== Predecessor ===
i663 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1048 #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 40]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1011 
y: v1012 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1011 y: v1012  <|@  <|@
f <@~|@floating>@ <|@
tid i649 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] â‡Š0000000000000003 â‡ˆ0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i650 i708 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@fb83e9ab <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 43]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v629 
=== Succesors ===
trueSuccessor: v630 
falseSuccessor: v631 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v629 #trueSuccessor: v630 #falseSuccessor: v631  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v61|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [v63|QWORD + 232] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOV [v65|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v68|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOVSXD v66|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: [v67|QWORD + v69|QWORD * 1]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:81) [bci: 46]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
v630 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:90) [bci: 70]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:77) [bci: 21]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i663 
y: i115 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i663 y: i115  <|@  <|@
f <@~|@floating>@ <|@
tid i791 <|@
result int[-102699|0xfffffffffffe6ed5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -102699
stableDimension: 0
stamp: i32 [-102699] â‡Š00000000fffe6ed5 â‡ˆ00000000fffe6ed5
stampKind: i32
value: int[-102699|0xfffffffffffe6ed5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i785 i785 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:90) [bci: 72]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v626 
=== Succesors ===
trueSuccessor: v633 
falseSuccessor: v634 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v626 #trueSuccessor: v633 #falseSuccessor: v634  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v66|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 84]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 2]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v877 
y: v1011 
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v877 y: v1011  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 5]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v636 
=== Succesors ===
trueSuccessor: v637 
falseSuccessor: v638 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v636 #trueSuccessor: v637 #falseSuccessor: v638  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:101) [bci: 8]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v675  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
v637 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 17]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: j664 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j664  <|@  <|@
f <@~|@floating>@ <|@
tid v1049 <|@
result [v67|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: v877 
index: - 
=== Succesors ===
=== Usages ===
j664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v877 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j664 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 27]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1049 
=== Succesors ===
next: i665 
=== Usages ===
v1050 v1051 
=== Predecessor ===
v638 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1049 #next: i665  <|@  <|@
f <@~|@floating>@ <|@
tid v1050 <|@
result [v70|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j664 
index: - 
=== Succesors ===
=== Usages ===
i665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i665 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 41]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1050 
=== Succesors ===
next: v642 
=== Usages ===
v645 
=== Predecessor ===
j664 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1050 #next: v642  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
i665 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV [v67|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV [v70|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i644 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i48 i659 
=== Succesors ===
=== Usages ===
v645 i650 i659 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v643 values: i48 i659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v642 
=== Succesors ===
next: v648 
=== Usages ===
i644 v647 v657 v660 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v642 #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@c50510
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i644 
y: i665 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i644 y: i665  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v645 
=== Succesors ===
trueSuccessor: v646 
falseSuccessor: v647 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v645 #trueSuccessor: v646 #falseSuccessor: v647  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 56]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: j666 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j666  <|@  <|@
f <@~|@floating>@ <|@
tid i650 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$126/0x000000084014a840@131afb18
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i32 [-2147483648 - 2147483640] â‡ˆ00000000fffffff8
=== Inputs ===
x: i644 
y: i649 
=== Succesors ===
=== Usages ===
i651 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i644 y: i649  <|@  <|@
f <@~|@floating>@ <|@
tid i651 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 12]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i32 [-2147483648 - 2147483640] â‡ˆ00000000fffffff8
=== Inputs ===
x: i650 
y: i418 
=== Succesors ===
=== Usages ===
j652 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i650 y: i418  <|@  <|@
f <@~|@floating>@ <|@
tid j652 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 32
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] â‡ˆfffffffffffffff8
=== Inputs ===
value: i651 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i651  <|@  <|@
f <@~|@floating>@ <|@
tid v1051 <|@
result [v70|QWORD + v75|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j664 
index: j652 
=== Succesors ===
=== Usages ===
j666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j664 index: j652  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j666 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1051 
=== Succesors ===
next: v658 
=== Usages ===
v654 
=== Predecessor ===
v646 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1051 #next: v658  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 22]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: Klass*
=== Inputs ===
input: j666 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j666  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 66]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v654 
y: v1011 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v654 y: v1011  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 72]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v655 
=== Succesors ===
trueSuccessor: v657 
falseSuccessor: v656 
=== Usages ===
=== Predecessor ===
j666 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v655 #trueSuccessor: v657 #falseSuccessor: v656  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SHL v72|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = LEA [v73|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVSXD v74|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v70|QWORD + v75|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:110) [bci: 75]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v643 
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v643 #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
result [v67|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: v877 
index: - 
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v877 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:110) [bci: 86]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1052 
value: v1011 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v676 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1052 value: v1011 stateAfter: - lastLocationAccess: - #next: v676  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
v667 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD + 32], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v674 v675 v676 
=== Succesors ===
next: a1013 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v674 v675 v676 #next: a1013  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1013 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1013 <|@
result v77|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.sizemap
nodeSourcePosition: at scala.collection.mutable.HashSet.sizemap(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.nnSizeMapAdd(FlatHashTable.scala:259) [bci: 1]
at scala.collection.mutable.FlatHashTable.nnSizeMapAdd$(FlatHashTable.scala:259) [bci: 2]
at scala.collection.mutable.HashSet.nnSizeMapAdd(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:163) [bci: 83]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1041 
=== Succesors ===
next: v530 
=== Usages ===
v457 
=== Predecessor ===
v833 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1041 #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.nnSizeMapAdd(FlatHashTable.scala:259) [bci: 6]
at scala.collection.mutable.FlatHashTable.nnSizeMapAdd$(FlatHashTable.scala:259) [bci: 2]
at scala.collection.mutable.HashSet.nnSizeMapAdd(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:163) [bci: 83]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1013 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1013  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.nnSizeMapAdd(FlatHashTable.scala:259) [bci: 6]
at scala.collection.mutable.FlatHashTable.nnSizeMapAdd$(FlatHashTable.scala:259) [bci: 2]
at scala.collection.mutable.HashSet.nnSizeMapAdd(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:163) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v457 
=== Succesors ===
trueSuccessor: v527 
falseSuccessor: v529 
=== Usages ===
=== Predecessor ===
a1013 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v457 #trueSuccessor: v527 #falseSuccessor: v529  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v77|DWORD[.], y: v77|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.nnSizeMapAdd(FlatHashTable.scala:259) [bci: 33]
at scala.collection.mutable.FlatHashTable.nnSizeMapAdd$(FlatHashTable.scala:259) [bci: 2]
at scala.collection.mutable.HashSet.nnSizeMapAdd(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:163) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: j879 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j879  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j879 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:773) [bci: 3]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:182) [bci: 11]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a880 
=== Usages ===
v1062 v1064 v1066 
=== Predecessor ===
v527 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: a880  <|@  <|@
f <@~|@floating>@ <|@
tid a878 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a880 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a880 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:184) [bci: 22]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
predefinedStamp: [null]
stamp: a - NULL
=== Inputs ===
object: a878 
=== Succesors ===
next: j881 
=== Usages ===
=== Predecessor ===
j879 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a878 #next: j881  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
result [v59|QWORD[.] + v58|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a283 
index: i272 
=== Succesors ===
=== Usages ===
v400 j881 j928 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a283 index: i272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j881 <|@
result [v59|QWORD[.] + v58|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:185) [bci: 28]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1039 
=== Succesors ===
next: i907 
=== Usages ===
v1063 
=== Predecessor ===
a880 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1039 #next: i907  <|@  <|@
f <@~|@floating>@ <|@
tid v1062 <|@
result [r15|QWORD + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j879 
index: - 
=== Succesors ===
=== Usages ===
i907 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j879 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i907 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:187) [bci: 48]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v1062 
=== Succesors ===
next: v886 
=== Usages ===
i908 
=== Predecessor ===
j881 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1062 #next: v886  <|@  <|@
f <@~|@floating>@ <|@
tid i908 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:187) [bci: 48]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i907 
=== Succesors ===
=== Usages ===
v883 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i907  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:200) [bci: 206]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i908 
y: i48 
=== Succesors ===
=== Usages ===
v886 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i908 y: i48  <|@  <|@
f <@~|@floating>@ <|@
tid j905 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:220) [bci: 375]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] â‡Šfffffffffffffff8 â‡ˆfffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j906 j964 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:200) [bci: 217]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v883 
=== Succesors ===
trueSuccessor: v884 
falseSuccessor: v885 
=== Usages ===
=== Predecessor ===
i907 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v883 #trueSuccessor: v884 #falseSuccessor: v885  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v78|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:230) [bci: 427]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v917 
=== Usages ===
=== Predecessor ===
v886 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v917  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v884 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:203) [bci: 220]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: a909 
=== Usages ===
=== Predecessor ===
v886 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a909  <|@  <|@
f <@~|@floating>@ <|@
tid v1063 <|@
result [v79|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j881 
index: - 
=== Succesors ===
=== Usages ===
a909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j881 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a909 <|@
result v80|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:204) [bci: 236]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1063 
=== Succesors ===
next: j888 
=== Usages ===
a910 
=== Predecessor ===
v885 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1063 #next: j888  <|@  <|@
f <@~|@floating>@ <|@
tid a910 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:204) [bci: 236]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
op: Uncompress
stamp: a -
=== Inputs ===
value: a909 
=== Succesors ===
=== Usages ===
j888 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a909  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j888 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:204) [bci: 239]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a910 
=== Succesors ===
next: v892 
=== Usages ===
v889 a900 v913 
=== Predecessor ===
a909 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a910 #next: v892  <|@  <|@
f <@~|@floating>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:212) [bci: 296]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j888 
y: j419 
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j888 y: j419  <|@  <|@
f <@*|@fixed>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:212) [bci: 304]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v889 
=== Succesors ===
trueSuccessor: v891 
falseSuccessor: v890 
=== Usages ===
=== Predecessor ===
j888 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v889 #trueSuccessor: v891 #falseSuccessor: v890  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = MOV [v79|QWORD[.]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572430233452165828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:230) [bci: 427]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v918 
=== Usages ===
=== Predecessor ===
v892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v918  <|@  <|@
f <@*|@fixed>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v891 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:213) [bci: 307]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: j911 
=== Usages ===
=== Predecessor ===
v892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j911  <|@  <|@
f <@~|@floating>@ <|@
tid v1066 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j879 
index: - 
=== Succesors ===
=== Usages ===
j911 v914 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j879 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j911 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:217) [bci: 331]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1066 
=== Succesors ===
next: v896 
=== Usages ===
v893 j906 v1065 
=== Predecessor ===
v890 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1066 #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:218) [bci: 345]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j911 
y: j419 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j911 y: j419  <|@  <|@
f <@*|@fixed>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:218) [bci: 351]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v893 
=== Succesors ===
trueSuccessor: v894 
falseSuccessor: v895 
=== Usages ===
=== Predecessor ===
j911 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v893 #trueSuccessor: v894 #falseSuccessor: v895  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:226) [bci: 414]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: a900 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a900 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:226) [bci: 419]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: a -
trackedPointer: true
=== Inputs ===
input: j888 
=== Succesors ===
next: v901 
=== Usages ===
v901 
=== Predecessor ===
v894 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j888 #next: v901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: write_barrier_pre(Object)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e095940
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:226) [bci: 424]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a900 
=== Succesors ===
next: v920 
=== Usages ===
=== Predecessor ===
a900 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a900 #next: v920  <|@  <|@
f <@*|@fixed>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v901 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:219) [bci: 354]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: j912 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j912  <|@  <|@
f <@~|@floating>@ <|@
tid v1064 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: j879 
index: - 
=== Succesors ===
=== Usages ===
j912 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j879 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j912 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:219) [bci: 362]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1064 
=== Succesors ===
next: v913 
=== Usages ===
v1065 
=== Predecessor ===
v895 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1064 #next: v913  <|@  <|@
f <@~|@floating>@ <|@
tid v1065 <|@
result [v82|QWORD + v83|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
=== Inputs ===
base: j911 
index: j912 
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j911 index: j912  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Log
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:223) [bci: 397]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1065 
value: j888 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v914 
=== Usages ===
=== Predecessor ===
j912 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1065 value: j888 stateAfter: - lastLocationAccess: - #next: v914  <|@  <|@
f <@~|@floating>@ <|@
tid j906 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:220) [bci: 375]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i64
=== Inputs ===
x: j911 
y: j905 
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j911 y: j905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Index
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PreWriteBarrier(WriteBarrierSnippets.java:224) [bci: 408]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1066 
value: j906 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v919 
=== Usages ===
=== Predecessor ===
v913 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1066 value: j906 stateAfter: - lastLocationAccess: - #next: v919  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v914 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD + v83|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v82|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 56], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v917 v918 v919 v920 
=== Succesors ===
next: v400 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v917 v918 v919 v920 #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid a399 <|@
result v85|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v519 
address: v1039 
value: a399 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j926 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v519 address: v1039 value: a399 stateAfter: - lastLocationAccess: - #next: j926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j926 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:773) [bci: 3]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:235) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a927 
=== Usages ===
v1067 v1068 
=== Predecessor ===
v400 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: a927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a927 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:236) [bci: 8]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
predefinedStamp: [null]
stamp: a Ljava/lang/Object;
=== Inputs ===
object: a2 
=== Succesors ===
next: j928 
=== Usages ===
j929 
=== Predecessor ===
j926 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2 #next: j928  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j928 <|@
result [v59|QWORD[.] + v58|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:242) [bci: 35]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1039 
=== Succesors ===
next: j929 
=== Usages ===
j930 j932 
=== Predecessor ===
a927 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1039 #next: j929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j929 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:256) [bci: 137]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a927 
=== Succesors ===
next: v936 
=== Usages ===
j930 v937 
=== Predecessor ===
j928 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a927 #next: v936  <|@  <|@
f <@~|@floating>@ <|@
tid j930 <|@
result v87|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$185/0x00000008402b6c40@7f610884
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:260) [bci: 151]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i64
=== Inputs ===
x: j928 
y: j929 
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j928 y: j929  <|@  <|@
f <@~|@floating>@ <|@
tid j960 <|@
result long[-1048576|0xfffffffffff00000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:275) [bci: 254]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
rawvalue: -1048576
stableDimension: 0
stamp: i64 [-1048576] â‡Šfffffffffff00000 â‡ˆfffffffffff00000
stampKind: i64
value: long[-1048576|0xfffffffffff00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:275) [bci: 254]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
x: j930 
y: j960 
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j930 y: j960  <|@  <|@
f <@*|@fixed>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:275) [bci: 262]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v961 
=== Succesors ===
trueSuccessor: v934 
falseSuccessor: v935 
=== Usages ===
=== Predecessor ===
j929 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v961 #trueSuccessor: v934 #falseSuccessor: v935  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD[.] + v58|DWORD * 4 + 16], y: v85|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[*] = XOR (x: v86|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v87|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v977 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v977  <|@  <|@
f <@*|@fixed>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v934 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:276) [bci: 265]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v940 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v940  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:279) [bci: 279]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j929 
y: j419 
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j929 y: j419  <|@  <|@
f <@*|@fixed>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:279) [bci: 287]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v937 
=== Succesors ===
trueSuccessor: v939 
falseSuccessor: v938 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v937 #trueSuccessor: v939 #falseSuccessor: v938  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v978  <|@  <|@
f <@*|@fixed>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v939 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:280) [bci: 290]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: i965 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i965  <|@  <|@
f <@~|@floating>@ <|@
tid i931 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:264) [bci: 170]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] â‡Š0000000000000009 â‡ˆ0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j932 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j932 <|@
result v88|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$172/0x0000000840292440@2e0f974
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:264) [bci: 173]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i64 [0 - 36028797018963967] â‡ˆ007fffffffffffff
=== Inputs ===
x: j928 
y: i931 
=== Succesors ===
=== Usages ===
j933 v1070 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j928 y: i931  <|@  <|@
f <@~|@floating>@ <|@
tid j959 <|@
result v90|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:116) [bci: 6]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:265) [bci: 180]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
rawvalue: 139991352238080
stableDimension: 0
stamp: i64 [139991352238080] â‡Š00007f5246d26000 â‡ˆ00007f5246d26000
stampKind: i64
value: long[139991352238080|0x7f5246d26000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j933 v1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1070 <|@
result [v88|QWORD[*] + v90|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j932 
index: j959 
=== Succesors ===
=== Usages ===
i965 i967 v969 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j932 index: j959  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i965 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: GC-Card
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:280) [bci: 296]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v1070 
=== Succesors ===
next: v944 
=== Usages ===
i966 
=== Predecessor ===
v938 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1070 #next: v944  <|@  <|@
f <@~|@floating>@ <|@
tid i966 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:280) [bci: 296]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i965 
=== Succesors ===
=== Usages ===
v941 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i965  <|@  <|@
f <@~|@floating>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:284) [bci: 320]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i966 
y: i115 
=== Succesors ===
=== Usages ===
v944 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i966 y: i115  <|@  <|@
f <@*|@fixed>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:284) [bci: 331]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v941 
=== Succesors ===
trueSuccessor: v943 
falseSuccessor: v942 
=== Usages ===
=== Predecessor ===
i965 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v941 #trueSuccessor: v943 #falseSuccessor: v942  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[*] = SHR v89|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v91|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600255641850084083
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v979 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v979  <|@  <|@
f <@*|@fixed>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v943 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:285) [bci: 334]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v945 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v945  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
barriers: 4
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:285) [bci: 338]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: i967 
=== Usages ===
=== Predecessor ===
v942 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i967 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: GC-Card
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:286) [bci: 347]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v1070 
=== Succesors ===
next: v949 
=== Usages ===
i968 
=== Predecessor ===
v945 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1070 #next: v949  <|@  <|@
f <@~|@floating>@ <|@
tid i968 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:286) [bci: 347]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i967 
=== Succesors ===
=== Usages ===
v946 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i967  <|@  <|@
f <@~|@floating>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:287) [bci: 363]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i968 
y: i48 
=== Succesors ===
=== Usages ===
v949 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i968 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:287) [bci: 374]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v946 
=== Succesors ===
trueSuccessor: v948 
falseSuccessor: v947 
=== Usages ===
=== Predecessor ===
i967 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v946 #trueSuccessor: v948 #falseSuccessor: v947  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v92|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585428038581536961
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:311) [bci: 532]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v980 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v980  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v948 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:288) [bci: 377]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v969 
=== Usages ===
=== Predecessor ===
v949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v969  <|@  <|@
f <@~|@floating>@ <|@
tid i974 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:289) [bci: 409]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] â‡ˆ0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:289) [bci: 409]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1070 
value: i974 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j970 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1070 value: i974 stateAfter: - lastLocationAccess: - #next: j970  <|@  <|@
f <@~|@floating>@ <|@
tid v1067 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j926 
index: - 
=== Succesors ===
=== Usages ===
j970 v973 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j926 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j970 <|@
result v93|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:295) [bci: 441]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1067 
=== Succesors ===
next: v954 
=== Usages ===
v951 j964 v1069 
=== Predecessor ===
v969 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1067 #next: v954  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:296) [bci: 455]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j970 
y: j419 
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j970 y: j419  <|@  <|@
f <@~|@floating>@ <|@
tid j933 <|@
result v94|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:270) [bci: 219]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i64 [139991352238080 - 36168788371202047] â‡ˆ00ffffffffffffff
=== Inputs ===
x: j932 
y: j959 
=== Succesors ===
=== Usages ===
v958 v972 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j932 y: j959  <|@  <|@
f <@*|@fixed>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:296) [bci: 461]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v951 
=== Succesors ===
trueSuccessor: v952 
falseSuccessor: v953 
=== Usages ===
=== Predecessor ===
j970 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v951 #trueSuccessor: v952 #falseSuccessor: v953  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v88|QWORD[*] + v90|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[*] = ADD (x: v88|QWORD[*], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:305) [bci: 524]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v958  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: write_barrier_post(Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e095940
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:305) [bci: 529]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j933 
=== Succesors ===
next: v982 
=== Usages ===
=== Predecessor ===
v952 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j933 #next: v982  <|@  <|@
f <@*|@fixed>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v958 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v94|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:297) [bci: 464]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: j971 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j971  <|@  <|@
f <@~|@floating>@ <|@
tid v1068 <|@
result [r15|QWORD + 128] <|@
d <@d|@=== Debug Properties ===
displacement: 128
scale: Times1
stamp: void*
=== Inputs ===
base: j926 
index: - 
=== Succesors ===
=== Usages ===
j971 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j926 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j971 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:297) [bci: 472]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1068 
=== Succesors ===
next: v972 
=== Usages ===
v1069 
=== Predecessor ===
v953 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1068 #next: v972  <|@  <|@
f <@~|@floating>@ <|@
tid v1069 <|@
result [v93|QWORD + v95|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
=== Inputs ===
base: j970 
index: j971 
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j970 index: j971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Log
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:302) [bci: 507]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1069 
value: j933 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v973 
=== Usages ===
=== Predecessor ===
j971 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1069 value: j933 stateAfter: - lastLocationAccess: - #next: v973  <|@  <|@
f <@~|@floating>@ <|@
tid j964 <|@
result v96|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:298) [bci: 485]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i64
=== Inputs ===
x: j970 
y: j905 
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j970 y: j905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Index
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.g1PostWriteBarrier(WriteBarrierSnippets.java:303) [bci: 518]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1067 
value: j964 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v981 
=== Usages ===
=== Predecessor ===
v972 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1067 value: j964 stateAfter: - lastLocationAccess: - #next: v981  <|@  <|@
f <@*|@fixed>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
v973 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v93|QWORD + v95|QWORD * 1 - 8], y: v94|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 112], y: v96|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B47" "B49" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v977 v978 v979 v980 v981 v982 
=== Succesors ===
next: i1014 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v977 v978 v979 v980 v981 v982 #next: i1014  <|@  <|@
f <@~|@floating>@ <|@
tid v1040 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1014 v404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1014 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.tableSize
nodeSourcePosition: at scala.collection.mutable.HashSet.tableSize(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 69]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1040 
=== Succesors ===
next: v404 
=== Usages ===
i76 
=== Predecessor ===
v976 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1040 #next: v404  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 75]
stamp: i32
=== Inputs ===
x: i1014 
y: i55 
=== Succesors ===
=== Usages ===
?201 v404 v89 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1014 y: i55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashSet.tableSize
nodeSourcePosition: at scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1040 
value: i76 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1015 
=== Usages ===
=== Predecessor ===
i1014 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1040 value: i76 stateAfter: - lastLocationAccess: - #next: i1015  <|@  <|@
f <@~|@floating>@ <|@
tid v1042 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1015 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1015 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.threshold
nodeSourcePosition: at scala.collection.mutable.HashSet.threshold(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 95]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1042 
=== Succesors ===
next: v92 
=== Usages ===
v89 
=== Predecessor ===
v404 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1042 #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 100]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@c50510
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i76 
y: i1015 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i76 y: i1015  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@fb83e9ab <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 100]
stamp: void
trueSuccessorProbability: 0.998047964305633
=== Inputs ===
condition: v89 
=== Succesors ===
trueSuccessor: v90 
falseSuccessor: v91 
=== Usages ===
=== Predecessor ===
i1015 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v89 #trueSuccessor: v90 #falseSuccessor: v91  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ADD (x: v97|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v98|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:165) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:165) [bci: 108]
stamp: void
=== Inputs ===
result: i55 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i55 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1016 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1016  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
result v99|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v996 
=== Succesors ===
=== Usages ===
v1054 v1053 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v996  <|@  <|@
f <@~|@floating>@ <|@
tid v1053 <|@
result [v99|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: v856 
index: - 
=== Succesors ===
=== Usages ===
v722 v1016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v856 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1016 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SecondarySuperCache
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:66) [bci: 10]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1053 
=== Succesors ===
next: v694 
=== Usages ===
v691 
=== Predecessor ===
v91 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1053 #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid v683 <|@
result v101|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
rawvalue: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v691 v722 v713 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v691 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:66) [bci: 14]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1016 
y: v683 
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1016 y: v683  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@fb83e9ab <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:66) [bci: 17]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v691 
=== Succesors ===
trueSuccessor: v692 
falseSuccessor: v693 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v691 #trueSuccessor: v692 #falseSuccessor: v693  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v100|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: [v99|QWORD + 32]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:67) [bci: 20]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v754 
=== Predecessor ===
v692 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 29]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
result meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 2]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
rawvalue: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 34359738368 shift: 3)
stampKind: Klass*(compressed base: 34359738368 shift: 3)
value: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v991 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 2]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v996 
y: v990 
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v996 y: v990  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:100) [bci: 5]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v991 
=== Succesors ===
trueSuccessor: v696 
falseSuccessor: v697 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v991 #trueSuccessor: v696 #falseSuccessor: v697  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:101) [bci: 8]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v730  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v754 
=== Predecessor ===
v696 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 17]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: j719 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j719  <|@  <|@
f <@~|@floating>@ <|@
tid v1054 <|@
result [v99|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: v856 
index: - 
=== Succesors ===
=== Usages ===
j719 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v856 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j719 <|@
result v102|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 27]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1054 
=== Succesors ===
next: i720 
=== Usages ===
v1055 v1056 
=== Predecessor ===
v697 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1054 #next: i720  <|@  <|@
f <@~|@floating>@ <|@
tid v1055 <|@
result [v102|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j719 
index: - 
=== Succesors ===
=== Usages ===
i720 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j719 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i720 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 41]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1055 
=== Succesors ===
next: v701 
=== Usages ===
v704 
=== Predecessor ===
j719 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1055 #next: v701  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v702 
=== Predecessor ===
i720 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v99|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOV [v102|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i703 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v702 
values: i48 i717 
=== Succesors ===
=== Usages ===
v704 i708 i717 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v702 values: i48 i717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v701 
=== Succesors ===
next: v707 
=== Usages ===
i703 v706 v715 v718 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v701 #next: v707  <|@  <|@
f <@~|@floating>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@c50510
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i703 
y: i720 
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i703 y: i720  <|@  <|@
f <@*|@fixed>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 53]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v704 
=== Succesors ===
trueSuccessor: v705 
falseSuccessor: v706 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v704 #trueSuccessor: v705 #falseSuccessor: v706  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v103|DWORD, y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 56]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: j721 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j721  <|@  <|@
f <@~|@floating>@ <|@
tid i708 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$126/0x000000084014a840@131afb18
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 11]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: i32 [-2147483648 - 2147483640] â‡ˆ00000000fffffff8
=== Inputs ===
x: i703 
y: i649 
=== Succesors ===
=== Usages ===
i709 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i703 y: i649  <|@  <|@
f <@~|@floating>@ <|@
tid i709 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 12]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: i32 [-2147483648 - 2147483640] â‡ˆ00000000fffffff8
=== Inputs ===
x: i708 
y: i418 
=== Succesors ===
=== Usages ===
j710 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i708 y: i418  <|@  <|@
f <@~|@floating>@ <|@
tid j710 <|@
result v107|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x000000084014a440@3f135a4b
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$129/0x0000000840250040@cd34b3d
inputBits: 32
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] â‡ˆfffffffffffffff8
=== Inputs ===
value: i709 
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i709  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
result [v102|QWORD + v107|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j719 
index: j710 
=== Succesors ===
=== Usages ===
j721 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j719 index: j710  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j721 <|@
result v108|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 16]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1056 
=== Succesors ===
next: v716 
=== Usages ===
v712 
=== Predecessor ===
v705 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1056 #next: v716  <|@  <|@
f <@~|@floating>@ <|@
tid v712 <|@
result v108|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:190) [bci: 22]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 63]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: Klass*
=== Inputs ===
input: j721 
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j721  <|@  <|@
f <@~|@floating>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 66]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v712 
y: v683 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v712 y: v683  <|@  <|@
f <@*|@fixed>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 72]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v713 
=== Succesors ===
trueSuccessor: v715 
falseSuccessor: v714 
=== Usages ===
=== Predecessor ===
j721 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v713 #trueSuccessor: v715 #falseSuccessor: v714  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL v104|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = LEA [v105|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVSXD v106|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOV [v102|QWORD + v107|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: v108|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:110) [bci: 75]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v702 
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v702 #next: v722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:110) [bci: 86]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1053 
value: v683 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v731 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1053 value: v683 stateAfter: - lastLocationAccess: - #next: v731  <|@  <|@
f <@*|@fixed>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v754 
=== Predecessor ===
v722 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD + 32], y: v101|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v729 v730 v731 
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v729 v730 v731 #next: v97  <|@  <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
referencedType: [null]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@7cb6363a
stamp: void
targetMethod: HotSpotMethod<FlatHashTable.growTable()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?763 <|@
d <@d|@=== Debug Properties ===
bci: 104
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 164
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
bci: 104
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
polymorphic: false
stamp: void
targetMethod: Direct#FlatHashTable.growTable
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v413 
stateDuring: ?763 
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v754 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v413 stateDuring: ?763 #next: v105  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:165) [bci: 108]
stamp: void
=== Inputs ===
result: i55 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i55 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 98]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v718 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v718  <|@  <|@
f <@~|@floating>@ <|@
tid i717 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 98]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: i32
=== Inputs ===
x: i703 
y: i55 
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i703 y: i55  <|@  <|@
f <@*|@fixed>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
loopBegin: v702 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v702  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = INC v104|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 104]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSecondarySubType(TypeCheckSnippetUtils.java:71) [bci: 32]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofSecondary(InstanceOfSnippets.java:195) [bci: 126]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v702 
=== Succesors ===
next: v736 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v702 #next: v736  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 76
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 162
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i272 - 
=== Succesors ===
=== Usages ===
?201 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i272 -  <|@  <|@
tid ?201 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<HashSet.tableSize_$eq(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
rethrowException: false
sourceFile: HashSet.scala
sourceLine: 41
stackSize: 0
=== Inputs ===
outerFrameState: ?203 
values: a1 i76 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?203 values: a1 i76  <|@  <|@
f <@*|@fixed>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
reason: ClassCastException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@3a797466
stamp: void
=== Inputs ===
stateBefore: ?201 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?201  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: v0|QWORD[.] v98|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: v0|QWORD[.] - v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.nnSizeMapAdd(FlatHashTable.scala:259) [bci: 6]
at scala.collection.mutable.FlatHashTable.nnSizeMapAdd$(FlatHashTable.scala:259) [bci: 2]
at scala.collection.mutable.HashSet.nnSizeMapAdd(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:163) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v792 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v792  <|@  <|@
f <@~|@floating>@ <|@
tid i793 <|@
result int[-104723|0xfffffffffffe66ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -104723
stableDimension: 0
stamp: i32 [-104723] â‡Š00000000fffe66ed â‡ˆ00000000fffe66ed
stampKind: i32
value: int[-104723|0xfffffffffffe66ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i785 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v782 
=== Predecessor ===
v529 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104723|0xfffffffffffe66ed]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 98]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid i659 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 98]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: i32
=== Inputs ===
x: i644 
y: i55 
=== Succesors ===
=== Usages ===
i644 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i644 y: i55  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 49]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
loopBegin: v643 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v643  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = INC v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v110|DWORD] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 104]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v643 
=== Succesors ===
next: v849 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v643 #next: v849  <|@  <|@
f <@*|@fixed>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v782 
=== Predecessor ===
v647 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-102699|0xfffffffffffe6ed5]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:91) [bci: 75]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:218) [bci: 77]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v850  <|@  <|@
f <@*|@fixed>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v782 
=== Predecessor ===
v634 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-102699|0xfffffffffffe6ed5]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: v788 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v788  <|@  <|@
f <@~|@floating>@ <|@
tid i789 <|@
result int[-99099|0xfffffffffffe7ce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -99099
stableDimension: 0
stamp: i32 [-99099] â‡Š00000000fffe7ce5 â‡ˆ00000000fffe7ce5
stampKind: i32
value: int[-99099|0xfffffffffffe7ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i785 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v782 
=== Predecessor ===
v521 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-99099|0xfffffffffffe7ce5]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i785 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-104723 - -97803] â‡Š00000000fffe00c5 â‡ˆ00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v782 
values: i789 i793 i791 i791 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v782 values: i789 i793 i791 i791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v788 v792 v849 v850 
=== Succesors ===
next: v787 
=== Usages ===
i785 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v788 v792 v849 v850 #next: v787  <|@  <|@
f <@*|@fixed>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 66]
stamp: void
=== Inputs ===
stateBefore: ?42 
actionAndReason: i785 
speculation: j419 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v782 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?42 actionAndReason: i785 speculation: j419  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v111|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1017 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1017  <|@  <|@
f <@~|@floating>@ <|@
tid v1059 <|@
result [v55|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a278 
index: - 
=== Succesors ===
=== Usages ===
v1017 v1019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1017 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1059 
=== Succesors ===
next: v140 
=== Usages ===
v862 
=== Predecessor ===
v43 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1059 #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:122) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a278 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a278  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:122) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
trueSuccessorProbability: 0.07891854419410749
=== Inputs ===
condition: v137 
=== Succesors ===
trueSuccessor: v138 
falseSuccessor: v139 
=== Usages ===
=== Predecessor ===
v1017 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v137 #trueSuccessor: v138 #falseSuccessor: v139  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOV [v55|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    probability 4563576711971613252
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:122) [bci: 5]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v177  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1071 
=== Predecessor ===
v138 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 7]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1018 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1018  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
result v113|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 34359738368 shift: 3
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1017 
=== Succesors ===
=== Usages ===
v1033 v1045 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1017  <|@  <|@
f <@~|@floating>@ <|@
tid v1045 <|@
result [v113|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: v862 
index: - 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v862 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1018 <|@
result v115|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:164) [bci: 54]
at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:130) [bci: 1]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1045 
=== Succesors ===
next: v148 
=== Usages ===
v549 
=== Predecessor ===
v139 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1045 #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:164) [bci: 58]
at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:130) [bci: 1]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1018 
y: v541 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1018 y: v541  <|@  <|@
tid ?175 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 156
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i277 - 
=== Succesors ===
=== Usages ===
?171 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i277 -  <|@  <|@
tid ?171 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<BoxesRunTime.equals(Object, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: BoxesRunTime.java
sourceLine: 123
stackSize: 0
=== Inputs ===
outerFrameState: ?175 
values: - - 
=== Succesors ===
=== Usages ===
?762 ?761 ?760 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?175 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:130) [bci: 1]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
trueSuccessorProbability: 0.05476550680786685
=== Inputs ===
condition: v549 
=== Succesors ===
trueSuccessor: v146 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v549 #trueSuccessor: v146 #falseSuccessor: v147  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = UNCOMPRESSPOINTER (input: v112|DWORD, ~baseRegister: v114|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV [v113|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v115|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 7]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i155 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i155  <|@  <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
referencedType: [null]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2e1c8772
stamp: void
targetMethod: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)>
=== Inputs ===
arguments: a278 a2 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a278 a2  <|@  <|@
tid ?760 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<BoxesRunTime.equals2(Object, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: BoxesRunTime.java
sourceLine: 131
stackSize: 0
=== Inputs ===
outerFrameState: ?171 
values: - - 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?171 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i155 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 12
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#BoxesRunTime.equalsNumObject
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v358 
stateDuring: ?760 
=== Succesors ===
next: v179 
=== Usages ===
i178 
=== Predecessor ===
v146 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v358 stateDuring: ?760 #next: v179  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
i155 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v116|DWORD] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:132) [bci: 16]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1019 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1019  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1019 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:144) [bci: 39]
at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:132) [bci: 17]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullCheck: false
stamp: Klass*!(compressed base: 34359738368 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1059 
=== Succesors ===
next: v815 
=== Usages ===
v993 
=== Predecessor ===
v147 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1059 #next: v815  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at platform/jdk.internal.vm.compiler@11.0.14.1/org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:145) [bci: 50]
at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:132) [bci: 17]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1019 
y: v992 
=== Succesors ===
=== Usages ===
v815 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1019 y: v992  <|@  <|@
f <@*|@fixed>@ <|@
tid v815 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@fb83e9ab <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:132) [bci: 17]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
trueSuccessorProbability: 0.029046971273105515
=== Inputs ===
condition: v993 
=== Succesors ===
trueSuccessor: v813 
falseSuccessor: v812 
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v993 #trueSuccessor: v813 #falseSuccessor: v812  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v55|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 23]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i165 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i165  <|@  <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
referencedType: [null]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@4788c9b6
stamp: void
targetMethod: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)>
=== Inputs ===
arguments: a278 a2 
=== Succesors ===
=== Usages ===
i165 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a278 a2  <|@  <|@
tid ?762 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<BoxesRunTime.equals2(Object, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: BoxesRunTime.java
sourceLine: 133
stackSize: 0
=== Inputs ===
outerFrameState: ?171 
values: - - 
=== Succesors ===
=== Usages ===
i165 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?171 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i165 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 28
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#BoxesRunTime.equalsCharObject
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v359 
stateDuring: ?762 
=== Succesors ===
next: v180 
=== Usages ===
i178 
=== Predecessor ===
v813 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v359 stateDuring: ?762 #next: v180  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
i165 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v117|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:134) [bci: 32]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid v1033 <|@
result [v113|QWORD + 472] <|@
d <@d|@=== Debug Properties ===
displacement: 472
scale: Times1
stamp: void*
=== Inputs ===
base: v862 
index: - 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v862 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v365 <|@
result v118|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1033 
=== Succesors ===
next: j368 
=== Usages ===
v1034 v369 
=== Predecessor ===
v812 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1033 #next: j368  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
result [v118|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: v365 
index: - 
=== Succesors ===
=== Usages ===
j368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j368 <|@
result v119|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1034 
=== Succesors ===
next: i169 
=== Usages ===
v369 
=== Predecessor ===
v365 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1034 #next: i169  <|@  <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
referencedType: [null]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@38518f80
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j368 
metaspaceMethod: v365 
arguments: a278 a2 
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j368 metaspaceMethod: v365 arguments: a278 a2  <|@  <|@
tid ?761 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<BoxesRunTime.equals2(Object, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: BoxesRunTime.java
sourceLine: 137
stackSize: 0
=== Inputs ===
outerFrameState: ?171 
values: - - 
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?171 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i169 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
polymorphic: true
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Indirect#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v369 
stateDuring: ?761 
=== Succesors ===
next: v181 
=== Usages ===
i178 
=== Predecessor ===
j368 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v369 stateDuring: ?761 #next: v181  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
i169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [v113|QWORD + 472] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [v118|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v120|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i178 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v176 
values: i155 i165 i169 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v176 values: i155 i165 i169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v179 v180 v181 
=== Succesors ===
next: v54 
=== Usages ===
i178 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v179 v180 v181 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i178 
y: i48 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i178 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stamp: void
trueSuccessorProbability: 0.7817474354439335
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v50 
falseSuccessor: v1072 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v50 #falseSuccessor: v1072  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v121|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1020 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1020  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1020 <|@
result v122|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.table
nodeSourcePosition: at scala.collection.mutable.HashSet.table(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 38]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1026 
=== Succesors ===
next: i1021 
=== Usages ===
a342 v1031 
=== Predecessor ===
v50 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1026 #next: i1021  <|@  <|@
tid ?47 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<FlatHashTable.addEntry(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
rethrowException: false
sourceFile: FlatHashTable.scala
sourceLine: 156
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i277 - i48 
=== Succesors ===
=== Usages ===
i61 v486 v799 i1021 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i277 - i48  <|@  <|@
f <@~|@floating>@ <|@
tid v1031 <|@
result [v122|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1020 
=== Succesors ===
=== Usages ===
i1021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1020  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1021 <|@
result v123|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 43]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?47 
guard: - 
address: v1031 
=== Succesors ===
next: i61 
=== Usages ===
i61 v349 
=== Predecessor ===
a1020 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?47 guard: - address: v1031 #next: i61  <|@  <|@
f <@~|@floating>@ <|@
tid i56 <|@
result v124|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$125/0x000000084014b440@68d6fc8
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 36]
stamp: i32 [-2147483645 - 2147483647]
=== Inputs ===
x: i277 
y: i55 
=== Succesors ===
=== Usages ===
i61 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i277 y: i55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i61 <|@
result v125|DWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 44]
op: REM
stamp: i32 [-2147483645 - 2147483646]
type: SIGNED
=== Inputs ===
stateBefore: ?47 
x: i56 
y: i1021 
zeroCheck: - 
=== Succesors ===
next: v540 
=== Usages ===
i277 v1032 v349 
=== Predecessor ===
i1021 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?47 x: i56 y: i1021 zeroCheck: - #next: v540  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@15088f07
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i61 
y: i1021 
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i61 y: i1021  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v349 
=== Succesors ===
trueSuccessor: v536 
falseSuccessor: v539 
=== Usages ===
=== Predecessor ===
i61 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v349 #trueSuccessor: v536 #falseSuccessor: v539  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction v123|DWORD = MOV [v122|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = INC v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v124|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v123|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v123|DWORD, y: v125|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v486 
=== Usages ===
a1022 
=== Predecessor ===
v540 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:155) [bci: 20]
stamp: void
=== Inputs ===
stateBefore: ?47 
=== Succesors ===
next: a1022 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?47 #next: a1022  <|@  <|@
f <@~|@floating>@ <|@
tid a342 <|@
result v127|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.mutable.HashSet.table(HashSet.scala:41) [bci: 1]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 38]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1020 
=== Succesors ===
=== Usages ===
v1032 a281 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1020  <|@  <|@
f <@~|@floating>@ <|@
tid v1032 <|@
result [v127|QWORD[.] + v125|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a342 
index: i61 
=== Succesors ===
=== Usages ===
a1022 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a342 index: i61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1022 <|@
result v128|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v536 
address: v1032 
=== Succesors ===
next: v66 
=== Usages ===
a357 
=== Predecessor ===
v486 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v536 address: v1032 #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid a357 <|@
result v129|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1022 
=== Succesors ===
=== Usages ===
a278 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1022  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:155) [bci: 20]
stamp: void
=== Inputs ===
loopBegin: v33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a1022 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v33  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction SAFEPOINT v126|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v128|DWORD[.] = MOV [v127|QWORD[.] + v125|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = UNCOMPRESSPOINTER (input: v128|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|QWORD[.], v125|DWORD, v127|QWORD[.]] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v799 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v799  <|@  <|@
f <@~|@floating>@ <|@
tid i801 <|@
result int[-89627|0xfffffffffffea1e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -89627
stableDimension: 0
stamp: i32 [-89627] â‡Š00000000fffea1e5 â‡ˆ00000000fffea1e5
stampKind: i32
value: int[-89627|0xfffffffffffea1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 43]
stamp: void
=== Inputs ===
stateBefore: ?47 
actionAndReason: i801 
speculation: j419 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?47 actionAndReason: i801 speculation: j419  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569704089601104753
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1073 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1073  <|@  <|@
f <@*|@fixed>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1071 
=== Predecessor ===
v1072 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1073 v177 
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1073 v177 #next: v52  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v279 
=== Usages ===
=== Predecessor ===
v1071 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v279  <|@  <|@
f <@*|@fixed>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 33]
stamp: void
=== Inputs ===
result: i48 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i48 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:158) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v807 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v807  <|@  <|@
f <@~|@floating>@ <|@
tid i809 <|@
result int[-85275|0xfffffffffffeb2e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -85275
stableDimension: 0
stamp: i32 [-85275] â‡Š00000000fffeb2e5 â‡ˆ00000000fffeb2e5
stampKind: i32
value: int[-85275|0xfffffffffffeb2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v807 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:157) [bci: 43]
stamp: void
=== Inputs ===
stateBefore: ?223 
actionAndReason: i809 
speculation: j419 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?223 actionAndReason: i809 speculation: j419  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1076 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1076  <|@  <|@
f <@*|@fixed>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 33]
stamp: void
=== Inputs ===
result: i48 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i48 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:154) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v777 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v777  <|@  <|@
f <@~|@floating>@ <|@
tid i781 <|@
result int[-80411|0xfffffffffffec5e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -80411
stableDimension: 0
stamp: i32 [-80411] â‡Š00000000fffec5e5 â‡ˆ00000000fffec5e5
stampKind: i32
value: int[-80411|0xfffffffffffec5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v777 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable$HashUtils.improve(FlatHashTable.scala:423) [bci: 4]
at scala.collection.mutable.FlatHashTable$HashUtils.improve$(FlatHashTable.scala:423) [bci: 3]
at scala.collection.mutable.HashSet.improve(HashSet.scala:41) [bci: 3]
at scala.collection.mutable.FlatHashTable.index(FlatHashTable.scala:332) [bci: 8]
at scala.collection.mutable.FlatHashTable.index$(FlatHashTable.scala:327) [bci: 2]
at scala.collection.mutable.HashSet.index(HashSet.scala:41) [bci: 2]
at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: void
=== Inputs ===
stateBefore: ?23 
actionAndReason: i781 
speculation: j419 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?23 actionAndReason: i781 speculation: j419  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v769 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v769  <|@  <|@
f <@~|@floating>@ <|@
tid i771 <|@
result int[-74803|0xfffffffffffedbcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -74803
stableDimension: 0
stamp: i32 [-74803] â‡Š00000000fffedbcd â‡ˆ00000000fffedbcd
stampKind: i32
value: int[-74803|0xfffffffffffedbcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v769 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i771 
speculation: j419 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i771 speculation: j419  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: [v4|QWORD + 488]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = AND v7|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = SHR v7|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV v9|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v16|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v19|DWORD = MOV [v18|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = DEC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = IMUL v15|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = BSWAP v22|DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = IMUL v23|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = NEG v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SHL (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = OR (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = POPCNT v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SHR (x: v28|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND (x: v21|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = MOV [v34|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|DWORD[.], y: v35|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD, v34|QWORD[.]] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction v60|DWORD = MOV [v59|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV [v59|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v61|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [v63|QWORD + 232] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOV [v65|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v68|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOVSXD v66|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: [v67|QWORD + v69|QWORD * 1]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v66|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-102699|0xfffffffffffe6ed5]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr   -1  <|@ instruction [v111|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v77|DWORD[.], y: v77|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v78|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD[.] + v58|DWORD * 4 + 16], y: v85|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[*] = XOR (x: v86|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v87|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[*] = SHR v89|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v91|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600255641850084083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B47" "B49" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ADD (x: v97|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v98|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOV [v35|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [v38|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v35|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [v38|QWORD + 472] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [v44|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v44|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v47|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = INC v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v50|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v49|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = MOV [v52|QWORD[.] + v51|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.], v51|DWORD, v52|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOV [v55|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = UNCOMPRESSPOINTER (input: v112|DWORD, ~baseRegister: v114|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV [v113|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v115|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v55|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [v113|QWORD + 472] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [v118|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v120|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v121|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction v123|DWORD = MOV [v122|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = INC v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v124|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v123|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v123|DWORD, y: v125|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction SAFEPOINT v126|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v128|DWORD[.] = MOV [v127|QWORD[.] + v125|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = UNCOMPRESSPOINTER (input: v128|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|QWORD[.], v125|DWORD, v127|QWORD[.]] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.], v56|DWORD, v57|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v55|QWORD[.], y: v55|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v116|DWORD] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v117|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV [v67|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV [v70|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SHL v72|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = LEA [v73|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVSXD v74|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v70|QWORD + v75|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = INC v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v110|DWORD] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-102699|0xfffffffffffe6ed5]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = MOV [v79|QWORD[.]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD + v83|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v82|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 56], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|DWORD, v57|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v92|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585428038581536961
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD + 32], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|DWORD] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v4|QWORD + 488] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v12|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572430233452165828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v88|QWORD[*] + v90|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[*] = ADD (x: v88|QWORD[*], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v93|QWORD + v95|QWORD * 1 - 8], y: v94|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 112], y: v96|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569704089601104753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    probability 4563576711971613252
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v100|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: [v99|QWORD + 32]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v99|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOV [v102|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL v104|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = LEA [v105|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVSXD v106|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOV [v102|QWORD + v107|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: v108|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = INC v104|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v103|DWORD, y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v94|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD + 32], y: v101|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-99099|0xfffffffffffe7ce5]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: v0|QWORD[.] v98|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: v0|QWORD[.] - v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104723|0xfffffffffffe66ed]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: [v4|QWORD + 488]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = AND v7|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = SHR v7|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV v9|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v16|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v19|DWORD = MOV [v18|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = DEC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = IMUL v15|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = BSWAP v22|DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = IMUL v23|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = NEG v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SHL (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = OR (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = POPCNT v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SHR (x: v28|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND (x: v21|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = MOV [v34|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|DWORD[.], y: v35|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD, v34|QWORD[.]] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction v60|DWORD = MOV [v59|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV [v59|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v61|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [v63|QWORD + 232] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOV [v65|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v68|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOVSXD v66|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: [v67|QWORD + v69|QWORD * 1]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v66|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-102699|0xfffffffffffe6ed5]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr   -1  <|@ instruction [v111|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v77|DWORD[.], y: v77|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v78|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD[.] + v58|DWORD * 4 + 16], y: v85|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[*] = XOR (x: v86|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v87|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[*] = SHR v89|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v91|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600255641850084083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B47" "B49" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ADD (x: v97|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v98|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOV [v35|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [v38|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v35|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [v38|QWORD + 472] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [v44|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v44|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v47|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = INC v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v50|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v49|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = MOV [v52|QWORD[.] + v51|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.], v51|DWORD, v52|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOV [v55|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = UNCOMPRESSPOINTER (input: v112|DWORD, ~baseRegister: v114|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV [v113|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v115|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v55|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [v113|QWORD + 472] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [v118|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v120|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v121|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction v123|DWORD = MOV [v122|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = INC v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v124|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v123|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v123|DWORD, y: v125|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction SAFEPOINT v126|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v128|DWORD[.] = MOV [v127|QWORD[.] + v125|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = UNCOMPRESSPOINTER (input: v128|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|QWORD[.], v125|DWORD, v127|QWORD[.]] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.], v56|DWORD, v57|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v55|QWORD[.], y: v55|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v116|DWORD] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v117|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV [v67|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV [v70|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SHL v72|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = LEA [v73|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVSXD v74|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v70|QWORD + v75|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = INC v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v110|DWORD] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-102699|0xfffffffffffe6ed5]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = MOV [v79|QWORD[.]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD + v83|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v82|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 56], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|DWORD, v57|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v92|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585428038581536961
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD + 32], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|DWORD] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v4|QWORD + 488] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v12|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572430233452165828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v88|QWORD[*] + v90|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[*] = ADD (x: v88|QWORD[*], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v93|QWORD + v95|QWORD * 1 - 8], y: v94|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 112], y: v96|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569704089601104753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    probability 4563576711971613252
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v100|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: [v99|QWORD + 32]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v99|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOV [v102|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL v104|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = LEA [v105|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVSXD v106|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOV [v102|QWORD + v107|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: v108|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = INC v104|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v103|DWORD, y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v94|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD + 32], y: v101|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-99099|0xfffffffffffe7ce5]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: v0|QWORD[.] v98|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: v0|QWORD[.] - v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104723|0xfffffffffffe66ed]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: [v4|QWORD + 488]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = AND v7|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = SHR v7|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV v9|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v16|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v19|DWORD = MOV [v18|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = DEC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = IMUL v15|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = BSWAP v22|DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = IMUL v23|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = NEG v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SHL (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = OR (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = POPCNT v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SHR (x: v28|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND (x: v21|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = MOV [v34|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|DWORD[.], y: v35|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD, v34|QWORD[.]] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction v60|DWORD = MOV [v59|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV [v59|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v61|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [v63|QWORD + 232] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOV [v65|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v68|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOVSXD v66|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: [v67|QWORD + v69|QWORD * 1]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v66|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-102699|0xfffffffffffe6ed5]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr   -1  <|@ instruction [v111|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v77|DWORD[.], y: v77|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v78|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD[.] + v58|DWORD * 4 + 16], y: v85|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[*] = XOR (x: v86|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v87|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[*] = SHR v89|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v91|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600255641850084083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B47" "B49" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ADD (x: v97|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v98|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOV [v35|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [v38|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v35|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [v38|QWORD + 472] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [v44|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v44|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v47|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = INC v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v50|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v49|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = MOV [v52|QWORD[.] + v51|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.], v51|DWORD, v52|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOV [v55|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = UNCOMPRESSPOINTER (input: v112|DWORD, ~baseRegister: v114|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV [v113|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v115|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v55|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [v113|QWORD + 472] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [v118|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v120|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v121|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction v123|DWORD = MOV [v122|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = INC v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v124|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v123|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v123|DWORD, y: v125|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction SAFEPOINT v126|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v128|DWORD[.] = MOV [v127|QWORD[.] + v125|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = UNCOMPRESSPOINTER (input: v128|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|QWORD[.], v125|DWORD, v127|QWORD[.]] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.], v56|DWORD, v57|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v55|QWORD[.], y: v55|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v116|DWORD] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v117|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV [v67|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV [v70|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SHL v72|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = LEA [v73|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVSXD v74|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v70|QWORD + v75|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = INC v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v110|DWORD] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-102699|0xfffffffffffe6ed5]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = MOV [v79|QWORD[.]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD + v83|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v82|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 56], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|DWORD, v57|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v92|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585428038581536961
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD + 32], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|DWORD] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v4|QWORD + 488] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v12|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572430233452165828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v88|QWORD[*] + v90|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[*] = ADD (x: v88|QWORD[*], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v93|QWORD + v95|QWORD * 1 - 8], y: v94|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 112], y: v96|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569704089601104753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    probability 4563576711971613252
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v100|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: [v99|QWORD + 32]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v99|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOV [v102|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL v104|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = LEA [v105|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVSXD v106|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOV [v102|QWORD + v107|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: v108|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = INC v104|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v103|DWORD, y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v94|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD + 32], y: v101|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-99099|0xfffffffffffe7ce5]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: v0|QWORD[.] v98|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: v0|QWORD[.] - v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104723|0xfffffffffffe66ed]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: [v4|QWORD + 488]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = AND v7|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = SHR v7|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV v9|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v16|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v19|DWORD = MOV [v18|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = DEC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = IMUL v15|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = BSWAP v22|DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = IMUL v23|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = NEG v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SHL (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = OR (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = POPCNT v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SHR (x: v28|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND (x: v21|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = MOV [v34|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|DWORD[.], y: v35|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD, v34|QWORD[.]] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction v60|DWORD = MOV [v59|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV [v59|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v61|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [v63|QWORD + 232] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOV [v65|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v68|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOVSXD v66|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: [v67|QWORD + v69|QWORD * 1]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v66|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-102699|0xfffffffffffe6ed5]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr   -1  <|@ instruction [v111|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v77|DWORD[.], y: v77|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v78|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD[.] + v58|DWORD * 4 + 16], y: v85|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[*] = XOR (x: v86|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST v87|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[*] = SHR v89|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v91|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600255641850084083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B47" "B49" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ADD (x: v97|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v98|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOV [v35|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [v38|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v35|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [v38|QWORD + 472] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [v44|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v44|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v47|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = INC v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v50|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v49|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = MOV [v52|QWORD[.] + v51|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.], v51|DWORD, v52|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOV [v55|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = UNCOMPRESSPOINTER (input: v112|DWORD, ~baseRegister: v114|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = MOV [v113|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v115|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v55|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOV [v113|QWORD + 472] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [v118|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v120|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v121|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction v123|DWORD = MOV [v122|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = INC v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v124|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v123|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v123|DWORD, y: v125|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction SAFEPOINT v126|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v128|DWORD[.] = MOV [v127|QWORD[.] + v125|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = UNCOMPRESSPOINTER (input: v128|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|QWORD[.], v125|DWORD, v127|QWORD[.]] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.], v56|DWORD, v57|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v55|QWORD[.], y: v55|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v116|DWORD] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v117|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV [v67|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV [v70|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SHL v72|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = LEA [v73|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVSXD v74|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v70|QWORD + v75|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = INC v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v110|DWORD] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-102699|0xfffffffffffe6ed5]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = MOV [v79|QWORD[.]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD + v83|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v82|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 56], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|DWORD, v57|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v92|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585428038581536961
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD + 32], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|DWORD] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v4|QWORD + 488] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v12|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572430233452165828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v88|QWORD[*] + v90|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[*] = ADD (x: v88|QWORD[*], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v93|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v93|QWORD + v95|QWORD * 1 - 8], y: v94|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 112], y: v96|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569704089601104753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    probability 4563576711971613252
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v100|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: [v99|QWORD + 32]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v99|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOV [v102|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL v104|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = LEA [v105|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVSXD v106|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOV [v102|QWORD + v107|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: v108|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = INC v104|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v103|DWORD, y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v94|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v99|QWORD + 32], y: v101|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-99099|0xfffffffffffe7ce5]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: v0|QWORD[.] v98|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: v0|QWORD[.] - v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104723|0xfffffffffffe66ed]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction v5|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   22  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   24  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   26  <|@ instruction CMP (x: v6|QWORD, y: [v4|QWORD + 488]) size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction v7|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   34  <|@ instruction v8|QWORD = AND v7|QWORD y: 7 size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP v8|QWORD y: 1 size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction v9|QWORD = SHR v7|QWORD y: 8 size: QWORD <|@ <|@
      nr   44  <|@ instruction v10|DWORD = MOV v9|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction TEST (x: v10|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[v10|DWORD] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   54  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   56  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   58  <|@ instruction v17|DWORD[.] = MOV [v16|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr   62  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v19|DWORD = MOV [v18|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr   66  <|@ instruction v20|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ instruction v21|DWORD = DEC v19|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction v22|DWORD = IMUL v15|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   72  <|@ instruction v23|DWORD = BSWAP v22|DWORD <|@ <|@
      nr   74  <|@ instruction v24|DWORD = IMUL v23|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction v25|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction v26|DWORD = NEG v20|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction v27|DWORD = SHL (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v28|DWORD = OR (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v29|DWORD = POPCNT v21|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction v30|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   92  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction v32|DWORD = SHR (x: v28|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction v33|DWORD = AND (x: v21|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMP (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction v35|DWORD[.] = MOV [v34|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  110  <|@ instruction TEST (x: v35|DWORD[.], y: v35|DWORD[.]) size: DWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[v33|DWORD, v34|QWORD[.]] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  118  <|@ instruction [v58|DWORD, v59|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction v60|DWORD = MOV [v59|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr  122  <|@ instruction v61|DWORD = MOV [v59|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  124  <|@ instruction CMP (x: v60|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction v62|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  132  <|@ instruction v64|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  134  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v61|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  136  <|@ instruction v65|QWORD = MOV [v63|QWORD + 232] size: QWORD <|@ <|@
      nr  138  <|@ instruction v66|DWORD = MOV [v65|QWORD + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction v68|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  142  <|@ instruction v67|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v68|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  144  <|@ instruction v69|QWORD = MOVSXD v66|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction CMP (x: v65|QWORD, y: [v67|QWORD + v69|QWORD * 1]) size: QWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction CMP v66|DWORD y: 32 size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction JUMP ~[int[-102699|0xfffffffffffe6ed5]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr  412  <|@ instruction [v111|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v111|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction v77|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  440  <|@ instruction TEST (x: v77|DWORD[.], y: v77|DWORD[.]) size: DWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction v78|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  448  <|@ instruction TEST (x: v78|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction v85|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  570  <|@ instruction MOV (x: [v59|QWORD[.] + v58|DWORD * 4 + 16], y: v85|DWORD[.]) size: DWORD <|@ <|@
      nr  572  <|@ instruction v86|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  574  <|@ instruction v87|QWORD[*] = XOR (x: v86|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  576  <|@ instruction TEST v87|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction v89|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  590  <|@ instruction v88|QWORD[*] = SHR v89|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  592  <|@ instruction v90|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  594  <|@ instruction v91|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr  596  <|@ instruction CMP v91|DWORD y: 32 size: DWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600255641850084083
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B47" "B49" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction v97|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  680  <|@ instruction v98|DWORD = ADD (x: v97|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  682  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v98|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction CMP (x: v98|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  686  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction v36|DWORD = MOV [v35|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  168  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction CMP (x: v37|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction v39|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  178  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  180  <|@ instruction v40|QWORD = MOV [v38|QWORD + 56] size: QWORD <|@ <|@
      nr  182  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  184  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction CMP [v35|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction v44|QWORD = MOV [v38|QWORD + 472] size: QWORD <|@ <|@
      nr  198  <|@ instruction v45|QWORD = MOV [v44|QWORD + 56] size: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOVE v44|QWORD moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = MOVE v45|QWORD moveKind: QWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  210  <|@ instruction v46|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[v46|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  214  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  216  <|@ instruction TEST (x: v47|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction v48|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  226  <|@ instruction v50|DWORD = INC v33|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD = MOVE v50|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v49|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  234  <|@ instruction v51|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction CMP (x: v49|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  244  <|@ instruction v53|DWORD[.] = MOV [v52|QWORD[.] + v51|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction JUMP ~[v54|QWORD[.], v51|DWORD, v52|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  258  <|@ instruction v112|DWORD = MOV [v55|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  260  <|@ instruction CMP (x: v55|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction v114|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  268  <|@ instruction v113|QWORD = UNCOMPRESSPOINTER (input: v112|DWORD, ~baseRegister: v114|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  270  <|@ instruction v115|QWORD = MOV [v113|QWORD + 56] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMP (x: v41|QWORD, y: v115|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction CMP [v55|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction v118|QWORD = MOV [v113|QWORD + 472] size: QWORD <|@ <|@
      nr  286  <|@ instruction v119|QWORD = MOV [v118|QWORD + 56] size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  298  <|@ instruction v120|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~[v120|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  302  <|@ instruction [v121|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  304  <|@ instruction TEST (x: v121|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction v122|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction v123|DWORD = MOV [v122|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  314  <|@ instruction v124|DWORD = INC v56|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction rax|DWORD = MOVE v124|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v123|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  322  <|@ instruction v125|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction CMP (x: v123|DWORD, y: v125|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction SAFEPOINT v126|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr  332  <|@ instruction v127|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction v128|DWORD[.] = MOV [v127|QWORD[.] + v125|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction v129|QWORD[.] = UNCOMPRESSPOINTER (input: v128|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  338  <|@ instruction JUMP ~[v129|QWORD[.], v125|DWORD, v127|QWORD[.]] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr  250  <|@ instruction [v55|QWORD[.], v56|DWORD, v57|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  252  <|@ instruction TEST (x: v55|QWORD[.], y: v55|QWORD[.]) size: QWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  348  <|@ instruction v116|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[v116|DWORD] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  360  <|@ instruction v117|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[v117|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction CMP (x: v65|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction v70|QWORD = MOV [v67|QWORD + 40] size: QWORD <|@ <|@
      nr  374  <|@ instruction v71|DWORD = MOV [v70|QWORD] size: DWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[int[0|0x0]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  386  <|@ instruction v73|DWORD = SHL v72|DWORD y: 3 size: DWORD <|@ <|@
      nr  388  <|@ instruction v74|DWORD = LEA [v73|DWORD + 8] size: DWORD <|@ <|@
      nr  390  <|@ instruction v75|QWORD = MOVSXD v74|DWORD size: QWORD <|@ <|@
      nr  392  <|@ instruction v76|QWORD = MOV [v70|QWORD + v75|QWORD * 1] size: QWORD <|@ <|@
      nr  394  <|@ instruction CMP (x: v65|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction v110|DWORD = INC v72|DWORD size: DWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[v110|DWORD] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr  378  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  380  <|@ instruction CMP (x: v71|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[int[-102699|0xfffffffffffe6ed5]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  424  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction v79|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  460  <|@ instruction v80|DWORD[.] = MOV [v79|QWORD[.]] size: DWORD <|@ <|@
      nr  462  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  472  <|@ instruction TEST (x: v82|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction v83|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  480  <|@ instruction MOV (x: [v82|QWORD + v83|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  482  <|@ instruction v84|QWORD = LEA [v82|QWORD - 8] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 56], y: v84|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction JUMP ~[v56|DWORD, v57|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  616  <|@ instruction v92|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr  618  <|@ instruction TEST (x: v92|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585428038581536961
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction MOV (x: [v67|QWORD + 32], y: v65|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  492  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  502  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction JUMP ~[v42|DWORD] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction v12|QWORD = MOV [v4|QWORD + 488] size: QWORD <|@ <|@
      nr  510  <|@ instruction v13|QWORD = MOV [v12|QWORD + 56] size: QWORD <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rbx|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rax|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr  520  <|@ instruction v14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[v14|DWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  538  <|@ instruction v11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[v11|DWORD] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  550  <|@ instruction v43|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~[v43|DWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572430233452165828
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction MOVB [v88|QWORD[*] + v90|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  630  <|@ instruction v93|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  632  <|@ instruction v94|QWORD[*] = ADD (x: v88|QWORD[*], y: v90|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction TEST (x: v93|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction v95|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  642  <|@ instruction MOV (x: [v93|QWORD + v95|QWORD * 1 - 8], y: v94|QWORD[*]) size: QWORD <|@ <|@
      nr  644  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 112], y: v96|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569704089601104753
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  666  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    probability 4563576711971613252
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction v100|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  698  <|@ instruction v99|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v100|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  700  <|@ instruction v101|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr  702  <|@ instruction CMP (x: v101|QWORD, y: [v99|QWORD + 32]) size: QWORD <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr  710  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction v102|QWORD = MOV [v99|QWORD + 40] size: QWORD <|@ <|@
      nr  716  <|@ instruction v103|DWORD = MOV [v102|QWORD] size: DWORD <|@ <|@
      nr  718  <|@ instruction JUMP ~[int[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  728  <|@ instruction v105|DWORD = SHL v104|DWORD y: 3 size: DWORD <|@ <|@
      nr  730  <|@ instruction v106|DWORD = LEA [v105|DWORD + 8] size: DWORD <|@ <|@
      nr  732  <|@ instruction v107|QWORD = MOVSXD v106|DWORD size: QWORD <|@ <|@
      nr  734  <|@ instruction v108|QWORD = MOV [v102|QWORD + v107|QWORD * 1] size: QWORD <|@ <|@
      nr  736  <|@ instruction CMP (x: v101|QWORD, y: v108|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction v109|DWORD = INC v104|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[v109|DWORD] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  720  <|@ instruction [v104|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  722  <|@ instruction CMP (x: v103|DWORD, y: v104|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr  766  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  768  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction rsi|QWORD = MOVE v94|QWORD[*] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction MOV (x: [v99|QWORD + 32], y: v101|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr  814  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr  778  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  780  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  808  <|@ instruction JUMP ~[int[-99099|0xfffffffffffe7ce5]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  800  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: v0|QWORD[.] v98|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: v0|QWORD[.] - v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  772  <|@ instruction JUMP ~[int[-104723|0xfffffffffffe66ed]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction v5|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   22  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   24  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   26  <|@ instruction CMP (x: v6|QWORD, y: [v4|QWORD + 488]) size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction v7|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   34  <|@ instruction v8|QWORD = AND v7|QWORD y: 7 size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP v8|QWORD y: 1 size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction v9|QWORD = SHR v7|QWORD y: 8 size: QWORD <|@ <|@
      nr   44  <|@ instruction v10|DWORD = MOV v9|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction TEST (x: v10|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[v10|DWORD] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   54  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   56  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   58  <|@ instruction v17|DWORD[.] = MOV [v16|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr   62  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v19|DWORD = MOV [v18|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr   66  <|@ instruction v20|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ instruction v21|DWORD = DEC v19|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction v22|DWORD = IMUL v15|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   72  <|@ instruction v23|DWORD = BSWAP v22|DWORD <|@ <|@
      nr   74  <|@ instruction v24|DWORD = IMUL v23|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction v25|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction v26|DWORD = NEG v20|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction v27|DWORD = SHL (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v28|DWORD = OR (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v29|DWORD = POPCNT v21|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction v30|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   92  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction v32|DWORD = SHR (x: v28|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction v33|DWORD = AND (x: v21|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMP (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction v35|DWORD[.] = MOV [v34|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  110  <|@ instruction TEST (x: v35|DWORD[.], y: v35|DWORD[.]) size: DWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[v33|DWORD, v34|QWORD[.]] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  118  <|@ instruction [v58|DWORD, v59|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction v60|DWORD = MOV [v59|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr  122  <|@ instruction v61|DWORD = MOV [v59|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  124  <|@ instruction CMP (x: v60|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction v62|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  132  <|@ instruction v64|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  134  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v61|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  136  <|@ instruction v65|QWORD = MOV [v63|QWORD + 232] size: QWORD <|@ <|@
      nr  138  <|@ instruction v66|DWORD = MOV [v65|QWORD + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction v68|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  142  <|@ instruction v67|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v68|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  144  <|@ instruction v69|QWORD = MOVSXD v66|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction CMP (x: v65|QWORD, y: [v67|QWORD + v69|QWORD * 1]) size: QWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction CMP v66|DWORD y: 32 size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction JUMP ~[int[-102699|0xfffffffffffe6ed5]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr  412  <|@ instruction [v111|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v111|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction v77|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  440  <|@ instruction TEST (x: v77|DWORD[.], y: v77|DWORD[.]) size: DWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction v78|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  448  <|@ instruction TEST (x: v78|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction v85|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  570  <|@ instruction MOV (x: [v59|QWORD[.] + v58|DWORD * 4 + 16], y: v85|DWORD[.]) size: DWORD <|@ <|@
      nr  572  <|@ instruction v86|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  574  <|@ instruction v87|QWORD[*] = XOR (x: v86|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  576  <|@ instruction TEST v87|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction v89|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  590  <|@ instruction v88|QWORD[*] = SHR v89|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  592  <|@ instruction v90|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  594  <|@ instruction v91|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr  596  <|@ instruction CMP v91|DWORD y: 32 size: DWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600255641850084083
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B47" "B49" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction v97|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  680  <|@ instruction v98|DWORD = ADD (x: v97|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  682  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v98|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction CMP (x: v98|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  686  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction v36|DWORD = MOV [v35|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  168  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction CMP (x: v37|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction v39|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  178  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  180  <|@ instruction v40|QWORD = MOV [v38|QWORD + 56] size: QWORD <|@ <|@
      nr  182  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  184  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction CMP [v35|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction v44|QWORD = MOV [v38|QWORD + 472] size: QWORD <|@ <|@
      nr  198  <|@ instruction v45|QWORD = MOV [v44|QWORD + 56] size: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOVE v44|QWORD moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = MOVE v45|QWORD moveKind: QWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  210  <|@ instruction v46|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[v46|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  214  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  216  <|@ instruction TEST (x: v47|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction v48|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  226  <|@ instruction v50|DWORD = INC v33|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD = MOVE v50|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v49|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  234  <|@ instruction v51|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction CMP (x: v49|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  244  <|@ instruction v53|DWORD[.] = MOV [v52|QWORD[.] + v51|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction JUMP ~[v54|QWORD[.], v51|DWORD, v52|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  258  <|@ instruction v112|DWORD = MOV [v55|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  260  <|@ instruction CMP (x: v55|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction v114|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  268  <|@ instruction v113|QWORD = UNCOMPRESSPOINTER (input: v112|DWORD, ~baseRegister: v114|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  270  <|@ instruction v115|QWORD = MOV [v113|QWORD + 56] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMP (x: v41|QWORD, y: v115|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction CMP [v55|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction v118|QWORD = MOV [v113|QWORD + 472] size: QWORD <|@ <|@
      nr  286  <|@ instruction v119|QWORD = MOV [v118|QWORD + 56] size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  298  <|@ instruction v120|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~[v120|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  302  <|@ instruction [v121|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  304  <|@ instruction TEST (x: v121|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction v122|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction v123|DWORD = MOV [v122|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  314  <|@ instruction v124|DWORD = INC v56|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction rax|DWORD = MOVE v124|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v123|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  322  <|@ instruction v125|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction CMP (x: v123|DWORD, y: v125|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction SAFEPOINT v126|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr  332  <|@ instruction v127|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction v128|DWORD[.] = MOV [v127|QWORD[.] + v125|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction v129|QWORD[.] = UNCOMPRESSPOINTER (input: v128|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  338  <|@ instruction JUMP ~[v129|QWORD[.], v125|DWORD, v127|QWORD[.]] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr  250  <|@ instruction [v55|QWORD[.], v56|DWORD, v57|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  252  <|@ instruction TEST (x: v55|QWORD[.], y: v55|QWORD[.]) size: QWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  348  <|@ instruction v116|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[v116|DWORD] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  360  <|@ instruction v117|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[v117|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction CMP (x: v65|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction v70|QWORD = MOV [v67|QWORD + 40] size: QWORD <|@ <|@
      nr  374  <|@ instruction v71|DWORD = MOV [v70|QWORD] size: DWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[int[0|0x0]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  386  <|@ instruction v73|DWORD = SHL v72|DWORD y: 3 size: DWORD <|@ <|@
      nr  388  <|@ instruction v74|DWORD = LEA [v73|DWORD + 8] size: DWORD <|@ <|@
      nr  390  <|@ instruction v75|QWORD = MOVSXD v74|DWORD size: QWORD <|@ <|@
      nr  392  <|@ instruction v76|QWORD = MOV [v70|QWORD + v75|QWORD * 1] size: QWORD <|@ <|@
      nr  394  <|@ instruction CMP (x: v65|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction v110|DWORD = INC v72|DWORD size: DWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[v110|DWORD] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr  378  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  380  <|@ instruction CMP (x: v71|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[int[-102699|0xfffffffffffe6ed5]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  424  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction v79|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  460  <|@ instruction v80|DWORD[.] = MOV [v79|QWORD[.]] size: DWORD <|@ <|@
      nr  462  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  472  <|@ instruction TEST (x: v82|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction v83|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  480  <|@ instruction MOV (x: [v82|QWORD + v83|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  482  <|@ instruction v84|QWORD = LEA [v82|QWORD - 8] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 56], y: v84|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction JUMP ~[v56|DWORD, v57|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  616  <|@ instruction v92|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr  618  <|@ instruction TEST (x: v92|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585428038581536961
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction MOV (x: [v67|QWORD + 32], y: v65|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  492  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  502  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction JUMP ~[v42|DWORD] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction v12|QWORD = MOV [v4|QWORD + 488] size: QWORD <|@ <|@
      nr  510  <|@ instruction v13|QWORD = MOV [v12|QWORD + 56] size: QWORD <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rbx|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rax|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr  520  <|@ instruction v14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[v14|DWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  538  <|@ instruction v11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[v11|DWORD] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  550  <|@ instruction v43|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~[v43|DWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572430233452165828
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction MOVB [v88|QWORD[*] + v90|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  630  <|@ instruction v93|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  632  <|@ instruction v94|QWORD[*] = ADD (x: v88|QWORD[*], y: v90|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction TEST (x: v93|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction v95|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  642  <|@ instruction MOV (x: [v93|QWORD + v95|QWORD * 1 - 8], y: v94|QWORD[*]) size: QWORD <|@ <|@
      nr  644  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 112], y: v96|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569704089601104753
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  666  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    probability 4563576711971613252
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction v100|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  698  <|@ instruction v99|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v100|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  700  <|@ instruction v101|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr  702  <|@ instruction CMP (x: v101|QWORD, y: [v99|QWORD + 32]) size: QWORD <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr  710  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction v102|QWORD = MOV [v99|QWORD + 40] size: QWORD <|@ <|@
      nr  716  <|@ instruction v103|DWORD = MOV [v102|QWORD] size: DWORD <|@ <|@
      nr  718  <|@ instruction JUMP ~[int[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  728  <|@ instruction v105|DWORD = SHL v104|DWORD y: 3 size: DWORD <|@ <|@
      nr  730  <|@ instruction v106|DWORD = LEA [v105|DWORD + 8] size: DWORD <|@ <|@
      nr  732  <|@ instruction v107|QWORD = MOVSXD v106|DWORD size: QWORD <|@ <|@
      nr  734  <|@ instruction v108|QWORD = MOV [v102|QWORD + v107|QWORD * 1] size: QWORD <|@ <|@
      nr  736  <|@ instruction CMP (x: v101|QWORD, y: v108|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction v109|DWORD = INC v104|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[v109|DWORD] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  720  <|@ instruction [v104|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  722  <|@ instruction CMP (x: v103|DWORD, y: v104|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr  766  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  768  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction rsi|QWORD = MOVE v94|QWORD[*] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction MOV (x: [v99|QWORD + 32], y: v101|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr  814  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr  778  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  780  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  808  <|@ instruction JUMP ~[int[-99099|0xfffffffffffe7ce5]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  800  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: v0|QWORD[.] v98|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: v0|QWORD[.] - v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  772  <|@ instruction JUMP ~[int[-104723|0xfffffffffffe66ed]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v45|q [0, 1[[206, 210[[228, 233[[294, 298[[316, 321[[346, 348[[358, 360[[422, 424[[490, 492[[500, 502[[516, 520[[536, 538[[548, 550[[562, 563[[664, 666[[672, 673[[690, 692[[764, 765[[766, 768[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v20|d [0, 1[[76, 79[[82, 85[[94, 97[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 8[[202, 209[[230, 234[[290, 297[[318, 322[[344, 347[[356, 359[[498, 501[[518, 519[[536, 537[[546, 549[[562, 563[[672, 673[[764, 765[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v44|q [0, 1[[204, 209[[292, 297[[346, 347[[358, 359[[500, 501[[514, 519[[548, 549[[764, 765[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[548, 549[[562, 563[[672, 673[[764, 765[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v37|q [0, 6[[200, 209[[288, 297[[342, 347[[354, 359[[496, 501[[512, 519[[534, 537[[544, 549[[560, 563[[670, 673[[762, 765[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[548, 549[[764, 765[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[548, 549[[764, 765[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [6, 419[[426, 488[[494, 650[[668, 688[[694, 762[[770, 781[[782, 789[[790, 797[[798, 805[[806, 817[6 MustHaveRegister 12 MustHaveRegister 62 MustHaveRegister 66 MustHaveRegister 222 MustHaveRegister 310 MustHaveRegister 339 LiveAtLoopEnd 438 MustHaveRegister 680 MustHaveRegister 682 MustHaveRegister 684 MustHaveRegister 762 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [8, 419[[426, 488[[494, 582[[770, 781[[782, 789[[790, 797[[806, 817[8 MustHaveRegister 10 MustHaveRegister 32 MustHaveRegister 130 MustHaveRegister 170 ShouldHaveRegister 202 ShouldHaveRegister 260 ShouldHaveRegister 290 ShouldHaveRegister 339 LiveAtLoopEnd 344 ShouldHaveRegister 356 ShouldHaveRegister 498 ShouldHaveRegister 512 ShouldHaveRegister 534 ShouldHaveRegister 546 ShouldHaveRegister 568 MustHaveRegister 574 ShouldHaveRegister 582 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [10, 22[10 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [12, 156[[160, 408[[426, 488[[494, 650[[668, 688[[694, 708[12 MustHaveRegister 14 ShouldHaveRegister 698 MustHaveRegister 708 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q v2|d [22, 30[[506, 508[22 MustHaveRegister 26 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [20, 23[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [24, 26[24 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [32, 42[32 MustHaveRegister 34 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v7|q [34, 36[34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v7|q [42, 44[42 MustHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d v15|d [44, 53[44 MustHaveRegister 46 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d rax|d [538, 541[538 MustHaveRegister 540 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [508, 514[508 MustHaveRegister 510 MustHaveRegister 514 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [510, 516[510 MustHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d rax|d [520, 523[520 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v11|d [54, 104[[810, 817[70 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d -1 [58, 60[58 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d -1 [62, 106[62 MustHaveRegister 64 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d -1 [64, 100[64 MustHaveRegister 68 ShouldHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d -1 [66, 80[66 MustHaveRegister 76 ShouldHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d v19|d [68, 98[68 MustHaveRegister 88 ShouldHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [70, 72[70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v22|d [72, 74[72 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d -1 [74, 84[74 MustHaveRegister 78 ShouldHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d v24|d [78, 86[78 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d v20|d [80, 82[80 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d v24|d [84, 86[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v25|d [86, 96[86 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d -1 [88, 93[88 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d -1 [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d v30|d [92, 94[92 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d v28|d [96, 98[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d v21|d [98, 117[[164, 240[[494, 506[[542, 554[[774, 781[98 MustHaveRegister 100 ShouldHaveRegister 108 MustHaveRegister 116 ShouldHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q v18|d [106, 117[106 MustHaveRegister 108 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d -1 [108, 114[[164, 190[108 MustHaveRegister 110 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d -1 [166, 178[166 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q v35|d [168, 200[[494, 496[[542, 544[168 MustHaveRegister 170 MustHaveRegister 200 ShouldHaveRegister 496 ShouldHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q v36|d [178, 196[178 MustHaveRegister 180 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q -1 [176, 179[176 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q -1 [180, 184[180 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q -1 [182, 364[[494, 506[[542, 554[182 MustHaveRegister 184 MustHaveRegister 272 MustHaveRegister 339 LiveAtLoopEnd  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d rax|d [502, 505[502 MustHaveRegister 504 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d rax|d [550, 553[550 MustHaveRegister 552 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q -1 [196, 204[196 MustHaveRegister 198 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q -1 [198, 206[198 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[v46|d]" v46|d rax|d [210, 213[210 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d v46|d [214, 216[216 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d -1 [222, 242[222 MustHaveRegister 224 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[v49|d]" v49|d -1 [224, 236[224 MustHaveRegister 232 ShouldHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d v33|d [226, 228[226 MustHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d rdx|- [234, 249[234 MustHaveRegister 236 ShouldHaveRegister 244 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q v48|d [242, 249[242 MustHaveRegister 244 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d -1 [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q v53|d [246, 249[246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q v129|q [250, 288[[340, 342[[352, 354[252 MustHaveRegister 258 MustHaveRegister 260 MustHaveRegister 278 MustHaveRegister 288 ShouldHaveRegister 342 ShouldHaveRegister 354 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d v58|d [250, 331[[340, 364[[426, 429[[790, 797[314 ShouldHaveRegister 428 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q v59|q [250, 256[[426, 429[428 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[v58|d]" v58|d v33|d [118, 164[[364, 419[[430, 488[[554, 650[[668, 688[[694, 746[[770, 774[[798, 805[[806, 810[124 ShouldHaveRegister 458 MustHaveRegister 570 MustHaveRegister 572 MustHaveRegister 588 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q v34|q [118, 156[[160, 164[[364, 408[[430, 488[[554, 588[120 MustHaveRegister 122 MustHaveRegister 458 MustHaveRegister 570 MustHaveRegister 572 MustHaveRegister 588 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[v60|d]" v60|d -1 [120, 124[120 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[v61|d]" v61|d -1 [122, 134[122 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[v62|d]" v62|d -1 [130, 142[130 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q v61|d [134, 136[134 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q -1 [132, 135[132 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q -1 [136, 156[[364, 404[[430, 432[136 MustHaveRegister 138 MustHaveRegister 146 MustHaveRegister 366 MustHaveRegister 394 MustHaveRegister 403 LiveAtLoopEnd 432 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[v66|d]" v66|d -1 [138, 152[138 MustHaveRegister 144 ShouldHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q v62|d [142, 156[[364, 404[[430, 432[142 MustHaveRegister 146 MustHaveRegister 366 ShouldHaveRegister 372 MustHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q -1 [140, 143[140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[v69|q]" v69|q -1 [144, 146[144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[v70|q]" v70|q -1 [372, 404[372 MustHaveRegister 374 MustHaveRegister 392 MustHaveRegister 403 LiveAtLoopEnd  "NoSpillStore"
  v71|d DWORD "[v71|d]" v71|d -1 [374, 404[374 MustHaveRegister 380 MustHaveRegister 403 LiveAtLoopEnd  "NoSpillStore"
  v72|d DWORD "[v72|d]" v72|d v110|d [378, 400[380 ShouldHaveRegister 386 MustHaveRegister 400 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[v73|d]" v73|d v72|d [386, 388[386 MustHaveRegister 388 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[v74|d]" v74|d -1 [388, 390[388 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v75|q QWORD "[v75|q]" v75|q -1 [390, 392[390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[v76|q]" v76|q -1 [392, 394[392 MustHaveRegister 394 ShouldHaveRegister  "NoSpillStore"
  v77|d DWORD "[v77|d]" v77|d -1 [438, 440[438 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[v78|d]" v78|d -1 [446, 448[446 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[v79|q]" v79|q -1 [458, 460[458 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v80|d DWORD "[v80|d]" v80|d -1 [460, 462[460 MustHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[v81|q]" v81|q v80|d [462, 480[[558, 560[462 MustHaveRegister 464 MustHaveRegister 480 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[v82|q]" v82|q -1 [470, 482[470 MustHaveRegister 472 MustHaveRegister 480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[v83|q]" v83|q -1 [478, 480[478 MustHaveRegister 480 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[v84|q]" v84|q -1 [482, 484[482 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[v85|d]" v85|d v1|q [568, 570[568 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[v86|q]" v86|q -1 [572, 574[572 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v87|q QWORD "[v87|q]" v87|q v86|q [574, 576[574 MustHaveRegister 576 ShouldHaveRegister  "NoSpillStore"
  v88|q QWORD "[v88|q]" v88|q v89|q [590, 600[[612, 622[[626, 632[590 MustHaveRegister 594 MustHaveRegister 616 MustHaveRegister 628 MustHaveRegister 632 ShouldHaveRegister  "NoSpillStore"
  v89|q QWORD "[v89|q]" v89|q -1 [588, 590[588 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[v90|q]" v90|q -1 [592, 600[[612, 622[[626, 632[592 MustHaveRegister 594 MustHaveRegister 616 MustHaveRegister 628 MustHaveRegister 632 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[v91|d]" v91|d -1 [594, 596[594 MustHaveRegister 596 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[v92|d]" v92|d -1 [616, 618[616 MustHaveRegister 618 MustHaveRegister  "NoSpillStore"
  v93|q QWORD "[v93|q]" v93|q -1 [630, 644[630 MustHaveRegister 634 MustHaveRegister 642 MustHaveRegister 644 MustHaveRegister  "NoSpillStore"
  v94|q QWORD "[v94|q]" v94|q v88|q [632, 642[[668, 670[632 MustHaveRegister 642 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[v95|q]" v95|q -1 [640, 642[640 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[v96|q]" v96|q -1 [644, 646[644 MustHaveRegister 646 MustHaveRegister  "NoSpillStore"
  v97|d DWORD "[v97|d]" v97|d -1 [678, 680[678 MustHaveRegister 680 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[v98|d]" v98|d v97|d [680, 688[[694, 746[[798, 805[680 MustHaveRegister 682 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[v99|q]" v99|q v3|d [698, 746[[754, 756[698 MustHaveRegister 702 MustHaveRegister 714 MustHaveRegister 756 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[v100|q]" v100|q -1 [696, 699[696 MustHaveRegister 698 MustHaveRegister  "NoSpillStore"
  v101|q QWORD "[v101|q]" v101|q -1 [700, 746[[754, 756[700 MustHaveRegister 702 MustHaveRegister 736 MustHaveRegister 745 LiveAtLoopEnd 756 MustHaveRegister  "NoSpillStore"
  v102|q QWORD "[v102|q]" v102|q -1 [714, 746[714 MustHaveRegister 716 MustHaveRegister 734 MustHaveRegister 745 LiveAtLoopEnd  "NoSpillStore"
  v103|d DWORD "[v103|d]" v103|d -1 [716, 746[716 MustHaveRegister 722 MustHaveRegister 745 LiveAtLoopEnd  "NoSpillStore"
  v104|d DWORD "[v104|d]" v104|d v109|d [720, 742[722 ShouldHaveRegister 728 MustHaveRegister 742 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[v105|d]" v105|d v104|d [728, 730[728 MustHaveRegister 730 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[v106|d]" v106|d -1 [730, 732[730 MustHaveRegister 732 ShouldHaveRegister  "NoSpillStore"
  v107|q QWORD "[v107|q]" v107|q -1 [732, 734[732 MustHaveRegister 734 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[v108|q]" v108|q -1 [734, 736[734 MustHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[v109|d]" v109|d v104|d [742, 745[742 MustHaveRegister 744 ShouldHaveRegister  "NoSpillStore"
  v110|d DWORD "[v110|d]" v110|d v72|d [400, 403[400 MustHaveRegister 402 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[v111|d]" v111|d -1 [412, 414[414 MustHaveRegister  "NoSpillStore"
  v112|d DWORD "[v112|d]" v112|d -1 [258, 268[258 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v113|q QWORD "[v113|q]" v113|q v112|d [268, 284[268 MustHaveRegister 270 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v114|q QWORD "[v114|q]" v114|q -1 [266, 269[266 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v115|q QWORD "[v115|q]" v115|q -1 [270, 272[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v116|d DWORD "[v116|d]" v116|d rax|d [348, 351[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v117|d DWORD "[v117|d]" v117|d rax|d [360, 363[360 MustHaveRegister 362 ShouldHaveRegister  "NoSpillStore"
  v118|q QWORD "[v118|q]" v118|q -1 [284, 292[284 MustHaveRegister 286 MustHaveRegister 292 ShouldHaveRegister  "NoSpillStore"
  v119|q QWORD "[v119|q]" v119|q -1 [286, 294[286 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v120|d DWORD "[v120|d]" v120|d rax|d [298, 301[298 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v121|d DWORD "[v121|d]" v121|d v120|d [302, 304[304 MustHaveRegister  "NoSpillStore"
  v122|d DWORD "[v122|d]" v122|d -1 [310, 332[310 MustHaveRegister 312 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v123|d DWORD "[v123|d]" v123|d -1 [312, 324[312 MustHaveRegister 320 ShouldHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[v124|d]" v124|d v56|d [314, 316[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v125|d DWORD "[v125|d]" v125|d rdx|- [322, 339[322 MustHaveRegister 324 ShouldHaveRegister 334 MustHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
  v126|q QWORD "[v126|q]" v126|q -1 [330, 331[330 MustHaveRegister  "NoDefinitionFound"
  v127|q QWORD "[v127|q]" v127|q v122|d [332, 339[332 MustHaveRegister 334 MustHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
  v128|d DWORD "[v128|d]" v128|d -1 [334, 336[334 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v129|q QWORD "[v129|q]" v129|q v128|d [336, 339[336 MustHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v45|q [0, 1[[206, 210[[228, 233[[294, 298[[316, 321[[346, 348[[358, 360[[422, 424[[490, 492[[500, 502[[516, 520[[536, 538[[548, 550[[562, 563[[664, 666[[672, 673[[690, 692[[764, 765[[766, 768[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v20|d [0, 1[[76, 79[[82, 85[[94, 97[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 8[[202, 209[[230, 234[[290, 297[[318, 322[[344, 347[[356, 359[[498, 501[[518, 519[[536, 537[[546, 549[[562, 563[[672, 673[[764, 765[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v44|q [0, 1[[204, 209[[292, 297[[346, 347[[358, 359[[500, 501[[514, 519[[548, 549[[764, 765[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[548, 549[[562, 563[[672, 673[[764, 765[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v37|q [0, 6[[200, 209[[288, 297[[342, 347[[354, 359[[496, 501[[512, 519[[534, 537[[544, 549[[560, 563[[670, 673[[762, 765[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[548, 549[[764, 765[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[548, 549[[764, 765[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 194[6 MustHaveRegister 12 MustHaveRegister 62 MustHaveRegister 66 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [8, 201[8 MustHaveRegister 10 MustHaveRegister 32 MustHaveRegister 130 MustHaveRegister 170 ShouldHaveRegister  "SpillInDominator"
  v2|d DWORD "[rcx|d]" v2|d -1 [10, 22[10 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [12, 156[[160, 194[12 MustHaveRegister 14 ShouldHaveRegister  "OneSpillStore"
  v4|q QWORD "[rcx|q]" v4|q v2|d [22, 30[[506, 508[22 MustHaveRegister 26 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rbx|q]" v5|q -1 [20, 23[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rbx|q]" v6|q -1 [24, 26[24 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rcx|q]" v7|q -1 [32, 42[32 MustHaveRegister 34 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q v7|q [34, 36[34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rcx|q]" v9|q v7|q [42, 44[42 MustHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rcx|d]" v10|d v15|d [44, 53[44 MustHaveRegister 46 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d rax|d [538, 541[538 MustHaveRegister 540 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rbx|q]" v12|q -1 [508, 514[508 MustHaveRegister 510 MustHaveRegister 514 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q -1 [510, 516[510 MustHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d rax|d [520, 523[520 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r11|d]" v15|d v11|d [54, 104[[810, 817[70 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rcx|d]" v17|d -1 [58, 60[58 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rbx|d]" v18|d -1 [62, 106[62 MustHaveRegister 64 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d -1 [64, 100[64 MustHaveRegister 68 ShouldHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[r8|d]" v20|d -1 [66, 80[66 MustHaveRegister 76 ShouldHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[r9|d]" v21|d v19|d [68, 98[68 MustHaveRegister 88 ShouldHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[rcx|d]" v22|d -1 [70, 72[70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rcx|d]" v23|d v22|d [72, 74[72 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rdi|d]" v24|d -1 [74, 84[74 MustHaveRegister 78 ShouldHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rbp|d]" v25|d v24|d [78, 86[78 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[r8|d]" v26|d v20|d [80, 82[80 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rdi|d]" v27|d v24|d [84, 86[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rbp|d]" v28|d v25|d [86, 96[86 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rcx|d]" v29|d -1 [88, 93[88 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r8|d]" v30|d -1 [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[r8|d]" v31|d v30|d [92, 94[92 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rbp|d]" v32|d v28|d [96, 98[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[r9|d]" v33|d v21|d [98, 117[[164, 194[98 MustHaveRegister 100 ShouldHaveRegister 108 MustHaveRegister 116 ShouldHaveRegister  "OneSpillStore"
  v34|q QWORD "[rbx|q]" v34|q v18|d [106, 117[106 MustHaveRegister 108 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[rax|d]" v35|d -1 [108, 114[[164, 190[108 MustHaveRegister 110 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rbx|d]" v36|d -1 [166, 178[166 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[r11|q]" v37|q v35|d [168, 200[[494, 496[[542, 544[168 MustHaveRegister 170 MustHaveRegister 200 ShouldHaveRegister 496 ShouldHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[rbx|q]" v38|q v36|d [178, 196[178 MustHaveRegister 180 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r8|q]" v39|q -1 [176, 179[176 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r8|q]" v40|q -1 [180, 184[180 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q -1 [182, 194[182 MustHaveRegister 184 MustHaveRegister  "SpillInDominator"
  v42|d DWORD "[rax|d]" v42|d rax|d [502, 505[502 MustHaveRegister 504 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[rax|d]" v43|d rax|d [550, 553[550 MustHaveRegister 552 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rbx|q]" v44|q -1 [196, 204[196 MustHaveRegister 198 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q -1 [198, 206[198 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[rax|d]" v46|d rax|d [210, 213[210 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[rax|d]" v47|d v46|d [214, 216[216 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rbx|d]" v48|d -1 [222, 242[222 MustHaveRegister 224 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[r10|d]" v49|d -1 [224, 236[224 MustHaveRegister 232 ShouldHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[r9|d]" v50|d v33|d [226, 228[226 MustHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[rdx|d]" v51|d rdx|- [234, 249[234 MustHaveRegister 236 ShouldHaveRegister 244 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[rbx|q]" v52|q v48|d [242, 249[242 MustHaveRegister 244 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[rax|d]" v53|d -1 [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rax|q]" v54|q v53|d [246, 249[246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[r10|q]" v55|q v129|q [250, 288[[340, 342[[352, 354[252 MustHaveRegister 258 MustHaveRegister 260 MustHaveRegister 278 MustHaveRegister 288 ShouldHaveRegister 342 ShouldHaveRegister 354 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[vstack:5|d]" v56|d v58|d [250, 282[ "OneSpillStore"
  v57|q QWORD "[r13|q]" v57|q v59|q [250, 256[[426, 429[428 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[rbx|d]" v58|d v33|d [118, 164[[364, 419[[430, 488[[554, 650[[668, 688[[694, 746[[770, 774[[798, 805[[806, 810[124 ShouldHaveRegister 458 MustHaveRegister 570 MustHaveRegister 572 MustHaveRegister 588 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[r13|q]" v59|q v34|q [118, 156[[160, 164[[364, 408[[430, 488[[554, 588[120 MustHaveRegister 122 MustHaveRegister 458 MustHaveRegister 570 MustHaveRegister 572 MustHaveRegister 588 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[rax|d]" v60|d -1 [120, 124[120 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[r11|d]" v61|d -1 [122, 134[122 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[rax|d]" v62|d -1 [130, 142[130 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[r11|q]" v63|q v61|d [134, 136[134 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[r8|q]" v64|q -1 [132, 135[132 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[r11|q]" v65|q -1 [136, 156[[364, 404[[430, 432[136 MustHaveRegister 138 MustHaveRegister 146 MustHaveRegister 366 MustHaveRegister 394 MustHaveRegister 403 LiveAtLoopEnd 432 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[r8|d]" v66|d -1 [138, 152[138 MustHaveRegister 144 ShouldHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rax|q]" v67|q v62|d [142, 156[[364, 404[[430, 432[142 MustHaveRegister 146 MustHaveRegister 366 ShouldHaveRegister 372 MustHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[r9|q]" v68|q -1 [140, 143[140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[r9|q]" v69|q -1 [144, 146[144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q -1 [372, 404[372 MustHaveRegister 374 MustHaveRegister 392 MustHaveRegister 403 LiveAtLoopEnd  "NoSpillStore"
  v71|d DWORD "[rdx|d]" v71|d -1 [374, 404[374 MustHaveRegister 380 MustHaveRegister 403 LiveAtLoopEnd  "NoSpillStore"
  v72|d DWORD "[r10|d]" v72|d v110|d [378, 400[380 ShouldHaveRegister 386 MustHaveRegister 400 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[r8|d]" v73|d v72|d [386, 388[386 MustHaveRegister 388 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[r8|d]" v74|d -1 [388, 390[388 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v75|q QWORD "[r8|q]" v75|q -1 [390, 392[390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[r8|q]" v76|q -1 [392, 394[392 MustHaveRegister 394 ShouldHaveRegister  "NoSpillStore"
  v77|d DWORD "[rax|d]" v77|d -1 [438, 440[438 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[rax|d]" v78|d -1 [446, 448[446 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rax|q]" v79|q -1 [458, 460[458 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v80|d DWORD "[rax|d]" v80|d -1 [460, 462[460 MustHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rax|q]" v81|q v80|d [462, 480[[558, 560[462 MustHaveRegister 464 MustHaveRegister 480 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[rdx|q]" v82|q -1 [470, 482[470 MustHaveRegister 472 MustHaveRegister 480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[r10|q]" v83|q -1 [478, 480[478 MustHaveRegister 480 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rax|q]" v84|q -1 [482, 484[482 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[rax|d]" v85|d v1|q [568, 570[568 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[rax|q]" v86|q -1 [572, 574[572 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v87|q QWORD "[rax|q]" v87|q v86|q [574, 576[574 MustHaveRegister 576 ShouldHaveRegister  "NoSpillStore"
  v88|q QWORD "[rax|q]" v88|q v89|q [590, 600[[612, 622[[626, 632[590 MustHaveRegister 594 MustHaveRegister 616 MustHaveRegister 628 MustHaveRegister 632 ShouldHaveRegister  "NoSpillStore"
  v89|q QWORD "[rax|q]" v89|q -1 [588, 590[588 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[rsi|q]" v90|q -1 [592, 600[[612, 622[[626, 632[592 MustHaveRegister 594 MustHaveRegister 616 MustHaveRegister 628 MustHaveRegister 632 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[r10|d]" v91|d -1 [594, 596[594 MustHaveRegister 596 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[r10|d]" v92|d -1 [616, 618[616 MustHaveRegister 618 MustHaveRegister  "NoSpillStore"
  v93|q QWORD "[r10|q]" v93|q -1 [630, 644[630 MustHaveRegister 634 MustHaveRegister 642 MustHaveRegister 644 MustHaveRegister  "NoSpillStore"
  v94|q QWORD "[rax|q]" v94|q v88|q [632, 642[[668, 670[632 MustHaveRegister 642 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[rsi|q]" v95|q -1 [640, 642[640 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[rax|q]" v96|q -1 [644, 646[644 MustHaveRegister 646 MustHaveRegister  "NoSpillStore"
  v97|d DWORD "[rax|d]" v97|d -1 [678, 680[678 MustHaveRegister 680 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[rax|d]" v98|d v97|d [680, 688[[694, 746[[798, 805[680 MustHaveRegister 682 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[r8|q]" v99|q v3|d [698, 746[[754, 756[698 MustHaveRegister 702 MustHaveRegister 714 MustHaveRegister 756 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[r11|q]" v100|q -1 [696, 699[696 MustHaveRegister 698 MustHaveRegister  "NoSpillStore"
  v101|q QWORD "[r11|q]" v101|q -1 [700, 746[[754, 756[700 MustHaveRegister 702 MustHaveRegister 736 MustHaveRegister 745 LiveAtLoopEnd 756 MustHaveRegister  "NoSpillStore"
  v102|q QWORD "[r10|q]" v102|q -1 [714, 746[714 MustHaveRegister 716 MustHaveRegister 734 MustHaveRegister 745 LiveAtLoopEnd  "NoSpillStore"
  v103|d DWORD "[r9|d]" v103|d -1 [716, 746[716 MustHaveRegister 722 MustHaveRegister 745 LiveAtLoopEnd  "NoSpillStore"
  v104|d DWORD "[rcx|d]" v104|d v109|d [720, 742[722 ShouldHaveRegister 728 MustHaveRegister 742 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[rdi|d]" v105|d v104|d [728, 730[728 MustHaveRegister 730 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[rdi|d]" v106|d -1 [730, 732[730 MustHaveRegister 732 ShouldHaveRegister  "NoSpillStore"
  v107|q QWORD "[rdi|q]" v107|q -1 [732, 734[732 MustHaveRegister 734 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[rdi|q]" v108|q -1 [734, 736[734 MustHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[rcx|d]" v109|d v104|d [742, 745[742 MustHaveRegister 744 ShouldHaveRegister  "NoSpillStore"
  v110|d DWORD "[r10|d]" v110|d v72|d [400, 403[400 MustHaveRegister 402 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[rax|d]" v111|d -1 [412, 414[414 MustHaveRegister  "NoSpillStore"
  v112|d DWORD "[rax|d]" v112|d -1 [258, 268[258 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v113|q QWORD "[rax|q]" v113|q v112|d [268, 284[268 MustHaveRegister 270 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v114|q QWORD "[r11|q]" v114|q -1 [266, 269[266 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v115|q QWORD "[r11|q]" v115|q -1 [270, 272[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v116|d DWORD "[rax|d]" v116|d rax|d [348, 351[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v117|d DWORD "[rax|d]" v117|d rax|d [360, 363[360 MustHaveRegister 362 ShouldHaveRegister  "NoSpillStore"
  v118|q QWORD "[rax|q]" v118|q -1 [284, 292[284 MustHaveRegister 286 MustHaveRegister 292 ShouldHaveRegister  "NoSpillStore"
  v119|q QWORD "[r11|q]" v119|q -1 [286, 294[286 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v120|d DWORD "[rax|d]" v120|d rax|d [298, 301[298 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v121|d DWORD "[rax|d]" v121|d v120|d [302, 304[304 MustHaveRegister  "NoSpillStore"
  v122|d DWORD "[r10|d]" v122|d -1 [310, 332[310 MustHaveRegister 312 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v123|d DWORD "[r11|d]" v123|d -1 [312, 324[312 MustHaveRegister 320 ShouldHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[rax|d]" v124|d v56|d [314, 316[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v125|d DWORD "[rdx|d]" v125|d rdx|- [322, 339[322 MustHaveRegister 324 ShouldHaveRegister 334 MustHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
  v126|q QWORD "[r11|q]" v126|q -1 [330, 331[330 MustHaveRegister  "NoDefinitionFound"
  v127|q QWORD "[r10|q]" v127|q v122|d [332, 339[332 MustHaveRegister 334 MustHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
  v128|d DWORD "[r11|d]" v128|d -1 [334, 336[334 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v129|q QWORD "[r11|q]" v129|q v128|d [336, 339[336 MustHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
  v130|q QWORD "[vstack:0|q]" v0|q v0|q [194, 199[ "SpillInDominator"
  v131|q QWORD "[r11|q]" v1|q v1|q [201, 207[202 ShouldHaveRegister  "SpillInDominator"
  v132|d DWORD "[vstack:3|d]" v3|d v3|d [194, 207[ "OneSpillStore"
  v133|d DWORD "[vstack:1|d]" v33|d v33|d [194, 207[ "OneSpillStore"
  v134|q QWORD "[-]" v41|q v41|q [194, 207[ "SpillInDominator"
  v135|q QWORD "[vstack:0|q]" v0|q v0|q [199, 207[ "SpillInDominator"
  v136|d DWORD "[vstack:1|d]" v33|d v33|d [207, 240[[494, 506[[542, 554[226 ShouldHaveRegister  "OneSpillStore"
  v137|q QWORD "[-]" v41|q v41|q [207, 250[ "SpillInDominator"
  v138|d DWORD "[vstack:3|d]" v3|d v3|d [207, 408[[426, 488[[494, 650[[668, 688[ "OneSpillStore"
  v139|q QWORD "[vstack:0|q]" v0|q v0|q [207, 220[ "SpillInDominator"
  v140|q QWORD "[vstack:2|q]" v1|q v1|q [207, 250[ "SpillInDominator"
  v141|q QWORD "[rsi|q]" v0|q v0|q [220, 250[222 MustHaveRegister  "SpillInDominator"
  v142|d DWORD "[r9|d]" v33|d v33|d [774, 781[ "OneSpillStore"
  v143|q QWORD "[rdx|q]" v1|q v1|q [250, 289[260 ShouldHaveRegister  "SpillInDominator"
  v144|q QWORD "[rcx|q]" v41|q v41|q [250, 282[272 MustHaveRegister  "SpillInDominator"
  v145|d DWORD "[r10|d]" v3|d v3|d [694, 708[698 MustHaveRegister 708 ShouldHaveRegister  "OneSpillStore"
  v146|q QWORD "[vstack:0|q]" v0|q v0|q [250, 282[ "SpillInDominator"
  v147|q QWORD "[r10|q]" v1|q v1|q [289, 295[290 ShouldHaveRegister  "SpillInDominator"
  v148|q QWORD "[-]" v41|q v41|q [282, 295[ "SpillInDominator"
  v149|q QWORD "[vstack:0|q]" v0|q v0|q [282, 287[ "SpillInDominator"
  v150|d DWORD "[vstack:5|d]" v56|d v56|d [282, 291[ "OneSpillStore"
  v151|q QWORD "[vstack:0|q]" v0|q v0|q [287, 295[ "SpillInDominator"
  v152|d DWORD "[vstack:5|d]" v56|d v56|d [291, 295[ "OneSpillStore"
  v153|q QWORD "[-]" v41|q v41|q [295, 364[[494, 506[[542, 554[339 LiveAtLoopEnd  "SpillInDominator"
  v154|q QWORD "[vstack:0|q]" v0|q v0|q [295, 308[ "SpillInDominator"
  v155|q QWORD "[vstack:2|q]" v1|q v1|q [295, 419[[426, 488[[494, 566[339 LiveAtLoopEnd 344 ShouldHaveRegister 356 ShouldHaveRegister 498 ShouldHaveRegister 512 ShouldHaveRegister 534 ShouldHaveRegister 546 ShouldHaveRegister  "SpillInDominator"
  v156|d DWORD "[vstack:5|d]" v56|d v56|d [295, 331[[340, 364[[426, 429[314 ShouldHaveRegister 428 ShouldHaveRegister  "OneSpillStore"
  v157|q QWORD "[rsi|q]" v0|q v0|q [308, 340[310 MustHaveRegister 339 LiveAtLoopEnd  "SpillInDominator"
  v158|d DWORD "[r10|d]" v56|d v56|d [790, 797[ "OneSpillStore"
  v159|q QWORD "[rdx|q]" v1|q v1|q [566, 582[[770, 781[[782, 789[[790, 797[[806, 817[568 MustHaveRegister 574 ShouldHaveRegister 582 MustHaveRegister  "SpillInDominator"
  v160|q QWORD "[vstack:0|q]" v0|q v0|q [340, 341[ "SpillInDominator"
  v161|q QWORD "[vstack:0|q]" v0|q v0|q [341, 345[ "SpillInDominator"
  v162|q QWORD "[vstack:0|q]" v0|q v0|q [345, 419[[426, 436[ "SpillInDominator"
  v163|q QWORD "[rsi|q]" v0|q v0|q [436, 488[438 MustHaveRegister  "SpillInDominator"
  v164|q QWORD "[vstack:0|q]" v0|q v0|q [494, 495[ "SpillInDominator"
  v165|q QWORD "[vstack:0|q]" v0|q v0|q [495, 499[ "SpillInDominator"
  v166|q QWORD "[vstack:0|q]" v0|q v0|q [499, 650[[668, 676[ "SpillInDominator"
  v167|q QWORD "[rsi|q]" v0|q v0|q [676, 688[[694, 762[[770, 781[[782, 789[[790, 797[[798, 805[[806, 817[680 MustHaveRegister 682 MustHaveRegister 684 MustHaveRegister 762 ShouldHaveRegister  "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction v5|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   22  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   24  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   26  <|@ instruction CMP (x: v6|QWORD, y: [v4|QWORD + 488]) size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction v7|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   34  <|@ instruction v8|QWORD = AND v7|QWORD y: 7 size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP v8|QWORD y: 1 size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction v9|QWORD = SHR v7|QWORD y: 8 size: QWORD <|@ <|@
      nr   44  <|@ instruction v10|DWORD = MOV v9|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction TEST (x: v10|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[v10|DWORD] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   54  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   56  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   58  <|@ instruction v17|DWORD[.] = MOV [v16|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr   62  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v19|DWORD = MOV [v18|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr   66  <|@ instruction v20|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ instruction v21|DWORD = DEC v19|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction v22|DWORD = IMUL v15|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   72  <|@ instruction v23|DWORD = BSWAP v22|DWORD <|@ <|@
      nr   74  <|@ instruction v24|DWORD = IMUL v23|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction v25|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction v26|DWORD = NEG v20|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction v27|DWORD = SHL (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v28|DWORD = OR (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v29|DWORD = POPCNT v21|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction v30|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   92  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction v32|DWORD = SHR (x: v28|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction v33|DWORD = AND (x: v21|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMP (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction v35|DWORD[.] = MOV [v34|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  110  <|@ instruction TEST (x: v35|DWORD[.], y: v35|DWORD[.]) size: DWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[v33|DWORD, v34|QWORD[.]] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  118  <|@ instruction [v58|DWORD, v59|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction v60|DWORD = MOV [v59|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr  122  <|@ instruction v61|DWORD = MOV [v59|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  124  <|@ instruction CMP (x: v60|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction v62|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  132  <|@ instruction v64|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  134  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v61|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  136  <|@ instruction v65|QWORD = MOV [v63|QWORD + 232] size: QWORD <|@ <|@
      nr  138  <|@ instruction v66|DWORD = MOV [v65|QWORD + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction v68|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  142  <|@ instruction v67|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v68|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  144  <|@ instruction v69|QWORD = MOVSXD v66|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction CMP (x: v65|QWORD, y: [v67|QWORD + v69|QWORD * 1]) size: QWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction CMP v66|DWORD y: 32 size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction JUMP ~[int[-102699|0xfffffffffffe6ed5]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr  412  <|@ instruction [v111|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v111|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction v77|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  440  <|@ instruction TEST (x: v77|DWORD[.], y: v77|DWORD[.]) size: DWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction v78|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  448  <|@ instruction TEST (x: v78|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction v85|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  570  <|@ instruction MOV (x: [v59|QWORD[.] + v58|DWORD * 4 + 16], y: v85|DWORD[.]) size: DWORD <|@ <|@
      nr  572  <|@ instruction v86|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  574  <|@ instruction v87|QWORD[*] = XOR (x: v86|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  576  <|@ instruction TEST v87|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction v89|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  590  <|@ instruction v88|QWORD[*] = SHR v89|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  592  <|@ instruction v90|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  594  <|@ instruction v91|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr  596  <|@ instruction CMP v91|DWORD y: 32 size: DWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600255641850084083
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B47" "B49" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction v97|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  680  <|@ instruction v98|DWORD = ADD (x: v97|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  682  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v98|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction CMP (x: v98|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  686  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction v36|DWORD = MOV [v35|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  168  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction CMP (x: v37|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction v39|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  178  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  180  <|@ instruction v40|QWORD = MOV [v38|QWORD + 56] size: QWORD <|@ <|@
      nr  182  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  184  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction CMP [v35|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction v44|QWORD = MOV [v38|QWORD + 472] size: QWORD <|@ <|@
      nr  198  <|@ instruction v45|QWORD = MOV [v44|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v130|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  202  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOVE v44|QWORD moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = MOVE v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = STACKMOVE (input: v132|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = STACKMOVE (input: v133|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = STACKMOVE v135|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  210  <|@ instruction v46|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[v46|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  214  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  216  <|@ instruction TEST (x: v47|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction v48|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  226  <|@ instruction v50|DWORD = INC v33|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD = MOVE v50|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v49|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  234  <|@ instruction v51|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction CMP (x: v49|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  244  <|@ instruction v53|DWORD[.] = MOV [v52|QWORD[.] + v51|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction JUMP ~[v54|QWORD[.], v51|DWORD, v52|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  258  <|@ instruction v112|DWORD = MOV [v55|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  260  <|@ instruction CMP (x: v55|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction v114|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  268  <|@ instruction v113|QWORD = UNCOMPRESSPOINTER (input: v112|DWORD, ~baseRegister: v114|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  270  <|@ instruction v115|QWORD = MOV [v113|QWORD + 56] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMP (x: v41|QWORD, y: v115|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction CMP [v55|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction v118|QWORD = MOV [v113|QWORD + 472] size: QWORD <|@ <|@
      nr  286  <|@ instruction v119|QWORD = MOV [v118|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = MOVE v143|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE v150|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE v147|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = STACKMOVE (input: v152|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = STACKMOVE v151|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  298  <|@ instruction v120|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~[v120|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  302  <|@ instruction [v121|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  304  <|@ instruction TEST (x: v121|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction v122|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction v123|DWORD = MOV [v122|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  314  <|@ instruction v124|DWORD = INC v56|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction rax|DWORD = MOVE v124|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v123|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  322  <|@ instruction v125|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction CMP (x: v123|DWORD, y: v125|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction SAFEPOINT v126|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr  332  <|@ instruction v127|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction v128|DWORD[.] = MOV [v127|QWORD[.] + v125|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction v129|QWORD[.] = UNCOMPRESSPOINTER (input: v128|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  338  <|@ instruction JUMP ~[v129|QWORD[.], v125|DWORD, v127|QWORD[.]] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr  250  <|@ instruction [v55|QWORD[.], v56|DWORD, v57|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  252  <|@ instruction TEST (x: v55|QWORD[.], y: v55|QWORD[.]) size: QWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = STACKMOVE v160|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = STACKMOVE v161|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  348  <|@ instruction v116|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[v116|DWORD] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  360  <|@ instruction v117|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[v117|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction CMP (x: v65|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction v70|QWORD = MOV [v67|QWORD + 40] size: QWORD <|@ <|@
      nr  374  <|@ instruction v71|DWORD = MOV [v70|QWORD] size: DWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[int[0|0x0]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  386  <|@ instruction v73|DWORD = SHL v72|DWORD y: 3 size: DWORD <|@ <|@
      nr  388  <|@ instruction v74|DWORD = LEA [v73|DWORD + 8] size: DWORD <|@ <|@
      nr  390  <|@ instruction v75|QWORD = MOVSXD v74|DWORD size: QWORD <|@ <|@
      nr  392  <|@ instruction v76|QWORD = MOV [v70|QWORD + v75|QWORD * 1] size: QWORD <|@ <|@
      nr  394  <|@ instruction CMP (x: v65|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction v110|DWORD = INC v72|DWORD size: DWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[v110|DWORD] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr  378  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  380  <|@ instruction CMP (x: v71|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[int[-102699|0xfffffffffffe6ed5]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  424  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction v79|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  460  <|@ instruction v80|DWORD[.] = MOV [v79|QWORD[.]] size: DWORD <|@ <|@
      nr  462  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  472  <|@ instruction TEST (x: v82|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction v83|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  480  <|@ instruction MOV (x: [v82|QWORD + v83|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  482  <|@ instruction v84|QWORD = LEA [v82|QWORD - 8] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 56], y: v84|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction JUMP ~[v56|DWORD, v57|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  616  <|@ instruction v92|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr  618  <|@ instruction TEST (x: v92|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585428038581536961
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction MOV (x: [v67|QWORD + 32], y: v65|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  492  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = STACKMOVE v164|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = STACKMOVE v165|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  502  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction JUMP ~[v42|DWORD] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction v12|QWORD = MOV [v4|QWORD + 488] size: QWORD <|@ <|@
      nr  510  <|@ instruction v13|QWORD = MOV [v12|QWORD + 56] size: QWORD <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rbx|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rax|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr  520  <|@ instruction v14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[v14|DWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  538  <|@ instruction v11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[v11|DWORD] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  550  <|@ instruction v43|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~[v43|DWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572430233452165828
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction MOVB [v88|QWORD[*] + v90|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  630  <|@ instruction v93|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  632  <|@ instruction v94|QWORD[*] = ADD (x: v88|QWORD[*], y: v90|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction TEST (x: v93|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction v95|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  642  <|@ instruction MOV (x: [v93|QWORD + v95|QWORD * 1 - 8], y: v94|QWORD[*]) size: QWORD <|@ <|@
      nr  644  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 112], y: v96|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569704089601104753
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  666  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    probability 4563576711971613252
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction v100|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  698  <|@ instruction v99|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v100|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  700  <|@ instruction v101|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr  702  <|@ instruction CMP (x: v101|QWORD, y: [v99|QWORD + 32]) size: QWORD <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr  710  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction v102|QWORD = MOV [v99|QWORD + 40] size: QWORD <|@ <|@
      nr  716  <|@ instruction v103|DWORD = MOV [v102|QWORD] size: DWORD <|@ <|@
      nr  718  <|@ instruction JUMP ~[int[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  728  <|@ instruction v105|DWORD = SHL v104|DWORD y: 3 size: DWORD <|@ <|@
      nr  730  <|@ instruction v106|DWORD = LEA [v105|DWORD + 8] size: DWORD <|@ <|@
      nr  732  <|@ instruction v107|QWORD = MOVSXD v106|DWORD size: QWORD <|@ <|@
      nr  734  <|@ instruction v108|QWORD = MOV [v102|QWORD + v107|QWORD * 1] size: QWORD <|@ <|@
      nr  736  <|@ instruction CMP (x: v101|QWORD, y: v108|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction v109|DWORD = INC v104|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[v109|DWORD] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  720  <|@ instruction [v104|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  722  <|@ instruction CMP (x: v103|DWORD, y: v104|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr  766  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  768  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction rsi|QWORD = MOVE v94|QWORD[*] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction MOV (x: [v99|QWORD + 32], y: v101|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr  814  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr  778  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  780  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  808  <|@ instruction JUMP ~[int[-99099|0xfffffffffffe7ce5]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  800  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: v0|QWORD[.] v98|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: v0|QWORD[.] - v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  772  <|@ instruction JUMP ~[int[-104723|0xfffffffffffe66ed]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v45|q [0, 1[[206, 210[[228, 233[[294, 298[[316, 321[[346, 348[[358, 360[[422, 424[[490, 492[[500, 502[[516, 520[[536, 538[[548, 550[[562, 563[[664, 666[[672, 673[[690, 692[[764, 765[[766, 768[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v20|d [0, 1[[76, 79[[82, 85[[94, 97[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 8[[202, 209[[230, 234[[290, 297[[318, 322[[344, 347[[356, 359[[498, 501[[518, 519[[536, 537[[546, 549[[562, 563[[672, 673[[764, 765[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v44|q [0, 1[[204, 209[[292, 297[[346, 347[[358, 359[[500, 501[[514, 519[[548, 549[[764, 765[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[548, 549[[562, 563[[672, 673[[764, 765[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v37|q [0, 6[[200, 209[[288, 297[[342, 347[[354, 359[[496, 501[[512, 519[[534, 537[[544, 549[[560, 563[[670, 673[[762, 765[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[548, 549[[764, 765[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[548, 549[[764, 765[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 194[6 MustHaveRegister 12 MustHaveRegister 62 MustHaveRegister 66 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [8, 201[8 MustHaveRegister 10 MustHaveRegister 32 MustHaveRegister 130 MustHaveRegister 170 ShouldHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[rcx|d]" v2|d -1 [10, 22[10 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [12, 156[[160, 194[12 MustHaveRegister 14 ShouldHaveRegister  "OneSpillStore"
  v4|q QWORD "[rcx|q]" v4|q v2|d [22, 30[[506, 508[22 MustHaveRegister 26 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rbx|q]" v5|q -1 [20, 23[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rbx|q]" v6|q -1 [24, 26[24 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rcx|q]" v7|q -1 [32, 42[32 MustHaveRegister 34 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q v7|q [34, 36[34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rcx|q]" v9|q v7|q [42, 44[42 MustHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rcx|d]" v10|d v15|d [44, 53[44 MustHaveRegister 46 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d rax|d [538, 541[538 MustHaveRegister 540 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rbx|q]" v12|q -1 [508, 514[508 MustHaveRegister 510 MustHaveRegister 514 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q -1 [510, 516[510 MustHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d rax|d [520, 523[520 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r11|d]" v15|d v11|d [54, 104[[810, 817[70 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rcx|d]" v17|d -1 [58, 60[58 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rbx|d]" v18|d -1 [62, 106[62 MustHaveRegister 64 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d -1 [64, 100[64 MustHaveRegister 68 ShouldHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[r8|d]" v20|d -1 [66, 80[66 MustHaveRegister 76 ShouldHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[r9|d]" v21|d v19|d [68, 98[68 MustHaveRegister 88 ShouldHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[rcx|d]" v22|d -1 [70, 72[70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rcx|d]" v23|d v22|d [72, 74[72 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rdi|d]" v24|d -1 [74, 84[74 MustHaveRegister 78 ShouldHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rbp|d]" v25|d v24|d [78, 86[78 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[r8|d]" v26|d v20|d [80, 82[80 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rdi|d]" v27|d v24|d [84, 86[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rbp|d]" v28|d v25|d [86, 96[86 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rcx|d]" v29|d -1 [88, 93[88 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r8|d]" v30|d -1 [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[r8|d]" v31|d v30|d [92, 94[92 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rbp|d]" v32|d v28|d [96, 98[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[r9|d]" v33|d v21|d [98, 117[[164, 194[98 MustHaveRegister 100 ShouldHaveRegister 108 MustHaveRegister 116 ShouldHaveRegister  "OneSpillStore"
  v34|q QWORD "[rbx|q]" v34|q v18|d [106, 117[106 MustHaveRegister 108 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[rax|d]" v35|d -1 [108, 114[[164, 190[108 MustHaveRegister 110 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rbx|d]" v36|d -1 [166, 178[166 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[r11|q]" v37|q v35|d [168, 200[[494, 496[[542, 544[168 MustHaveRegister 170 MustHaveRegister 200 ShouldHaveRegister 496 ShouldHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[rbx|q]" v38|q v36|d [178, 196[178 MustHaveRegister 180 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r8|q]" v39|q -1 [176, 179[176 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r8|q]" v40|q -1 [180, 184[180 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q -1 [182, 194[182 MustHaveRegister 184 MustHaveRegister  "StoreAtDefinition"
  v42|d DWORD "[rax|d]" v42|d rax|d [502, 505[502 MustHaveRegister 504 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[rax|d]" v43|d rax|d [550, 553[550 MustHaveRegister 552 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rbx|q]" v44|q -1 [196, 204[196 MustHaveRegister 198 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q -1 [198, 206[198 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[rax|d]" v46|d rax|d [210, 213[210 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[rax|d]" v47|d v46|d [214, 216[216 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rbx|d]" v48|d -1 [222, 242[222 MustHaveRegister 224 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[r10|d]" v49|d -1 [224, 236[224 MustHaveRegister 232 ShouldHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[r9|d]" v50|d v33|d [226, 228[226 MustHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[rdx|d]" v51|d rdx|- [234, 249[234 MustHaveRegister 236 ShouldHaveRegister 244 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[rbx|q]" v52|q v48|d [242, 249[242 MustHaveRegister 244 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[rax|d]" v53|d -1 [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rax|q]" v54|q v53|d [246, 249[246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[r10|q]" v55|q v129|q [250, 288[[340, 342[[352, 354[252 MustHaveRegister 258 MustHaveRegister 260 MustHaveRegister 278 MustHaveRegister 288 ShouldHaveRegister 342 ShouldHaveRegister 354 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[vstack:5|d]" v56|d v58|d [250, 282[ "OneSpillStore"
  v57|q QWORD "[r13|q]" v57|q v59|q [250, 256[[426, 429[428 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[rbx|d]" v58|d v33|d [118, 164[[364, 419[[430, 488[[554, 650[[668, 688[[694, 746[[770, 774[[798, 805[[806, 810[124 ShouldHaveRegister 458 MustHaveRegister 570 MustHaveRegister 572 MustHaveRegister 588 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[r13|q]" v59|q v34|q [118, 156[[160, 164[[364, 408[[430, 488[[554, 588[120 MustHaveRegister 122 MustHaveRegister 458 MustHaveRegister 570 MustHaveRegister 572 MustHaveRegister 588 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[rax|d]" v60|d -1 [120, 124[120 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[r11|d]" v61|d -1 [122, 134[122 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[rax|d]" v62|d -1 [130, 142[130 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[r11|q]" v63|q v61|d [134, 136[134 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[r8|q]" v64|q -1 [132, 135[132 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[r11|q]" v65|q -1 [136, 156[[364, 404[[430, 432[136 MustHaveRegister 138 MustHaveRegister 146 MustHaveRegister 366 MustHaveRegister 394 MustHaveRegister 403 LiveAtLoopEnd 432 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[r8|d]" v66|d -1 [138, 152[138 MustHaveRegister 144 ShouldHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rax|q]" v67|q v62|d [142, 156[[364, 404[[430, 432[142 MustHaveRegister 146 MustHaveRegister 366 ShouldHaveRegister 372 MustHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[r9|q]" v68|q -1 [140, 143[140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[r9|q]" v69|q -1 [144, 146[144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q -1 [372, 404[372 MustHaveRegister 374 MustHaveRegister 392 MustHaveRegister 403 LiveAtLoopEnd  "NoSpillStore"
  v71|d DWORD "[rdx|d]" v71|d -1 [374, 404[374 MustHaveRegister 380 MustHaveRegister 403 LiveAtLoopEnd  "NoSpillStore"
  v72|d DWORD "[r10|d]" v72|d v110|d [378, 400[380 ShouldHaveRegister 386 MustHaveRegister 400 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[r8|d]" v73|d v72|d [386, 388[386 MustHaveRegister 388 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[r8|d]" v74|d -1 [388, 390[388 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v75|q QWORD "[r8|q]" v75|q -1 [390, 392[390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[r8|q]" v76|q -1 [392, 394[392 MustHaveRegister 394 ShouldHaveRegister  "NoSpillStore"
  v77|d DWORD "[rax|d]" v77|d -1 [438, 440[438 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[rax|d]" v78|d -1 [446, 448[446 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rax|q]" v79|q -1 [458, 460[458 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v80|d DWORD "[rax|d]" v80|d -1 [460, 462[460 MustHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rax|q]" v81|q v80|d [462, 480[[558, 560[462 MustHaveRegister 464 MustHaveRegister 480 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[rdx|q]" v82|q -1 [470, 482[470 MustHaveRegister 472 MustHaveRegister 480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[r10|q]" v83|q -1 [478, 480[478 MustHaveRegister 480 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rax|q]" v84|q -1 [482, 484[482 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[rax|d]" v85|d v1|q [568, 570[568 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[rax|q]" v86|q -1 [572, 574[572 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v87|q QWORD "[rax|q]" v87|q v86|q [574, 576[574 MustHaveRegister 576 ShouldHaveRegister  "NoSpillStore"
  v88|q QWORD "[rax|q]" v88|q v89|q [590, 600[[612, 622[[626, 632[590 MustHaveRegister 594 MustHaveRegister 616 MustHaveRegister 628 MustHaveRegister 632 ShouldHaveRegister  "NoSpillStore"
  v89|q QWORD "[rax|q]" v89|q -1 [588, 590[588 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[rsi|q]" v90|q -1 [592, 600[[612, 622[[626, 632[592 MustHaveRegister 594 MustHaveRegister 616 MustHaveRegister 628 MustHaveRegister 632 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[r10|d]" v91|d -1 [594, 596[594 MustHaveRegister 596 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[r10|d]" v92|d -1 [616, 618[616 MustHaveRegister 618 MustHaveRegister  "NoSpillStore"
  v93|q QWORD "[r10|q]" v93|q -1 [630, 644[630 MustHaveRegister 634 MustHaveRegister 642 MustHaveRegister 644 MustHaveRegister  "NoSpillStore"
  v94|q QWORD "[rax|q]" v94|q v88|q [632, 642[[668, 670[632 MustHaveRegister 642 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[rsi|q]" v95|q -1 [640, 642[640 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[rax|q]" v96|q -1 [644, 646[644 MustHaveRegister 646 MustHaveRegister  "NoSpillStore"
  v97|d DWORD "[rax|d]" v97|d -1 [678, 680[678 MustHaveRegister 680 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[rax|d]" v98|d v97|d [680, 688[[694, 746[[798, 805[680 MustHaveRegister 682 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[r8|q]" v99|q v3|d [698, 746[[754, 756[698 MustHaveRegister 702 MustHaveRegister 714 MustHaveRegister 756 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[r11|q]" v100|q -1 [696, 699[696 MustHaveRegister 698 MustHaveRegister  "NoSpillStore"
  v101|q QWORD "[r11|q]" v101|q -1 [700, 746[[754, 756[700 MustHaveRegister 702 MustHaveRegister 736 MustHaveRegister 745 LiveAtLoopEnd 756 MustHaveRegister  "NoSpillStore"
  v102|q QWORD "[r10|q]" v102|q -1 [714, 746[714 MustHaveRegister 716 MustHaveRegister 734 MustHaveRegister 745 LiveAtLoopEnd  "NoSpillStore"
  v103|d DWORD "[r9|d]" v103|d -1 [716, 746[716 MustHaveRegister 722 MustHaveRegister 745 LiveAtLoopEnd  "NoSpillStore"
  v104|d DWORD "[rcx|d]" v104|d v109|d [720, 742[722 ShouldHaveRegister 728 MustHaveRegister 742 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[rdi|d]" v105|d v104|d [728, 730[728 MustHaveRegister 730 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[rdi|d]" v106|d -1 [730, 732[730 MustHaveRegister 732 ShouldHaveRegister  "NoSpillStore"
  v107|q QWORD "[rdi|q]" v107|q -1 [732, 734[732 MustHaveRegister 734 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[rdi|q]" v108|q -1 [734, 736[734 MustHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[rcx|d]" v109|d v104|d [742, 745[742 MustHaveRegister 744 ShouldHaveRegister  "NoSpillStore"
  v110|d DWORD "[r10|d]" v110|d v72|d [400, 403[400 MustHaveRegister 402 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[rax|d]" v111|d -1 [412, 414[414 MustHaveRegister  "NoSpillStore"
  v112|d DWORD "[rax|d]" v112|d -1 [258, 268[258 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v113|q QWORD "[rax|q]" v113|q v112|d [268, 284[268 MustHaveRegister 270 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v114|q QWORD "[r11|q]" v114|q -1 [266, 269[266 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v115|q QWORD "[r11|q]" v115|q -1 [270, 272[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v116|d DWORD "[rax|d]" v116|d rax|d [348, 351[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v117|d DWORD "[rax|d]" v117|d rax|d [360, 363[360 MustHaveRegister 362 ShouldHaveRegister  "NoSpillStore"
  v118|q QWORD "[rax|q]" v118|q -1 [284, 292[284 MustHaveRegister 286 MustHaveRegister 292 ShouldHaveRegister  "NoSpillStore"
  v119|q QWORD "[r11|q]" v119|q -1 [286, 294[286 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v120|d DWORD "[rax|d]" v120|d rax|d [298, 301[298 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v121|d DWORD "[rax|d]" v121|d v120|d [302, 304[304 MustHaveRegister  "NoSpillStore"
  v122|d DWORD "[r10|d]" v122|d -1 [310, 332[310 MustHaveRegister 312 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v123|d DWORD "[r11|d]" v123|d -1 [312, 324[312 MustHaveRegister 320 ShouldHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[rax|d]" v124|d v56|d [314, 316[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v125|d DWORD "[rdx|d]" v125|d rdx|- [322, 339[322 MustHaveRegister 324 ShouldHaveRegister 334 MustHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
  v126|q QWORD "[r11|q]" v126|q -1 [330, 331[330 MustHaveRegister  "NoDefinitionFound"
  v127|q QWORD "[r10|q]" v127|q v122|d [332, 339[332 MustHaveRegister 334 MustHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
  v128|d DWORD "[r11|d]" v128|d -1 [334, 336[334 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v129|q QWORD "[r11|q]" v129|q v128|d [336, 339[336 MustHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
  v130|q QWORD "[vstack:0|q]" v0|q v0|q [194, 199[ "StoreAtDefinition"
  v131|q QWORD "[r11|q]" v1|q v1|q [201, 207[202 ShouldHaveRegister  "StoreAtDefinition"
  v132|d DWORD "[vstack:3|d]" v3|d v3|d [194, 207[ "OneSpillStore"
  v133|d DWORD "[vstack:1|d]" v33|d v33|d [194, 207[ "OneSpillStore"
  v134|q QWORD "[-]" v41|q v41|q [194, 207[ "StoreAtDefinition"
  v135|q QWORD "[vstack:0|q]" v0|q v0|q [199, 207[ "StoreAtDefinition"
  v136|d DWORD "[vstack:1|d]" v33|d v33|d [207, 240[[494, 506[[542, 554[226 ShouldHaveRegister  "OneSpillStore"
  v137|q QWORD "[-]" v41|q v41|q [207, 250[ "StoreAtDefinition"
  v138|d DWORD "[vstack:3|d]" v3|d v3|d [207, 408[[426, 488[[494, 650[[668, 688[ "OneSpillStore"
  v139|q QWORD "[vstack:0|q]" v0|q v0|q [207, 220[ "StoreAtDefinition"
  v140|q QWORD "[vstack:2|q]" v1|q v1|q [207, 250[ "StoreAtDefinition"
  v141|q QWORD "[rsi|q]" v0|q v0|q [220, 250[222 MustHaveRegister  "StoreAtDefinition"
  v142|d DWORD "[r9|d]" v33|d v33|d [774, 781[ "OneSpillStore"
  v143|q QWORD "[rdx|q]" v1|q v1|q [250, 289[260 ShouldHaveRegister  "StoreAtDefinition"
  v144|q QWORD "[rcx|q]" v41|q v41|q [250, 282[272 MustHaveRegister  "StoreAtDefinition"
  v145|d DWORD "[r10|d]" v3|d v3|d [694, 708[698 MustHaveRegister 708 ShouldHaveRegister  "OneSpillStore"
  v146|q QWORD "[vstack:0|q]" v0|q v0|q [250, 282[ "StoreAtDefinition"
  v147|q QWORD "[r10|q]" v1|q v1|q [289, 295[290 ShouldHaveRegister  "StoreAtDefinition"
  v148|q QWORD "[-]" v41|q v41|q [282, 295[ "StoreAtDefinition"
  v149|q QWORD "[vstack:0|q]" v0|q v0|q [282, 287[ "StoreAtDefinition"
  v150|d DWORD "[vstack:5|d]" v56|d v56|d [282, 291[ "OneSpillStore"
  v151|q QWORD "[vstack:0|q]" v0|q v0|q [287, 295[ "StoreAtDefinition"
  v152|d DWORD "[vstack:5|d]" v56|d v56|d [291, 295[ "OneSpillStore"
  v153|q QWORD "[-]" v41|q v41|q [295, 364[[494, 506[[542, 554[339 LiveAtLoopEnd  "StoreAtDefinition"
  v154|q QWORD "[vstack:0|q]" v0|q v0|q [295, 308[ "StoreAtDefinition"
  v155|q QWORD "[vstack:2|q]" v1|q v1|q [295, 419[[426, 488[[494, 566[339 LiveAtLoopEnd 344 ShouldHaveRegister 356 ShouldHaveRegister 498 ShouldHaveRegister 512 ShouldHaveRegister 534 ShouldHaveRegister 546 ShouldHaveRegister  "StoreAtDefinition"
  v156|d DWORD "[vstack:5|d]" v56|d v56|d [295, 331[[340, 364[[426, 429[314 ShouldHaveRegister 428 ShouldHaveRegister  "OneSpillStore"
  v157|q QWORD "[rsi|q]" v0|q v0|q [308, 340[310 MustHaveRegister 339 LiveAtLoopEnd  "StoreAtDefinition"
  v158|d DWORD "[r10|d]" v56|d v56|d [790, 797[ "OneSpillStore"
  v159|q QWORD "[rdx|q]" v1|q v1|q [566, 582[[770, 781[[782, 789[[790, 797[[806, 817[568 MustHaveRegister 574 ShouldHaveRegister 582 MustHaveRegister  "StoreAtDefinition"
  v160|q QWORD "[vstack:0|q]" v0|q v0|q [340, 341[ "StoreAtDefinition"
  v161|q QWORD "[vstack:0|q]" v0|q v0|q [341, 345[ "StoreAtDefinition"
  v162|q QWORD "[vstack:0|q]" v0|q v0|q [345, 419[[426, 436[ "StoreAtDefinition"
  v163|q QWORD "[rsi|q]" v0|q v0|q [436, 488[438 MustHaveRegister  "StoreAtDefinition"
  v164|q QWORD "[vstack:0|q]" v0|q v0|q [494, 495[ "StoreAtDefinition"
  v165|q QWORD "[vstack:0|q]" v0|q v0|q [495, 499[ "StoreAtDefinition"
  v166|q QWORD "[vstack:0|q]" v0|q v0|q [499, 650[[668, 676[ "StoreAtDefinition"
  v167|q QWORD "[rsi|q]" v0|q v0|q [676, 688[[694, 762[[770, 781[[782, 789[[790, 797[[798, 805[[806, 817[680 MustHaveRegister 682 MustHaveRegister 684 MustHaveRegister 762 ShouldHaveRegister  "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction v5|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   22  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   24  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   26  <|@ instruction CMP (x: v6|QWORD, y: [v4|QWORD + 488]) size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction v7|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   34  <|@ instruction v8|QWORD = AND v7|QWORD y: 7 size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP v8|QWORD y: 1 size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction v9|QWORD = SHR v7|QWORD y: 8 size: QWORD <|@ <|@
      nr   44  <|@ instruction v10|DWORD = MOV v9|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction TEST (x: v10|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[v10|DWORD] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   54  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   56  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   58  <|@ instruction v17|DWORD[.] = MOV [v16|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr   62  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v19|DWORD = MOV [v18|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr   66  <|@ instruction v20|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ instruction v21|DWORD = DEC v19|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction v22|DWORD = IMUL v15|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   72  <|@ instruction v23|DWORD = BSWAP v22|DWORD <|@ <|@
      nr   74  <|@ instruction v24|DWORD = IMUL v23|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction v25|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction v26|DWORD = NEG v20|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction v27|DWORD = SHL (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v28|DWORD = OR (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v29|DWORD = POPCNT v21|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction v30|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   92  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction v32|DWORD = SHR (x: v28|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction v33|DWORD = AND (x: v21|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMP (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction v35|DWORD[.] = MOV [v34|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  110  <|@ instruction TEST (x: v35|DWORD[.], y: v35|DWORD[.]) size: DWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[v33|DWORD, v34|QWORD[.]] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  118  <|@ instruction [v58|DWORD, v59|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction v60|DWORD = MOV [v59|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr  122  <|@ instruction v61|DWORD = MOV [v59|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  124  <|@ instruction CMP (x: v60|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction v62|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  132  <|@ instruction v64|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  134  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v61|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  136  <|@ instruction v65|QWORD = MOV [v63|QWORD + 232] size: QWORD <|@ <|@
      nr  138  <|@ instruction v66|DWORD = MOV [v65|QWORD + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction v68|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  142  <|@ instruction v67|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v68|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  144  <|@ instruction v69|QWORD = MOVSXD v66|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction CMP (x: v65|QWORD, y: [v67|QWORD + v69|QWORD * 1]) size: QWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction CMP v66|DWORD y: 32 size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction JUMP ~[int[-102699|0xfffffffffffe6ed5]] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr  412  <|@ instruction [v111|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v111|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction v77|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  440  <|@ instruction TEST (x: v77|DWORD[.], y: v77|DWORD[.]) size: DWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction v78|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  448  <|@ instruction TEST (x: v78|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction v85|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  570  <|@ instruction MOV (x: [v59|QWORD[.] + v58|DWORD * 4 + 16], y: v85|DWORD[.]) size: DWORD <|@ <|@
      nr  572  <|@ instruction v86|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  574  <|@ instruction v87|QWORD[*] = XOR (x: v86|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  576  <|@ instruction TEST v87|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction v89|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  590  <|@ instruction v88|QWORD[*] = SHR v89|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  592  <|@ instruction v90|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  594  <|@ instruction v91|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr  596  <|@ instruction CMP v91|DWORD y: 32 size: DWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600255641850084083
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B47" "B49" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction v97|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  680  <|@ instruction v98|DWORD = ADD (x: v97|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  682  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v98|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction CMP (x: v98|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  686  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction v36|DWORD = MOV [v35|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  168  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction CMP (x: v37|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction v39|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  178  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  180  <|@ instruction v40|QWORD = MOV [v38|QWORD + 56] size: QWORD <|@ <|@
      nr  182  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  184  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction CMP [v35|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction v44|QWORD = MOV [v38|QWORD + 472] size: QWORD <|@ <|@
      nr  198  <|@ instruction v45|QWORD = MOV [v44|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v130|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  202  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOVE v44|QWORD moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = MOVE v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = STACKMOVE (input: v132|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = STACKMOVE (input: v133|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = STACKMOVE v135|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  210  <|@ instruction v46|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[v46|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  214  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  216  <|@ instruction TEST (x: v47|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction v48|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  226  <|@ instruction v50|DWORD = INC v33|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD = MOVE v50|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v49|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  234  <|@ instruction v51|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction CMP (x: v49|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  244  <|@ instruction v53|DWORD[.] = MOV [v52|QWORD[.] + v51|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction JUMP ~[v54|QWORD[.], v51|DWORD, v52|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  258  <|@ instruction v112|DWORD = MOV [v55|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  260  <|@ instruction CMP (x: v55|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction v114|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  268  <|@ instruction v113|QWORD = UNCOMPRESSPOINTER (input: v112|DWORD, ~baseRegister: v114|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  270  <|@ instruction v115|QWORD = MOV [v113|QWORD + 56] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMP (x: v41|QWORD, y: v115|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction CMP [v55|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction v118|QWORD = MOV [v113|QWORD + 472] size: QWORD <|@ <|@
      nr  286  <|@ instruction v119|QWORD = MOV [v118|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = MOVE v143|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE v150|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE v147|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = STACKMOVE (input: v152|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = STACKMOVE v151|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  298  <|@ instruction v120|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~[v120|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  302  <|@ instruction [v121|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  304  <|@ instruction TEST (x: v121|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction v122|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction v123|DWORD = MOV [v122|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  314  <|@ instruction v124|DWORD = INC v56|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction rax|DWORD = MOVE v124|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v123|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  322  <|@ instruction v125|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction CMP (x: v123|DWORD, y: v125|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction SAFEPOINT v126|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr  332  <|@ instruction v127|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction v128|DWORD[.] = MOV [v127|QWORD[.] + v125|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction v129|QWORD[.] = UNCOMPRESSPOINTER (input: v128|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  338  <|@ instruction JUMP ~[v129|QWORD[.], v125|DWORD, v127|QWORD[.]] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr  250  <|@ instruction [v55|QWORD[.], v56|DWORD, v57|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  252  <|@ instruction TEST (x: v55|QWORD[.], y: v55|QWORD[.]) size: QWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = STACKMOVE v160|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = STACKMOVE v161|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  348  <|@ instruction v116|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[v116|DWORD] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  360  <|@ instruction v117|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[v117|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction CMP (x: v65|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction v70|QWORD = MOV [v67|QWORD + 40] size: QWORD <|@ <|@
      nr  374  <|@ instruction v71|DWORD = MOV [v70|QWORD] size: DWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[int[0|0x0]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  386  <|@ instruction v73|DWORD = SHL v72|DWORD y: 3 size: DWORD <|@ <|@
      nr  388  <|@ instruction v74|DWORD = LEA [v73|DWORD + 8] size: DWORD <|@ <|@
      nr  390  <|@ instruction v75|QWORD = MOVSXD v74|DWORD size: QWORD <|@ <|@
      nr  392  <|@ instruction v76|QWORD = MOV [v70|QWORD + v75|QWORD * 1] size: QWORD <|@ <|@
      nr  394  <|@ instruction CMP (x: v65|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction v110|DWORD = INC v72|DWORD size: DWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[v110|DWORD] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr  378  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  380  <|@ instruction CMP (x: v71|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[int[-102699|0xfffffffffffe6ed5]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  424  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction v79|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  460  <|@ instruction v80|DWORD[.] = MOV [v79|QWORD[.]] size: DWORD <|@ <|@
      nr  462  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  472  <|@ instruction TEST (x: v82|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction v83|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  480  <|@ instruction MOV (x: [v82|QWORD + v83|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  482  <|@ instruction v84|QWORD = LEA [v82|QWORD - 8] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 56], y: v84|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction JUMP ~[v56|DWORD, v57|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  616  <|@ instruction v92|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr  618  <|@ instruction TEST (x: v92|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585428038581536961
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction MOV (x: [v67|QWORD + 32], y: v65|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  492  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = STACKMOVE v164|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = STACKMOVE v165|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  502  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction JUMP ~[v42|DWORD] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction v12|QWORD = MOV [v4|QWORD + 488] size: QWORD <|@ <|@
      nr  510  <|@ instruction v13|QWORD = MOV [v12|QWORD + 56] size: QWORD <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rbx|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rax|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr  520  <|@ instruction v14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[v14|DWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  538  <|@ instruction v11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[v11|DWORD] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  550  <|@ instruction v43|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~[v43|DWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572430233452165828
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction MOVB [v88|QWORD[*] + v90|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  630  <|@ instruction v93|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  632  <|@ instruction v94|QWORD[*] = ADD (x: v88|QWORD[*], y: v90|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction TEST (x: v93|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction v95|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  642  <|@ instruction MOV (x: [v93|QWORD + v95|QWORD * 1 - 8], y: v94|QWORD[*]) size: QWORD <|@ <|@
      nr  644  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 112], y: v96|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569704089601104753
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  666  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    probability 4563576711971613252
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction v100|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  698  <|@ instruction v99|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v100|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  700  <|@ instruction v101|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr  702  <|@ instruction CMP (x: v101|QWORD, y: [v99|QWORD + 32]) size: QWORD <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr  710  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction v102|QWORD = MOV [v99|QWORD + 40] size: QWORD <|@ <|@
      nr  716  <|@ instruction v103|DWORD = MOV [v102|QWORD] size: DWORD <|@ <|@
      nr  718  <|@ instruction JUMP ~[int[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  728  <|@ instruction v105|DWORD = SHL v104|DWORD y: 3 size: DWORD <|@ <|@
      nr  730  <|@ instruction v106|DWORD = LEA [v105|DWORD + 8] size: DWORD <|@ <|@
      nr  732  <|@ instruction v107|QWORD = MOVSXD v106|DWORD size: QWORD <|@ <|@
      nr  734  <|@ instruction v108|QWORD = MOV [v102|QWORD + v107|QWORD * 1] size: QWORD <|@ <|@
      nr  736  <|@ instruction CMP (x: v101|QWORD, y: v108|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction v109|DWORD = INC v104|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[v109|DWORD] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  720  <|@ instruction [v104|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  722  <|@ instruction CMP (x: v103|DWORD, y: v104|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr  766  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  768  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction rsi|QWORD = MOVE v94|QWORD[*] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction MOV (x: [v99|QWORD + 32], y: v101|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr  814  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr  778  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  780  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  808  <|@ instruction JUMP ~[int[-99099|0xfffffffffffe7ce5]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  800  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: v0|QWORD[.] v98|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: v0|QWORD[.] - v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  772  <|@ instruction JUMP ~[int[-104723|0xfffffffffffe66ed]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v45|q [0, 1[[206, 210[[228, 233[[294, 298[[316, 321[[346, 348[[358, 360[[422, 424[[490, 492[[500, 502[[516, 520[[536, 538[[548, 550[[562, 563[[664, 666[[672, 673[[690, 692[[764, 765[[766, 768[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v20|d [0, 1[[76, 79[[82, 85[[94, 97[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v1|q [0, 8[[202, 209[[230, 234[[290, 297[[318, 322[[344, 347[[356, 359[[498, 501[[518, 519[[536, 537[[546, 549[[562, 563[[672, 673[[764, 765[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v44|q [0, 1[[204, 209[[292, 297[[346, 347[[358, 359[[500, 501[[514, 519[[548, 549[[764, 765[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[548, 549[[562, 563[[672, 673[[764, 765[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v37|q [0, 6[[200, 209[[288, 297[[342, 347[[354, 359[[496, 501[[512, 519[[534, 537[[544, 549[[560, 563[[670, 673[[762, 765[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[548, 549[[764, 765[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[548, 549[[764, 765[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[208, 209[[296, 297[[346, 347[[358, 359[[500, 501[[518, 519[[536, 537[[548, 549[[562, 563[[672, 673[[764, 765[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 194[6 MustHaveRegister 12 MustHaveRegister 62 MustHaveRegister 66 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [8, 201[8 MustHaveRegister 10 MustHaveRegister 32 MustHaveRegister 130 MustHaveRegister 170 ShouldHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[rcx|d]" v2|d -1 [10, 22[10 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [12, 156[[160, 194[12 MustHaveRegister 14 ShouldHaveRegister  "OneSpillStore"
  v4|q QWORD "[rcx|q]" v4|q v2|d [22, 30[[506, 508[22 MustHaveRegister 26 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rbx|q]" v5|q -1 [20, 23[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rbx|q]" v6|q -1 [24, 26[24 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rcx|q]" v7|q -1 [32, 42[32 MustHaveRegister 34 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q v7|q [34, 36[34 MustHaveRegister 36 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rcx|q]" v9|q v7|q [42, 44[42 MustHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rcx|d]" v10|d v15|d [44, 53[44 MustHaveRegister 46 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d rax|d [538, 541[538 MustHaveRegister 540 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rbx|q]" v12|q -1 [508, 514[508 MustHaveRegister 510 MustHaveRegister 514 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q -1 [510, 516[510 MustHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d rax|d [520, 523[520 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r11|d]" v15|d v11|d [54, 104[[810, 817[70 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rcx|d]" v17|d -1 [58, 60[58 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rbx|d]" v18|d -1 [62, 106[62 MustHaveRegister 64 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d -1 [64, 100[64 MustHaveRegister 68 ShouldHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[r8|d]" v20|d -1 [66, 80[66 MustHaveRegister 76 ShouldHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[r9|d]" v21|d v19|d [68, 98[68 MustHaveRegister 88 ShouldHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[rcx|d]" v22|d -1 [70, 72[70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rcx|d]" v23|d v22|d [72, 74[72 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rdi|d]" v24|d -1 [74, 84[74 MustHaveRegister 78 ShouldHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rbp|d]" v25|d v24|d [78, 86[78 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[r8|d]" v26|d v20|d [80, 82[80 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rdi|d]" v27|d v24|d [84, 86[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rbp|d]" v28|d v25|d [86, 96[86 MustHaveRegister 96 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rcx|d]" v29|d -1 [88, 93[88 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r8|d]" v30|d -1 [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[r8|d]" v31|d v30|d [92, 94[92 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rbp|d]" v32|d v28|d [96, 98[96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[r9|d]" v33|d v21|d [98, 117[[164, 194[98 MustHaveRegister 100 ShouldHaveRegister 108 MustHaveRegister 116 ShouldHaveRegister  "OneSpillStore"
  v34|q QWORD "[rbx|q]" v34|q v18|d [106, 117[106 MustHaveRegister 108 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[rax|d]" v35|d -1 [108, 114[[164, 190[108 MustHaveRegister 110 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rbx|d]" v36|d -1 [166, 178[166 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[r11|q]" v37|q v35|d [168, 200[[494, 496[[542, 544[168 MustHaveRegister 170 MustHaveRegister 200 ShouldHaveRegister 496 ShouldHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[rbx|q]" v38|q v36|d [178, 196[178 MustHaveRegister 180 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[r8|q]" v39|q -1 [176, 179[176 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r8|q]" v40|q -1 [180, 184[180 MustHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q -1 [182, 194[182 MustHaveRegister 184 MustHaveRegister  "StoreAtDefinition"
  v42|d DWORD "[rax|d]" v42|d rax|d [502, 505[502 MustHaveRegister 504 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[rax|d]" v43|d rax|d [550, 553[550 MustHaveRegister 552 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rbx|q]" v44|q -1 [196, 204[196 MustHaveRegister 198 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q -1 [198, 206[198 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[rax|d]" v46|d rax|d [210, 213[210 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[rax|d]" v47|d v46|d [214, 216[216 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rbx|d]" v48|d -1 [222, 242[222 MustHaveRegister 224 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[r10|d]" v49|d -1 [224, 236[224 MustHaveRegister 232 ShouldHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[r9|d]" v50|d v33|d [226, 228[226 MustHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[rdx|d]" v51|d rdx|- [234, 249[234 MustHaveRegister 236 ShouldHaveRegister 244 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[rbx|q]" v52|q v48|d [242, 249[242 MustHaveRegister 244 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[rax|d]" v53|d -1 [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rax|q]" v54|q v53|d [246, 249[246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[r10|q]" v55|q v129|q [250, 288[[340, 342[[352, 354[252 MustHaveRegister 258 MustHaveRegister 260 MustHaveRegister 278 MustHaveRegister 288 ShouldHaveRegister 342 ShouldHaveRegister 354 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[vstack:5|d]" v56|d v58|d [250, 282[ "OneSpillStore"
  v57|q QWORD "[r13|q]" v57|q v59|q [250, 256[[426, 429[428 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[rbx|d]" v58|d v33|d [118, 164[[364, 419[[430, 488[[554, 650[[668, 688[[694, 746[[770, 774[[798, 805[[806, 810[124 ShouldHaveRegister 458 MustHaveRegister 570 MustHaveRegister 572 MustHaveRegister 588 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[r13|q]" v59|q v34|q [118, 156[[160, 164[[364, 408[[430, 488[[554, 588[120 MustHaveRegister 122 MustHaveRegister 458 MustHaveRegister 570 MustHaveRegister 572 MustHaveRegister 588 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[rax|d]" v60|d -1 [120, 124[120 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[r11|d]" v61|d -1 [122, 134[122 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[rax|d]" v62|d -1 [130, 142[130 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[r11|q]" v63|q v61|d [134, 136[134 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[r8|q]" v64|q -1 [132, 135[132 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[r11|q]" v65|q -1 [136, 156[[364, 404[[430, 432[136 MustHaveRegister 138 MustHaveRegister 146 MustHaveRegister 366 MustHaveRegister 394 MustHaveRegister 403 LiveAtLoopEnd 432 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[r8|d]" v66|d -1 [138, 152[138 MustHaveRegister 144 ShouldHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rax|q]" v67|q v62|d [142, 156[[364, 404[[430, 432[142 MustHaveRegister 146 MustHaveRegister 366 ShouldHaveRegister 372 MustHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[r9|q]" v68|q -1 [140, 143[140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[r9|q]" v69|q -1 [144, 146[144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q -1 [372, 404[372 MustHaveRegister 374 MustHaveRegister 392 MustHaveRegister 403 LiveAtLoopEnd  "NoSpillStore"
  v71|d DWORD "[rdx|d]" v71|d -1 [374, 404[374 MustHaveRegister 380 MustHaveRegister 403 LiveAtLoopEnd  "NoSpillStore"
  v72|d DWORD "[r10|d]" v72|d v110|d [378, 400[380 ShouldHaveRegister 386 MustHaveRegister 400 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[r8|d]" v73|d v72|d [386, 388[386 MustHaveRegister 388 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[r8|d]" v74|d -1 [388, 390[388 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v75|q QWORD "[r8|q]" v75|q -1 [390, 392[390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[r8|q]" v76|q -1 [392, 394[392 MustHaveRegister 394 ShouldHaveRegister  "NoSpillStore"
  v77|d DWORD "[rax|d]" v77|d -1 [438, 440[438 MustHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[rax|d]" v78|d -1 [446, 448[446 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rax|q]" v79|q -1 [458, 460[458 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v80|d DWORD "[rax|d]" v80|d -1 [460, 462[460 MustHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rax|q]" v81|q v80|d [462, 480[[558, 560[462 MustHaveRegister 464 MustHaveRegister 480 MustHaveRegister 560 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[rdx|q]" v82|q -1 [470, 482[470 MustHaveRegister 472 MustHaveRegister 480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[r10|q]" v83|q -1 [478, 480[478 MustHaveRegister 480 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rax|q]" v84|q -1 [482, 484[482 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[rax|d]" v85|d v1|q [568, 570[568 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[rax|q]" v86|q -1 [572, 574[572 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v87|q QWORD "[rax|q]" v87|q v86|q [574, 576[574 MustHaveRegister 576 ShouldHaveRegister  "NoSpillStore"
  v88|q QWORD "[rax|q]" v88|q v89|q [590, 600[[612, 622[[626, 632[590 MustHaveRegister 594 MustHaveRegister 616 MustHaveRegister 628 MustHaveRegister 632 ShouldHaveRegister  "NoSpillStore"
  v89|q QWORD "[rax|q]" v89|q -1 [588, 590[588 MustHaveRegister 590 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[rsi|q]" v90|q -1 [592, 600[[612, 622[[626, 632[592 MustHaveRegister 594 MustHaveRegister 616 MustHaveRegister 628 MustHaveRegister 632 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[r10|d]" v91|d -1 [594, 596[594 MustHaveRegister 596 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[r10|d]" v92|d -1 [616, 618[616 MustHaveRegister 618 MustHaveRegister  "NoSpillStore"
  v93|q QWORD "[r10|q]" v93|q -1 [630, 644[630 MustHaveRegister 634 MustHaveRegister 642 MustHaveRegister 644 MustHaveRegister  "NoSpillStore"
  v94|q QWORD "[rax|q]" v94|q v88|q [632, 642[[668, 670[632 MustHaveRegister 642 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[rsi|q]" v95|q -1 [640, 642[640 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[rax|q]" v96|q -1 [644, 646[644 MustHaveRegister 646 MustHaveRegister  "NoSpillStore"
  v97|d DWORD "[rax|d]" v97|d -1 [678, 680[678 MustHaveRegister 680 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[rax|d]" v98|d v97|d [680, 688[[694, 746[[798, 805[680 MustHaveRegister 682 MustHaveRegister 684 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[r8|q]" v99|q v3|d [698, 746[[754, 756[698 MustHaveRegister 702 MustHaveRegister 714 MustHaveRegister 756 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[r11|q]" v100|q -1 [696, 699[696 MustHaveRegister 698 MustHaveRegister  "NoSpillStore"
  v101|q QWORD "[r11|q]" v101|q -1 [700, 746[[754, 756[700 MustHaveRegister 702 MustHaveRegister 736 MustHaveRegister 745 LiveAtLoopEnd 756 MustHaveRegister  "NoSpillStore"
  v102|q QWORD "[r10|q]" v102|q -1 [714, 746[714 MustHaveRegister 716 MustHaveRegister 734 MustHaveRegister 745 LiveAtLoopEnd  "NoSpillStore"
  v103|d DWORD "[r9|d]" v103|d -1 [716, 746[716 MustHaveRegister 722 MustHaveRegister 745 LiveAtLoopEnd  "NoSpillStore"
  v104|d DWORD "[rcx|d]" v104|d v109|d [720, 742[722 ShouldHaveRegister 728 MustHaveRegister 742 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[rdi|d]" v105|d v104|d [728, 730[728 MustHaveRegister 730 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[rdi|d]" v106|d -1 [730, 732[730 MustHaveRegister 732 ShouldHaveRegister  "NoSpillStore"
  v107|q QWORD "[rdi|q]" v107|q -1 [732, 734[732 MustHaveRegister 734 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[rdi|q]" v108|q -1 [734, 736[734 MustHaveRegister 736 ShouldHaveRegister  "NoSpillStore"
  v109|d DWORD "[rcx|d]" v109|d v104|d [742, 745[742 MustHaveRegister 744 ShouldHaveRegister  "NoSpillStore"
  v110|d DWORD "[r10|d]" v110|d v72|d [400, 403[400 MustHaveRegister 402 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[rax|d]" v111|d -1 [412, 414[414 MustHaveRegister  "NoSpillStore"
  v112|d DWORD "[rax|d]" v112|d -1 [258, 268[258 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v113|q QWORD "[rax|q]" v113|q v112|d [268, 284[268 MustHaveRegister 270 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v114|q QWORD "[r11|q]" v114|q -1 [266, 269[266 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v115|q QWORD "[r11|q]" v115|q -1 [270, 272[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v116|d DWORD "[rax|d]" v116|d rax|d [348, 351[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v117|d DWORD "[rax|d]" v117|d rax|d [360, 363[360 MustHaveRegister 362 ShouldHaveRegister  "NoSpillStore"
  v118|q QWORD "[rax|q]" v118|q -1 [284, 292[284 MustHaveRegister 286 MustHaveRegister 292 ShouldHaveRegister  "NoSpillStore"
  v119|q QWORD "[r11|q]" v119|q -1 [286, 294[286 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v120|d DWORD "[rax|d]" v120|d rax|d [298, 301[298 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v121|d DWORD "[rax|d]" v121|d v120|d [302, 304[304 MustHaveRegister  "NoSpillStore"
  v122|d DWORD "[r10|d]" v122|d -1 [310, 332[310 MustHaveRegister 312 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v123|d DWORD "[r11|d]" v123|d -1 [312, 324[312 MustHaveRegister 320 ShouldHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[rax|d]" v124|d v56|d [314, 316[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v125|d DWORD "[rdx|d]" v125|d rdx|- [322, 339[322 MustHaveRegister 324 ShouldHaveRegister 334 MustHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
  v126|q QWORD "[r11|q]" v126|q -1 [330, 331[330 MustHaveRegister  "NoDefinitionFound"
  v127|q QWORD "[r10|q]" v127|q v122|d [332, 339[332 MustHaveRegister 334 MustHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
  v128|d DWORD "[r11|d]" v128|d -1 [334, 336[334 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v129|q QWORD "[r11|q]" v129|q v128|d [336, 339[336 MustHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
  v130|q QWORD "[vstack:0|q]" v0|q v0|q [194, 199[ "StoreAtDefinition"
  v131|q QWORD "[r11|q]" v1|q v1|q [201, 207[202 ShouldHaveRegister  "StoreAtDefinition"
  v132|d DWORD "[vstack:3|d]" v3|d v3|d [194, 207[ "OneSpillStore"
  v133|d DWORD "[vstack:1|d]" v33|d v33|d [194, 207[ "OneSpillStore"
  v134|q QWORD "[-]" v41|q v41|q [194, 207[ "StoreAtDefinition"
  v135|q QWORD "[vstack:0|q]" v0|q v0|q [199, 207[ "StoreAtDefinition"
  v136|d DWORD "[vstack:1|d]" v33|d v33|d [207, 240[[494, 506[[542, 554[226 ShouldHaveRegister  "OneSpillStore"
  v137|q QWORD "[-]" v41|q v41|q [207, 250[ "StoreAtDefinition"
  v138|d DWORD "[vstack:3|d]" v3|d v3|d [207, 408[[426, 488[[494, 650[[668, 688[ "OneSpillStore"
  v139|q QWORD "[vstack:0|q]" v0|q v0|q [207, 220[ "StoreAtDefinition"
  v140|q QWORD "[vstack:2|q]" v1|q v1|q [207, 250[ "StoreAtDefinition"
  v141|q QWORD "[rsi|q]" v0|q v0|q [220, 250[222 MustHaveRegister  "StoreAtDefinition"
  v142|d DWORD "[r9|d]" v33|d v33|d [774, 781[ "OneSpillStore"
  v143|q QWORD "[rdx|q]" v1|q v1|q [250, 289[260 ShouldHaveRegister  "StoreAtDefinition"
  v144|q QWORD "[rcx|q]" v41|q v41|q [250, 282[272 MustHaveRegister  "StoreAtDefinition"
  v145|d DWORD "[r10|d]" v3|d v3|d [694, 708[698 MustHaveRegister 708 ShouldHaveRegister  "OneSpillStore"
  v146|q QWORD "[vstack:0|q]" v0|q v0|q [250, 282[ "StoreAtDefinition"
  v147|q QWORD "[r10|q]" v1|q v1|q [289, 295[290 ShouldHaveRegister  "StoreAtDefinition"
  v148|q QWORD "[-]" v41|q v41|q [282, 295[ "StoreAtDefinition"
  v149|q QWORD "[vstack:0|q]" v0|q v0|q [282, 287[ "StoreAtDefinition"
  v150|d DWORD "[vstack:5|d]" v56|d v56|d [282, 291[ "OneSpillStore"
  v151|q QWORD "[vstack:0|q]" v0|q v0|q [287, 295[ "StoreAtDefinition"
  v152|d DWORD "[vstack:5|d]" v56|d v56|d [291, 295[ "OneSpillStore"
  v153|q QWORD "[-]" v41|q v41|q [295, 364[[494, 506[[542, 554[339 LiveAtLoopEnd  "StoreAtDefinition"
  v154|q QWORD "[vstack:0|q]" v0|q v0|q [295, 308[ "StoreAtDefinition"
  v155|q QWORD "[vstack:2|q]" v1|q v1|q [295, 419[[426, 488[[494, 566[339 LiveAtLoopEnd 344 ShouldHaveRegister 356 ShouldHaveRegister 498 ShouldHaveRegister 512 ShouldHaveRegister 534 ShouldHaveRegister 546 ShouldHaveRegister  "StoreAtDefinition"
  v156|d DWORD "[vstack:5|d]" v56|d v56|d [295, 331[[340, 364[[426, 429[314 ShouldHaveRegister 428 ShouldHaveRegister  "OneSpillStore"
  v157|q QWORD "[rsi|q]" v0|q v0|q [308, 340[310 MustHaveRegister 339 LiveAtLoopEnd  "StoreAtDefinition"
  v158|d DWORD "[r10|d]" v56|d v56|d [790, 797[ "OneSpillStore"
  v159|q QWORD "[rdx|q]" v1|q v1|q [566, 582[[770, 781[[782, 789[[790, 797[[806, 817[568 MustHaveRegister 574 ShouldHaveRegister 582 MustHaveRegister  "StoreAtDefinition"
  v160|q QWORD "[vstack:0|q]" v0|q v0|q [340, 341[ "StoreAtDefinition"
  v161|q QWORD "[vstack:0|q]" v0|q v0|q [341, 345[ "StoreAtDefinition"
  v162|q QWORD "[vstack:0|q]" v0|q v0|q [345, 419[[426, 436[ "StoreAtDefinition"
  v163|q QWORD "[rsi|q]" v0|q v0|q [436, 488[438 MustHaveRegister  "StoreAtDefinition"
  v164|q QWORD "[vstack:0|q]" v0|q v0|q [494, 495[ "StoreAtDefinition"
  v165|q QWORD "[vstack:0|q]" v0|q v0|q [495, 499[ "StoreAtDefinition"
  v166|q QWORD "[vstack:0|q]" v0|q v0|q [499, 650[[668, 676[ "StoreAtDefinition"
  v167|q QWORD "[rsi|q]" v0|q v0|q [676, 688[[694, 762[[770, 781[[782, 789[[790, 797[[798, 805[[806, 817[680 MustHaveRegister 682 MustHaveRegister 684 MustHaveRegister 762 ShouldHaveRegister  "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction v5|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   22  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   24  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   26  <|@ instruction CMP (x: v6|QWORD, y: [v4|QWORD + 488]) size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction v7|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   34  <|@ instruction v8|QWORD = AND v7|QWORD y: 7 size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP v8|QWORD y: 1 size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction v9|QWORD = SHR v7|QWORD y: 8 size: QWORD <|@ <|@
      nr   44  <|@ instruction v10|DWORD = MOV v9|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction TEST (x: v10|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   54  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   56  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   58  <|@ instruction v17|DWORD[.] = MOV [v16|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr   62  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v19|DWORD = MOV [v18|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr   66  <|@ instruction v20|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ instruction v21|DWORD = DEC v19|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction v22|DWORD = IMUL v15|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   72  <|@ instruction v23|DWORD = BSWAP v22|DWORD <|@ <|@
      nr   74  <|@ instruction v24|DWORD = IMUL v23|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction v25|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction v26|DWORD = NEG v20|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction v27|DWORD = SHL (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v28|DWORD = OR (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v29|DWORD = POPCNT v21|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction v30|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   92  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction v32|DWORD = SHR (x: v28|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction v33|DWORD = AND (x: v21|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMP (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction v35|DWORD[.] = MOV [v34|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  110  <|@ instruction TEST (x: v35|DWORD[.], y: v35|DWORD[.]) size: DWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE v33|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  118  <|@ instruction [v58|DWORD, v59|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction v60|DWORD = MOV [v59|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr  122  <|@ instruction v61|DWORD = MOV [v59|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  124  <|@ instruction CMP (x: v60|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction v62|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  132  <|@ instruction v64|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  134  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v61|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  136  <|@ instruction v65|QWORD = MOV [v63|QWORD + 232] size: QWORD <|@ <|@
      nr  138  <|@ instruction v66|DWORD = MOV [v65|QWORD + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction v68|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  142  <|@ instruction v67|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v68|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  144  <|@ instruction v69|QWORD = MOVSXD v66|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction CMP (x: v65|QWORD, y: [v67|QWORD + v69|QWORD * 1]) size: QWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction CMP v66|DWORD y: 32 size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr  412  <|@ instruction [v111|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v111|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction v77|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  440  <|@ instruction TEST (x: v77|DWORD[.], y: v77|DWORD[.]) size: DWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction v78|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  448  <|@ instruction TEST (x: v78|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction v85|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  570  <|@ instruction MOV (x: [v59|QWORD[.] + v58|DWORD * 4 + 16], y: v85|DWORD[.]) size: DWORD <|@ <|@
      nr  572  <|@ instruction v86|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  574  <|@ instruction v87|QWORD[*] = XOR (x: v86|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  576  <|@ instruction TEST v87|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction v89|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  590  <|@ instruction v88|QWORD[*] = SHR v89|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  592  <|@ instruction v90|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  594  <|@ instruction v91|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr  596  <|@ instruction CMP v91|DWORD y: 32 size: DWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600255641850084083
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B47" "B49" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction v97|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  680  <|@ instruction v98|DWORD = ADD (x: v97|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  682  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v98|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction CMP (x: v98|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  686  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction v36|DWORD = MOV [v35|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  168  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction CMP (x: v37|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction v39|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  178  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  180  <|@ instruction v40|QWORD = MOV [v38|QWORD + 56] size: QWORD <|@ <|@
      nr  182  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  184  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction CMP [v35|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE v33|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  196  <|@ instruction v44|QWORD = MOV [v38|QWORD + 472] size: QWORD <|@ <|@
      nr  198  <|@ instruction v45|QWORD = MOV [v44|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v130|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  202  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOVE v44|QWORD moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = MOVE v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = STACKMOVE (input: v132|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = STACKMOVE (input: v133|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = STACKMOVE v135|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  210  <|@ instruction v46|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  214  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  216  <|@ instruction TEST (x: v47|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE v139|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction v48|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  226  <|@ instruction v50|DWORD = INC v33|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD = MOVE v50|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v49|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  234  <|@ instruction v51|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction CMP (x: v49|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  244  <|@ instruction v53|DWORD[.] = MOV [v52|QWORD[.] + v51|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE v51|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = MOVE v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  258  <|@ instruction v112|DWORD = MOV [v55|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  260  <|@ instruction CMP (x: v55|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction v114|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  268  <|@ instruction v113|QWORD = UNCOMPRESSPOINTER (input: v112|DWORD, ~baseRegister: v114|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  270  <|@ instruction v115|QWORD = MOV [v113|QWORD + 56] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMP (x: v41|QWORD, y: v115|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction CMP [v55|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction v118|QWORD = MOV [v113|QWORD + 472] size: QWORD <|@ <|@
      nr  286  <|@ instruction v119|QWORD = MOV [v118|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = MOVE v143|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE v150|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE v147|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = STACKMOVE (input: v152|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = STACKMOVE v151|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  298  <|@ instruction v120|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  302  <|@ instruction [v121|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  304  <|@ instruction TEST (x: v121|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  310  <|@ instruction v122|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction v123|DWORD = MOV [v122|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  314  <|@ instruction v124|DWORD = INC v56|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction rax|DWORD = MOVE v124|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v123|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  322  <|@ instruction v125|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction CMP (x: v123|DWORD, y: v125|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction SAFEPOINT v126|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr  332  <|@ instruction v127|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction v128|DWORD[.] = MOV [v127|QWORD[.] + v125|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction v129|QWORD[.] = UNCOMPRESSPOINTER (input: v128|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = MOVE v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr  250  <|@ instruction [v55|QWORD[.], v56|DWORD, v57|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  252  <|@ instruction TEST (x: v55|QWORD[.], y: v55|QWORD[.]) size: QWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE v143|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = STACKMOVE v160|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = STACKMOVE v161|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  348  <|@ instruction v116|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE v143|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  360  <|@ instruction v117|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction CMP (x: v65|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction v70|QWORD = MOV [v67|QWORD + 40] size: QWORD <|@ <|@
      nr  374  <|@ instruction v71|DWORD = MOV [v70|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  386  <|@ instruction v73|DWORD = SHL v72|DWORD y: 3 size: DWORD <|@ <|@
      nr  388  <|@ instruction v74|DWORD = LEA [v73|DWORD + 8] size: DWORD <|@ <|@
      nr  390  <|@ instruction v75|QWORD = MOVSXD v74|DWORD size: QWORD <|@ <|@
      nr  392  <|@ instruction v76|QWORD = MOV [v70|QWORD + v75|QWORD * 1] size: QWORD <|@ <|@
      nr  394  <|@ instruction CMP (x: v65|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction v110|DWORD = INC v72|DWORD size: DWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr  378  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  380  <|@ instruction CMP (x: v71|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  424  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction v79|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  460  <|@ instruction v80|DWORD[.] = MOV [v79|QWORD[.]] size: DWORD <|@ <|@
      nr  462  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  472  <|@ instruction TEST (x: v82|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction v83|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  480  <|@ instruction MOV (x: [v82|QWORD + v83|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  482  <|@ instruction v84|QWORD = LEA [v82|QWORD - 8] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 56], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE v56|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  616  <|@ instruction v92|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr  618  <|@ instruction TEST (x: v92|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585428038581536961
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction MOV (x: [v67|QWORD + 32], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  492  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = MOVE v33|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = STACKMOVE v164|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = STACKMOVE v165|QWORD[.] size: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  502  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  508  <|@ instruction v12|QWORD = MOV [v4|QWORD + 488] size: QWORD <|@ <|@
      nr  510  <|@ instruction v13|QWORD = MOV [v12|QWORD + 56] size: QWORD <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rbx|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rax|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr  520  <|@ instruction v14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  538  <|@ instruction v11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = MOVE v33|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  550  <|@ instruction v43|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572430233452165828
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction MOVB [v88|QWORD[*] + v90|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  630  <|@ instruction v93|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  632  <|@ instruction v94|QWORD[*] = ADD (x: v88|QWORD[*], y: v90|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction TEST (x: v93|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction v95|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  642  <|@ instruction MOV (x: [v93|QWORD + v95|QWORD * 1 - 8], y: v94|QWORD[*]) size: QWORD <|@ <|@
      nr  644  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 112], y: v96|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569704089601104753
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  666  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    probability 4563576711971613252
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction v100|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  698  <|@ instruction v99|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v100|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  700  <|@ instruction v101|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr  702  <|@ instruction CMP (x: v101|QWORD, y: [v99|QWORD + 32]) size: QWORD <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr  710  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction v102|QWORD = MOV [v99|QWORD + 40] size: QWORD <|@ <|@
      nr  716  <|@ instruction v103|DWORD = MOV [v102|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  728  <|@ instruction v105|DWORD = SHL v104|DWORD y: 3 size: DWORD <|@ <|@
      nr  730  <|@ instruction v106|DWORD = LEA [v105|DWORD + 8] size: DWORD <|@ <|@
      nr  732  <|@ instruction v107|QWORD = MOVSXD v106|DWORD size: QWORD <|@ <|@
      nr  734  <|@ instruction v108|QWORD = MOV [v102|QWORD + v107|QWORD * 1] size: QWORD <|@ <|@
      nr  736  <|@ instruction CMP (x: v101|QWORD, y: v108|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction v109|DWORD = INC v104|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  720  <|@ instruction [v104|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  722  <|@ instruction CMP (x: v103|DWORD, y: v104|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr  766  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  768  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction rsi|QWORD = MOVE v94|QWORD[*] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction MOV (x: [v99|QWORD + 32], y: v101|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = MOVE v156|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  792  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr  814  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = MOVE v136|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  776  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr  778  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  780  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: int[-99099|0xfffffffffffe7ce5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  800  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: v0|QWORD[.] v98|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: v0|QWORD[.] - v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: int[-104723|0xfffffffffffe66ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction v5|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   22  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   24  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   26  <|@ instruction CMP (x: v6|QWORD, y: [v4|QWORD + 488]) size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction v7|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   34  <|@ instruction v8|QWORD = AND v7|QWORD y: 7 size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP v8|QWORD y: 1 size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction v9|QWORD = SHR v7|QWORD y: 8 size: QWORD <|@ <|@
      nr   44  <|@ instruction v10|DWORD = MOV v9|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction TEST (x: v10|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   56  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   58  <|@ instruction v17|DWORD[.] = MOV [v16|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr   62  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v19|DWORD = MOV [v18|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr   66  <|@ instruction v20|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ instruction v21|DWORD = DEC v19|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction v22|DWORD = IMUL v15|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   72  <|@ instruction v23|DWORD = BSWAP v22|DWORD <|@ <|@
      nr   74  <|@ instruction v24|DWORD = IMUL v23|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction v25|DWORD = SHR (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction v26|DWORD = NEG v20|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE v26|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction v27|DWORD = SHL (x: v24|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v28|DWORD = OR (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction v29|DWORD = POPCNT v21|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction v30|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   92  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction v32|DWORD = SHR (x: v28|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction v33|DWORD = AND (x: v21|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMP (x: v19|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction v35|DWORD[.] = MOV [v34|QWORD[.] + v33|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  110  <|@ instruction TEST (x: v35|DWORD[.], y: v35|DWORD[.]) size: DWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE v33|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction v60|DWORD = MOV [v59|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr  122  <|@ instruction v61|DWORD = MOV [v59|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  124  <|@ instruction CMP (x: v60|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction v62|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  132  <|@ instruction v64|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  134  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v61|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  136  <|@ instruction v65|QWORD = MOV [v63|QWORD + 232] size: QWORD <|@ <|@
      nr  138  <|@ instruction v66|DWORD = MOV [v65|QWORD + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction v68|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  142  <|@ instruction v67|QWORD = UNCOMPRESSPOINTER (input: v62|DWORD, ~baseRegister: v68|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  144  <|@ instruction v69|QWORD = MOVSXD v66|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction CMP (x: v65|QWORD, y: [v67|QWORD + v69|QWORD * 1]) size: QWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction CMP v66|DWORD y: 32 size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v111|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: v0|QWORD[.] v1|QWORD[.] v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction v77|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  440  <|@ instruction TEST (x: v77|DWORD[.], y: v77|DWORD[.]) size: DWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction v78|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  448  <|@ instruction TEST (x: v78|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction v85|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  570  <|@ instruction MOV (x: [v59|QWORD[.] + v58|DWORD * 4 + 16], y: v85|DWORD[.]) size: DWORD <|@ <|@
      nr  572  <|@ instruction v86|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  574  <|@ instruction v87|QWORD[*] = XOR (x: v86|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  576  <|@ instruction TEST v87|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction v89|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  590  <|@ instruction v88|QWORD[*] = SHR v89|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  592  <|@ instruction v90|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  594  <|@ instruction v91|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr  596  <|@ instruction CMP v91|DWORD y: 32 size: DWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600255641850084083
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B47" "B49" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction v97|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  680  <|@ instruction v98|DWORD = ADD (x: v97|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  682  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v98|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction CMP (x: v98|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  686  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction v36|DWORD = MOV [v35|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  168  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction CMP (x: v37|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction v39|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  178  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v36|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  180  <|@ instruction v40|QWORD = MOV [v38|QWORD + 56] size: QWORD <|@ <|@
      nr  182  <|@ instruction v41|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  184  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction CMP [v35|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE v33|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  196  <|@ instruction v44|QWORD = MOV [v38|QWORD + 472] size: QWORD <|@ <|@
      nr  198  <|@ instruction v45|QWORD = MOV [v44|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  202  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOVE v44|QWORD moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = MOVE v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = STACKMOVE (input: v132|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = STACKMOVE (input: v133|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  210  <|@ instruction v46|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  216  <|@ instruction TEST (x: v47|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE v139|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction v48|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  226  <|@ instruction v50|DWORD = INC v33|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD = MOVE v50|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v49|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  234  <|@ instruction v51|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction CMP (x: v49|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  244  <|@ instruction v53|DWORD[.] = MOV [v52|QWORD[.] + v51|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE v51|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = MOVE v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  258  <|@ instruction v112|DWORD = MOV [v55|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  260  <|@ instruction CMP (x: v55|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction v114|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  268  <|@ instruction v113|QWORD = UNCOMPRESSPOINTER (input: v112|DWORD, ~baseRegister: v114|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  270  <|@ instruction v115|QWORD = MOV [v113|QWORD + 56] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMP (x: v41|QWORD, y: v115|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction CMP [v55|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction v118|QWORD = MOV [v113|QWORD + 472] size: QWORD <|@ <|@
      nr  286  <|@ instruction v119|QWORD = MOV [v118|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = MOVE v143|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE v150|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction rbx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rax|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = STACKMOVE (input: v152|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  298  <|@ instruction v120|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  304  <|@ instruction TEST (x: v121|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  310  <|@ instruction v122|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction v123|DWORD = MOV [v122|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  314  <|@ instruction v124|DWORD = INC v56|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction rax|DWORD = MOVE v124|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v123|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  322  <|@ instruction v125|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction CMP (x: v123|DWORD, y: v125|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction SAFEPOINT v126|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr  332  <|@ instruction v127|QWORD[.] = UNCOMPRESSPOINTER (input: v122|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction v128|DWORD[.] = MOV [v127|QWORD[.] + v125|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction v129|QWORD[.] = UNCOMPRESSPOINTER (input: v128|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = MOVE v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  252  <|@ instruction TEST (x: v55|QWORD[.], y: v55|QWORD[.]) size: QWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  348  <|@ instruction v116|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  360  <|@ instruction v117|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  366  <|@ instruction CMP (x: v65|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction v70|QWORD = MOV [v67|QWORD + 40] size: QWORD <|@ <|@
      nr  374  <|@ instruction v71|DWORD = MOV [v70|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  386  <|@ instruction v73|DWORD = SHL v72|DWORD y: 3 size: DWORD <|@ <|@
      nr  388  <|@ instruction v74|DWORD = LEA [v73|DWORD + 8] size: DWORD <|@ <|@
      nr  390  <|@ instruction v75|QWORD = MOVSXD v74|DWORD size: QWORD <|@ <|@
      nr  392  <|@ instruction v76|QWORD = MOV [v70|QWORD + v75|QWORD * 1] size: QWORD <|@ <|@
      nr  394  <|@ instruction CMP (x: v65|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction v110|DWORD = INC v72|DWORD size: DWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  380  <|@ instruction CMP (x: v71|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  424  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction v79|QWORD[.] = LEA [v59|QWORD[.] + v58|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  460  <|@ instruction v80|DWORD[.] = MOV [v79|QWORD[.]] size: DWORD <|@ <|@
      nr  462  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction TEST (x: v81|QWORD[.], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction v82|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  472  <|@ instruction TEST (x: v82|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction v83|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  480  <|@ instruction MOV (x: [v82|QWORD + v83|QWORD * 1 - 8], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr  482  <|@ instruction v84|QWORD = LEA [v82|QWORD - 8] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 56], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE v56|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE v146|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  616  <|@ instruction v92|DWORD = MOVSXB [v88|QWORD[*] + v90|QWORD * 1] size: DWORD <|@ <|@
      nr  618  <|@ instruction TEST (x: v92|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585428038581536961
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction MOV (x: [v67|QWORD + 32], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  492  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = MOVE v33|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  496  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  502  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  508  <|@ instruction v12|QWORD = MOV [v4|QWORD + 488] size: QWORD <|@ <|@
      nr  510  <|@ instruction v13|QWORD = MOV [v12|QWORD + 56] size: QWORD <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rbx|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rax|QWORD = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr  520  <|@ instruction v14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr  538  <|@ instruction v11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = MOVE v33|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  544  <|@ instruction rsi|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  550  <|@ instruction v43|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572430233452165828
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[.] = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction MOVB [v88|QWORD[*] + v90|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  630  <|@ instruction v93|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  632  <|@ instruction v94|QWORD[*] = ADD (x: v88|QWORD[*], y: v90|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction TEST (x: v93|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction v95|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  642  <|@ instruction MOV (x: [v93|QWORD + v95|QWORD * 1 - 8], y: v94|QWORD[*]) size: QWORD <|@ <|@
      nr  644  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 112], y: v96|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569704089601104753
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  666  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    probability 4563576711971613252
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction v100|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  698  <|@ instruction v99|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v100|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  700  <|@ instruction v101|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr  702  <|@ instruction CMP (x: v101|QWORD, y: [v99|QWORD + 32]) size: QWORD <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr  710  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction v102|QWORD = MOV [v99|QWORD + 40] size: QWORD <|@ <|@
      nr  716  <|@ instruction v103|DWORD = MOV [v102|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  728  <|@ instruction v105|DWORD = SHL v104|DWORD y: 3 size: DWORD <|@ <|@
      nr  730  <|@ instruction v106|DWORD = LEA [v105|DWORD + 8] size: DWORD <|@ <|@
      nr  732  <|@ instruction v107|QWORD = MOVSXD v106|DWORD size: QWORD <|@ <|@
      nr  734  <|@ instruction v108|QWORD = MOV [v102|QWORD + v107|QWORD * 1] size: QWORD <|@ <|@
      nr  736  <|@ instruction CMP (x: v101|QWORD, y: v108|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction v109|DWORD = INC v104|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  722  <|@ instruction CMP (x: v103|DWORD, y: v104|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr  766  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  768  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction rsi|QWORD = MOVE v94|QWORD[*] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction MOV (x: [v99|QWORD + 32], y: v101|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = MOVE v156|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  792  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v56|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr  814  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: v0|QWORD[.] v15|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = MOVE v136|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  776  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr  778  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  780  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v33|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: int[-99099|0xfffffffffffe7ce5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  800  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: v0|QWORD[.] v98|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: v0|QWORD[.] - v58|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: int[-104723|0xfffffffffffe66ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rbx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   22  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   24  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   26  <|@ instruction CMP (x: rbx|QWORD, y: [rcx|QWORD + 488]) size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD = AND rcx|QWORD y: 7 size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP rbx|QWORD y: 1 size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 8 size: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   56  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   58  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr   62  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr   66  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ instruction r9|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = IMUL r11|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr   74  <|@ instruction rdi|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rbp|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction r8|DWORD = NEG r8|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rdi|DWORD = SHL (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction rcx|DWORD = POPCNT r9|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction r8|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   92  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rbp|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD = AND (x: r9|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  110  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr  122  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  124  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  134  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  136  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  138  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  142  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  144  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction CMP (x: r11|QWORD, y: [rax|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rax|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  440  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction rax|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  448  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  570  <|@ instruction MOV (x: [r13|QWORD[.] + rbx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  572  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  574  <|@ instruction rax|QWORD[*] = XOR (x: rax|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  576  <|@ instruction TEST rax|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  590  <|@ instruction rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  592  <|@ instruction rsi|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  594  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  596  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600255641850084083
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B47" "B49" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  680  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  682  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  686  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  168  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  178  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  180  <|@ instruction r8|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  184  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  196  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  198  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  202  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  216  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] vstack:2|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  226  <|@ instruction r9|DWORD = INC vstack:1|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] vstack:2|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r10|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  236  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  244  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  258  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  260  <|@ instruction CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  268  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  270  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rax|QWORD = MOV [rax|QWORD + 472] size: QWORD <|@ <|@
      nr  286  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:5|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  304  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  310  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] vstack:2|QWORD[.] vstack:5|DWORD - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  314  <|@ instruction rax|DWORD = INC vstack:5|DWORD size: DWORD <|@ <|@
      nr  318  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] vstack:2|QWORD[.] vstack:5|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  324  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] vstack:2|QWORD[.] vstack:5|DWORD - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr  332  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  252  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:5|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:5|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction CMP (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rsi|QWORD = MOV [rax|QWORD + 40] size: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOV [rsi|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  386  <|@ instruction r8|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  388  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  390  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  392  <|@ instruction r8|QWORD = MOV [rsi|QWORD + r8|QWORD * 1] size: QWORD <|@ <|@
      nr  394  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  380  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  424  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  460  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.]] size: DWORD <|@ <|@
      nr  462  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  472  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  480  <|@ instruction MOV (x: [rdx|QWORD + r10|QWORD * 1 - 8], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  482  <|@ instruction rax|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 56], y: rax|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  616  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  618  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585428038581536961
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction MOV (x: [rax|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  492  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  508  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 488] size: QWORD <|@ <|@
      nr  510  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572430233452165828
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction MOVB [rax|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  630  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD[*] = ADD (x: rax|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  642  <|@ instruction MOV (x: [r10|QWORD + rsi|QWORD * 1 - 8], y: rax|QWORD[*]) size: QWORD <|@ <|@
      nr  644  <|@ instruction rax|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 112], y: rax|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569704089601104753
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  666  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    probability 4563576711971613252
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  698  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  700  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr  702  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr  710  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  716  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  728  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  730  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  732  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  734  <|@ instruction rdi|QWORD = MOV [r10|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  736  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  722  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr  766  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  768  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction rsi|QWORD = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  792  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr  814  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  776  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr  778  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  780  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-99099|0xfffffffffffe7ce5] // MoveResolver resolve mapping <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  800  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: rsi|QWORD[.] rax|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: rsi|QWORD[.] - rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-104723|0xfffffffffffe66ed] // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rbx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   22  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   24  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   26  <|@ instruction CMP (x: rbx|QWORD, y: [rcx|QWORD + 488]) size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD = AND rcx|QWORD y: 7 size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP rbx|QWORD y: 1 size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 8 size: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   56  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr   58  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr   62  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr   66  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ instruction r9|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction rcx|DWORD = IMUL r11|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr   74  <|@ instruction rdi|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr   76  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rbp|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction r8|DWORD = NEG r8|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rdi|DWORD = SHL (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction rcx|DWORD = POPCNT r9|DWORD size: DWORD <|@ <|@
      nr   90  <|@ instruction r8|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   92  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rbp|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD = AND (x: r9|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  110  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr  122  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  124  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  134  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  136  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  138  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  142  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  144  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  146  <|@ instruction CMP (x: r11|QWORD, y: [rax|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  414  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rax|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  440  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction rax|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  448  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  570  <|@ instruction MOV (x: [r13|QWORD[.] + rbx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  572  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  574  <|@ instruction rax|QWORD[*] = XOR (x: rax|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  576  <|@ instruction TEST rax|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  590  <|@ instruction rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  592  <|@ instruction rsi|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  594  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  596  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600255641850084083
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B47" "B49" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  680  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  682  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  686  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  692  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  168  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  170  <|@ instruction CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  178  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  180  <|@ instruction r8|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  184  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  196  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  198  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  202  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  216  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] vstack:2|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  226  <|@ instruction r9|DWORD = INC vstack:1|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] vstack:2|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r10|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  236  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  244  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  258  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  260  <|@ instruction CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  268  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  270  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rax|QWORD = MOV [rax|QWORD + 472] size: QWORD <|@ <|@
      nr  286  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  296  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:5|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  304  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  310  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] vstack:2|QWORD[.] vstack:5|DWORD - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  314  <|@ instruction rax|DWORD = INC vstack:5|DWORD size: DWORD <|@ <|@
      nr  318  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] vstack:2|QWORD[.] vstack:5|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  324  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] vstack:2|QWORD[.] vstack:5|DWORD - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr  332  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  252  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:5|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:5|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction CMP (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rsi|QWORD = MOV [rax|QWORD + 40] size: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOV [rsi|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  386  <|@ instruction r8|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  388  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  390  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  392  <|@ instruction r8|QWORD = MOV [rsi|QWORD + r8|QWORD * 1] size: QWORD <|@ <|@
      nr  394  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  380  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  424  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  460  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.]] size: DWORD <|@ <|@
      nr  462  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  472  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  480  <|@ instruction MOV (x: [rdx|QWORD + r10|QWORD * 1 - 8], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  482  <|@ instruction rax|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  484  <|@ instruction MOV (x: [r15|QWORD + 56], y: rax|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  616  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  618  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585428038581536961
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction MOV (x: [rax|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  492  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  508  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 488] size: QWORD <|@ <|@
      nr  510  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572430233452165828
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction MOVB [rax|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  630  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  632  <|@ instruction rax|QWORD[*] = ADD (x: rax|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  642  <|@ instruction MOV (x: [r10|QWORD + rsi|QWORD * 1 - 8], y: rax|QWORD[*]) size: QWORD <|@ <|@
      nr  644  <|@ instruction rax|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 112], y: rax|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569704089601104753
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  666  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    probability 4563576711971613252
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  698  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  700  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr  702  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr  710  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  716  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  728  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  730  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  732  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  734  <|@ instruction rdi|QWORD = MOV [r10|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  736  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  722  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr  766  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  768  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction rsi|QWORD = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  792  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr  814  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  776  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr  778  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  780  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-99099|0xfffffffffffe7ce5] // MoveResolver resolve mapping <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  800  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr  802  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  804  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: rsi|QWORD[.] rax|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: rsi|QWORD[.] - rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-104723|0xfffffffffffe66ed] // MoveResolver resolve mapping <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction vstack:0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction vstack:2|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rbx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   22  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   24  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   26  <|@ instruction CMP (x: rbx|QWORD, y: [rcx|QWORD + 488]) size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD = AND rcx|QWORD y: 7 size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP rbx|QWORD y: 1 size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 8 size: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  108  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr  114  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr  118  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r9|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|DWORD = IMUL r11|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr  128  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD = NEG r8|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction rdi|DWORD = SHL (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction rcx|DWORD = POPCNT r9|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  144  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rbp|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction r9|DWORD = AND (x: r9|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  162  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr  324  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  336  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  338  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  344  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction CMP (x: r11|QWORD, y: [rax|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rax|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rax|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction MOV (x: [r13|QWORD[.] + rbx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  496  <|@ instruction rax|QWORD[*] = XOR (x: rax|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  498  <|@ instruction TEST rax|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  512  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  524  <|@ instruction rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  528  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  530  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600255641850084083
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B47" "B49" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  602  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  178  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  194  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  196  <|@ instruction r8|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  198  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  200  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction vstack:1|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  260  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] vstack:2|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  272  <|@ instruction r9|DWORD = INC vstack:1|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] vstack:2|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r10|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  280  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction vstack:5|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  740  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  750  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  754  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction rax|QWORD = MOV [rax|QWORD + 472] size: QWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:5|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  806  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  808  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] vstack:2|QWORD[.] vstack:5|DWORD - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  818  <|@ instruction rax|DWORD = INC vstack:5|DWORD size: DWORD <|@ <|@
      nr  820  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  822  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] vstack:2|QWORD[.] vstack:5|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  824  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  826  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] vstack:2|QWORD[.] vstack:5|DWORD - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr  832  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  834  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  838  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction vstack:5|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  846  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  306  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:5|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:5|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction CMP (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction rsi|QWORD = MOV [rax|QWORD + 40] size: QWORD <|@ <|@
      nr  382  <|@ instruction rdx|DWORD = MOV [rsi|QWORD] size: DWORD <|@ <|@
      nr  384  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  396  <|@ instruction r8|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  398  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  402  <|@ instruction r8|QWORD = MOV [rsi|QWORD + r8|QWORD * 1] size: QWORD <|@ <|@
      nr  404  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  892  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  442  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.]] size: DWORD <|@ <|@
      nr  444  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  460  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rdx|QWORD + r10|QWORD * 1 - 8], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rax|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 56], y: rax|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction rbx|DWORD = MOVE vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r10|DWORD = MOVE vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  546  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585428038581536961
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction MOV (x: [rax|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  188  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction vstack:1|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 488] size: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr   96  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction r10|DWORD = MOVE vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction vstack:1|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction vstack:3|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: vstack:0|QWORD[.] vstack:2|QWORD[.] vstack:1|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572430233452165828
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction MOVB [rax|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  560  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  562  <|@ instruction rax|QWORD[*] = ADD (x: rax|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [r10|QWORD + rsi|QWORD * 1 - 8], y: rax|QWORD[*]) size: QWORD <|@ <|@
      nr  584  <|@ instruction rax|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 112], y: rax|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569704089601104753
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  874  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    probability 4563576711971613252
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  616  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  618  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr  620  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  642  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  656  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  658  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  660  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  662  <|@ instruction rdi|QWORD = MOV [r10|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  664  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  650  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr  678  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  680  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  574  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr  858  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  860  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr  898  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  878  <|@ instruction r9|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction rdx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  886  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rax|DWORD = MOVE input: int[-99099|0xfffffffffffe7ce5] <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr  906  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  908  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: rsi|QWORD[.] rax|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: rsi|QWORD[.] - rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction rax|DWORD = MOVE input: int[-104723|0xfffffffffffe66ed] <|@ <|@
      nr  700  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [6, 849[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [206, 878[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [8, 880[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[vstack:3|d]" vstack:3|d -1 [52, 849[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [294, 852[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:32|q]" vstack:0|q -1 [6, 849[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:48|d]" vstack:1|d -1 [206, 878[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:40|q]" vstack:2|q -1 [8, 880[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[stack:44|d]" vstack:3|d -1 [52, 849[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:52|d]" vstack:5|d -1 [294, 852[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rbx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   22  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   24  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   26  <|@ instruction CMP (x: rbx|QWORD, y: [rcx|QWORD + 488]) size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD = AND rcx|QWORD y: 7 size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP rbx|QWORD y: 1 size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 8 size: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  108  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr  114  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr  118  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r9|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|DWORD = IMUL r11|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr  128  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD = NEG r8|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction rdi|DWORD = SHL (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction rcx|DWORD = POPCNT r9|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  144  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rbp|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction r9|DWORD = AND (x: r9|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  162  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr  324  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  336  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  338  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  344  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction CMP (x: r11|QWORD, y: [rax|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rax|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: stack:32|QWORD[.] stack:40|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rax|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction MOV (x: [r13|QWORD[.] + rbx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  496  <|@ instruction rax|QWORD[*] = XOR (x: rax|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  498  <|@ instruction TEST rax|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  512  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  524  <|@ instruction rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  528  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  530  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600255641850084083
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B47" "B49" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  602  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  178  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  194  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  196  <|@ instruction r8|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  198  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  200  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  260  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  272  <|@ instruction r9|DWORD = INC stack:48|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r10|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  280  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  740  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  750  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  754  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction rax|QWORD = MOV [rax|QWORD + 472] size: QWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  806  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  808  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  818  <|@ instruction rax|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr  820  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  822  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  824  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  826  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr  832  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  834  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  838  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  846  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  306  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction CMP (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction rsi|QWORD = MOV [rax|QWORD + 40] size: QWORD <|@ <|@
      nr  382  <|@ instruction rdx|DWORD = MOV [rsi|QWORD] size: DWORD <|@ <|@
      nr  384  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  396  <|@ instruction r8|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  398  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  402  <|@ instruction r8|QWORD = MOV [rsi|QWORD + r8|QWORD * 1] size: QWORD <|@ <|@
      nr  404  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  892  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  442  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.]] size: DWORD <|@ <|@
      nr  444  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  460  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rdx|QWORD + r10|QWORD * 1 - 8], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rax|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 56], y: rax|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  546  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585428038581536961
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction MOV (x: [rax|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  188  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 488] size: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr   96  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572430233452165828
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction MOVB [rax|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  560  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  562  <|@ instruction rax|QWORD[*] = ADD (x: rax|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [r10|QWORD + rsi|QWORD * 1 - 8], y: rax|QWORD[*]) size: QWORD <|@ <|@
      nr  584  <|@ instruction rax|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 112], y: rax|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569704089601104753
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  874  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    probability 4563576711971613252
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  616  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  618  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr  620  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  642  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  656  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  658  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  660  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  662  <|@ instruction rdi|QWORD = MOV [r10|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  664  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  650  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr  678  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  680  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  574  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr  858  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  860  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr  898  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  878  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  886  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rax|DWORD = MOVE input: int[-99099|0xfffffffffffe7ce5] <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr  906  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  908  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@live-base-pointers: []
scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: rsi|QWORD[.] rax|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: rsi|QWORD[.] - rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction rax|DWORD = MOVE input: int[-104723|0xfffffffffffe66ed] <|@ <|@
      nr  700  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rbx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   22  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   24  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   26  <|@ instruction CMP (x: rbx|QWORD, y: [rcx|QWORD + 488]) size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD = AND rcx|QWORD y: 7 size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP rbx|QWORD y: 1 size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 8 size: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  108  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr  114  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr  118  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r9|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|DWORD = IMUL r11|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr  128  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD = NEG r8|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction rdi|DWORD = SHL (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction rcx|DWORD = POPCNT r9|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  144  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rbp|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction r9|DWORD = AND (x: r9|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  162  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  322  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r13:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr  324  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  336  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  338  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  344  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction CMP (x: r11|QWORD, y: [rax|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rax|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: stack:32|QWORD[.] stack:40|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rax|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction MOV (x: [r13|QWORD[.] + rbx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  496  <|@ instruction rax|QWORD[*] = XOR (x: rax|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  498  <|@ instruction TEST rax|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  512  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  524  <|@ instruction rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  528  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  530  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600255641850084083
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B47" "B49" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  602  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  178  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  194  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  196  <|@ instruction r8|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  198  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  200  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  260  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  272  <|@ instruction r9|DWORD = INC stack:48|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r10|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  280  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  740  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  750  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  754  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction rax|QWORD = MOV [rax|QWORD + 472] size: QWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  806  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  808  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  816  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  818  <|@ instruction rax|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr  820  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  822  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  824  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  826  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr  832  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  834  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  838  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  846  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  306  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction CMP (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction rsi|QWORD = MOV [rax|QWORD + 40] size: QWORD <|@ <|@
      nr  382  <|@ instruction rdx|DWORD = MOV [rsi|QWORD] size: DWORD <|@ <|@
      nr  384  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  396  <|@ instruction r8|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  398  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  402  <|@ instruction r8|QWORD = MOV [rsi|QWORD + r8|QWORD * 1] size: QWORD <|@ <|@
      nr  404  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  892  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  442  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.]] size: DWORD <|@ <|@
      nr  444  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  460  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rdx|QWORD + r10|QWORD * 1 - 8], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rax|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 56], y: rax|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  546  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585428038581536961
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction MOV (x: [rax|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  188  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 488] size: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr   96  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572430233452165828
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction MOVB [rax|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  560  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  562  <|@ instruction rax|QWORD[*] = ADD (x: rax|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [r10|QWORD + rsi|QWORD * 1 - 8], y: rax|QWORD[*]) size: QWORD <|@ <|@
      nr  584  <|@ instruction rax|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 112], y: rax|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569704089601104753
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  874  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    probability 4563576711971613252
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  616  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  618  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr  620  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  642  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  656  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  658  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  660  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  662  <|@ instruction rdi|QWORD = MOV [r10|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  664  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  650  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ st <@st|@reference-map: []
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr  678  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  680  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  574  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr  858  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  860  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr  898  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  900  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  878  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  886  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rax|DWORD = MOVE input: int[-99099|0xfffffffffffe7ce5] <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr  906  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  908  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: rsi|QWORD[.] rax|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: rsi|QWORD[.] - rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction rax|DWORD = MOVE input: int[-104723|0xfffffffffffe66ed] <|@ <|@
      nr  700  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rbx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   22  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   24  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   26  <|@ instruction CMP (x: rbx|QWORD, y: [rcx|QWORD + 488]) size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD = AND rcx|QWORD y: 7 size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP rbx|QWORD y: 1 size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 8 size: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  108  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr  114  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr  118  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r9|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|DWORD = IMUL r11|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr  128  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD = NEG r8|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction rdi|DWORD = SHL (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction rcx|DWORD = POPCNT r9|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  144  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rbp|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction r9|DWORD = AND (x: r9|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  162  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  322  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r13:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr  324  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  336  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  338  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  344  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction CMP (x: r11|QWORD, y: [rax|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rax|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: stack:32|QWORD[.] stack:40|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rax|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction MOV (x: [r13|QWORD[.] + rbx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  496  <|@ instruction rax|QWORD[*] = XOR (x: rax|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  498  <|@ instruction TEST rax|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  512  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  524  <|@ instruction rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  528  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  530  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600255641850084083
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B47" "B49" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  602  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  178  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  194  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  196  <|@ instruction r8|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  198  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  200  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  260  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  272  <|@ instruction r9|DWORD = INC stack:48|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r10|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  280  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  740  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  750  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  754  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction rax|QWORD = MOV [rax|QWORD + 472] size: QWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  806  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  808  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  816  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  818  <|@ instruction rax|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr  820  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  822  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  824  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  826  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr  832  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  834  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  838  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  846  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  306  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction CMP (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction rsi|QWORD = MOV [rax|QWORD + 40] size: QWORD <|@ <|@
      nr  382  <|@ instruction rdx|DWORD = MOV [rsi|QWORD] size: DWORD <|@ <|@
      nr  384  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  396  <|@ instruction r8|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  398  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  402  <|@ instruction r8|QWORD = MOV [rsi|QWORD + r8|QWORD * 1] size: QWORD <|@ <|@
      nr  404  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  892  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  442  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.]] size: DWORD <|@ <|@
      nr  444  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  460  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rdx|QWORD + r10|QWORD * 1 - 8], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rax|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 56], y: rax|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  546  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585428038581536961
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction MOV (x: [rax|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  188  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 488] size: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr   96  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572430233452165828
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction MOVB [rax|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  560  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  562  <|@ instruction rax|QWORD[*] = ADD (x: rax|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [r10|QWORD + rsi|QWORD * 1 - 8], y: rax|QWORD[*]) size: QWORD <|@ <|@
      nr  584  <|@ instruction rax|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 112], y: rax|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569704089601104753
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  874  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    probability 4563576711971613252
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  616  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  618  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr  620  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  642  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  656  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  658  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  660  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  662  <|@ instruction rdi|QWORD = MOV [r10|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  664  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  650  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ st <@st|@reference-map: []
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr  678  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  680  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  574  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr  858  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  860  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr  898  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  900  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  878  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  886  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rax|DWORD = MOVE input: int[-99099|0xfffffffffffe7ce5] <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr  906  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  908  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: rsi|QWORD[.] rax|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: rsi|QWORD[.] - rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction rax|DWORD = MOVE input: int[-104723|0xfffffffffffe66ed] <|@ <|@
      nr  700  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rbx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   22  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   24  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   26  <|@ instruction CMP (x: rbx|QWORD, y: [rcx|QWORD + 488]) size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD = AND rcx|QWORD y: 7 size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP rbx|QWORD y: 1 size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 8 size: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  108  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr  114  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr  118  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r9|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|DWORD = IMUL r11|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr  128  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD = NEG r8|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction rdi|DWORD = SHL (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction rcx|DWORD = POPCNT r9|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  144  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rbp|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction r9|DWORD = AND (x: r9|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  162  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  322  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r13:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr  324  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  336  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  338  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  344  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction CMP (x: r11|QWORD, y: [rax|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rax|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: stack:32|QWORD[.] stack:40|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rax|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" "B41" "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction MOV (x: [r13|QWORD[.] + rbx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  496  <|@ instruction rax|QWORD[*] = XOR (x: rax|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  498  <|@ instruction TEST rax|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  512  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  524  <|@ instruction rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  528  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  530  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" 
    xhandlers
    flags 
    probability 4600255641850084083
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B47 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B47" "B49" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  602  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  178  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  194  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  196  <|@ instruction r8|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  198  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  200  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  260  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  272  <|@ instruction r9|DWORD = INC stack:48|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r10|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  280  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  740  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  750  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  754  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction rax|QWORD = MOV [rax|QWORD + 472] size: QWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  806  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  808  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  816  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  818  <|@ instruction rax|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr  820  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  822  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  824  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  826  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr  832  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  834  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  838  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction CMP (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction rsi|QWORD = MOV [rax|QWORD + 40] size: QWORD <|@ <|@
      nr  382  <|@ instruction rdx|DWORD = MOV [rsi|QWORD] size: DWORD <|@ <|@
      nr  384  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  396  <|@ instruction r8|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  398  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  402  <|@ instruction r8|QWORD = MOV [rsi|QWORD + r8|QWORD * 1] size: QWORD <|@ <|@
      nr  404  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  892  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  442  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.]] size: DWORD <|@ <|@
      nr  444  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  460  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rdx|QWORD + r10|QWORD * 1 - 8], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rax|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 56], y: rax|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  546  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585428038581536961
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction MOV (x: [rax|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  188  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 488] size: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr   96  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4572430233452165828
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction MOVB [rax|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  560  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  562  <|@ instruction rax|QWORD[*] = ADD (x: rax|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [r10|QWORD + rsi|QWORD * 1 - 8], y: rax|QWORD[*]) size: QWORD <|@ <|@
      nr  584  <|@ instruction rax|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 112], y: rax|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    probability 4569704089601104753
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  874  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B84" 
    xhandlers
    flags 
    probability 4563576711971613252
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  616  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  618  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr  620  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  642  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  656  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  658  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  660  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  662  <|@ instruction rdi|QWORD = MOV [r10|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  664  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  650  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B56 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ st <@st|@reference-map: []
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr  678  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  680  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr  858  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  860  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr  898  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  900  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  878  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  886  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rax|DWORD = MOVE input: int[-99099|0xfffffffffffe7ce5] <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr  906  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  908  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: rsi|QWORD[.] rax|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: rsi|QWORD[.] - rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction rax|DWORD = MOVE input: int[-104723|0xfffffffffffe66ed] <|@ <|@
      nr  700  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rbx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   22  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   24  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   26  <|@ instruction CMP (x: rbx|QWORD, y: [rcx|QWORD + 488]) size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD = AND rcx|QWORD y: 7 size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP rbx|QWORD y: 1 size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 8 size: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  108  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr  114  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr  118  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r9|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|DWORD = IMUL r11|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr  128  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD = NEG r8|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction rdi|DWORD = SHL (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction rcx|DWORD = POPCNT r9|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  144  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rbp|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction r9|DWORD = AND (x: r9|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  162  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  322  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r13:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr  324  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  336  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  338  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  344  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction CMP (x: r11|QWORD, y: [rax|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rax|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: stack:32|QWORD[.] stack:40|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B42" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rax|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B42 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B41" "B40" 
    successors "B53" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction MOV (x: [r13|QWORD[.] + rbx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  496  <|@ instruction rax|QWORD[*] = XOR (x: rax|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  498  <|@ instruction TEST rax|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B53 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  512  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B53 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  524  <|@ instruction rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  528  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  530  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B53 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B46" "B48" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  602  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  178  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  194  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  196  <|@ instruction r8|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  198  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  200  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  260  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  272  <|@ instruction r9|DWORD = INC stack:48|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r10|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  280  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B85" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  740  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B85 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  750  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  754  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction rax|QWORD = MOV [rax|QWORD + 472] size: QWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  806  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  808  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  816  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  818  <|@ instruction rax|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr  820  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  822  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  824  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  826  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr  832  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  834  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  838  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction CMP (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction rsi|QWORD = MOV [rax|QWORD + 40] size: QWORD <|@ <|@
      nr  382  <|@ instruction rdx|DWORD = MOV [rsi|QWORD] size: DWORD <|@ <|@
      nr  384  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  396  <|@ instruction r8|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  398  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  402  <|@ instruction r8|QWORD = MOV [rsi|QWORD + r8|QWORD * 1] size: QWORD <|@ <|@
      nr  404  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  892  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  442  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.]] size: DWORD <|@ <|@
      nr  444  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B42 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  460  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rdx|QWORD + r10|QWORD * 1 - 8], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rax|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 56], y: rax|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  546  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B53 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction MOV (x: [rax|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  188  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 488] size: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr   96  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction MOVB [rax|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  560  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  562  <|@ instruction rax|QWORD[*] = ADD (x: rax|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [r10|QWORD + rsi|QWORD * 1 - 8], y: rax|QWORD[*]) size: QWORD <|@ <|@
      nr  584  <|@ instruction rax|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 112], y: rax|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B79" "B72" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  874  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B63" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  616  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  618  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr  620  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B63 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B63 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  642  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  656  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  658  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  660  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  662  <|@ instruction rdi|QWORD = MOV [r10|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  664  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  650  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ st <@st|@reference-map: []
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr  678  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  680  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr  858  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  860  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr  898  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  900  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  878  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  886  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rax|DWORD = MOVE input: int[-99099|0xfffffffffffe7ce5] <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr  906  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  908  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: rsi|QWORD[.] rax|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: rsi|QWORD[.] - rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction rax|DWORD = MOVE input: int[-104723|0xfffffffffffe66ed] <|@ <|@
      nr  700  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rbx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   22  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   24  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   26  <|@ instruction CMP (x: rbx|QWORD, y: [rcx|QWORD + 488]) size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD = AND rcx|QWORD y: 7 size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP rbx|QWORD y: 1 size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 8 size: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  108  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr  114  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr  118  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r9|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|DWORD = IMUL r11|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr  128  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD = NEG r8|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction rdi|DWORD = SHL (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction rcx|DWORD = POPCNT r9|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  144  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rbp|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction r9|DWORD = AND (x: r9|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  162  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  322  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r13:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr  324  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  336  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  338  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  344  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction CMP (x: r11|QWORD, y: [rax|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rax|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: stack:32|QWORD[.] stack:40|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B42" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rax|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B42 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B41" "B40" 
    successors "B53" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction MOV (x: [r13|QWORD[.] + rbx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  496  <|@ instruction rax|QWORD[*] = XOR (x: rax|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  498  <|@ instruction TEST rax|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B53 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  512  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B53 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  524  <|@ instruction rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  528  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  530  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B53 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B46" "B48" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  602  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  178  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  194  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  196  <|@ instruction r8|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  198  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  200  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  260  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  272  <|@ instruction r9|DWORD = INC stack:48|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r10|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  280  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B85" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  740  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B85 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  750  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  754  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction rax|QWORD = MOV [rax|QWORD + 472] size: QWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  806  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  808  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  816  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  818  <|@ instruction rax|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr  820  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  822  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  824  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  826  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr  832  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  834  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  838  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction CMP (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction rsi|QWORD = MOV [rax|QWORD + 40] size: QWORD <|@ <|@
      nr  382  <|@ instruction rdx|DWORD = MOV [rsi|QWORD] size: DWORD <|@ <|@
      nr  384  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  396  <|@ instruction r8|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  398  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  402  <|@ instruction r8|QWORD = MOV [rsi|QWORD + r8|QWORD * 1] size: QWORD <|@ <|@
      nr  404  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  892  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  442  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.]] size: DWORD <|@ <|@
      nr  444  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B42 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  460  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rdx|QWORD + r10|QWORD * 1 - 8], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rax|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 56], y: rax|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  546  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B53 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction MOV (x: [rax|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  188  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 488] size: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr   96  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction MOVB [rax|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  560  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  562  <|@ instruction rax|QWORD[*] = ADD (x: rax|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [r10|QWORD + rsi|QWORD * 1 - 8], y: rax|QWORD[*]) size: QWORD <|@ <|@
      nr  584  <|@ instruction rax|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 112], y: rax|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B79" "B72" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  874  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B63" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  616  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  618  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr  620  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B63 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B63 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  642  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  656  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  658  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  660  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  662  <|@ instruction rdi|QWORD = MOV [r10|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  664  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  650  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ st <@st|@reference-map: []
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr  678  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  680  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr  858  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  860  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr  898  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  900  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  878  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  886  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rax|DWORD = MOVE input: int[-99099|0xfffffffffffe7ce5] <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr  906  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  908  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: rsi|QWORD[.] rax|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: rsi|QWORD[.] - rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction rax|DWORD = MOVE input: int[-104723|0xfffffffffffe66ed] <|@ <|@
      nr  700  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rbx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   22  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   24  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   26  <|@ instruction CMP (x: rbx|QWORD, y: [rcx|QWORD + 488]) size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD = AND rcx|QWORD y: 7 size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP rbx|QWORD y: 1 size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 8 size: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  108  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr  114  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr  118  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r9|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|DWORD = IMUL r11|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr  128  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD = NEG r8|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction rdi|DWORD = SHL (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction rcx|DWORD = POPCNT r9|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  144  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rbp|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction r9|DWORD = AND (x: r9|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  162  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  322  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r13:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr  324  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  336  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  338  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  344  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction CMP (x: r11|QWORD, y: [rax|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rax|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: stack:32|QWORD[.] stack:40|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B42" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rax|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B42 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B41" "B40" 
    successors "B53" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction MOV (x: [r13|QWORD[.] + rbx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  496  <|@ instruction rax|QWORD[*] = XOR (x: rax|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  498  <|@ instruction TEST rax|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B53 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  512  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B53 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  524  <|@ instruction rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  528  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  530  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B53 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B46" "B48" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  602  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  178  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  194  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  196  <|@ instruction r8|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  198  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  200  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  260  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  272  <|@ instruction r9|DWORD = INC stack:48|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r10|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  280  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B85" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  740  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B85 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  750  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  754  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction rax|QWORD = MOV [rax|QWORD + 472] size: QWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  806  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  808  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  816  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  818  <|@ instruction rax|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr  820  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  822  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  824  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  826  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr  832  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  834  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  838  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction CMP (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction rsi|QWORD = MOV [rax|QWORD + 40] size: QWORD <|@ <|@
      nr  382  <|@ instruction rdx|DWORD = MOV [rsi|QWORD] size: DWORD <|@ <|@
      nr  384  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  396  <|@ instruction r8|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  398  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  402  <|@ instruction r8|QWORD = MOV [rsi|QWORD + r8|QWORD * 1] size: QWORD <|@ <|@
      nr  404  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  892  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  442  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.]] size: DWORD <|@ <|@
      nr  444  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B42 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  460  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rdx|QWORD + r10|QWORD * 1 - 8], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rax|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 56], y: rax|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  546  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B53 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction MOV (x: [rax|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  188  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 488] size: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr   96  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction MOVB [rax|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  560  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  562  <|@ instruction rax|QWORD[*] = ADD (x: rax|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [r10|QWORD + rsi|QWORD * 1 - 8], y: rax|QWORD[*]) size: QWORD <|@ <|@
      nr  584  <|@ instruction rax|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 112], y: rax|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B79" "B72" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  874  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B63" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  616  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  618  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr  620  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B63 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B63 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  642  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  656  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  658  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  660  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  662  <|@ instruction rdi|QWORD = MOV [r10|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  664  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  650  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ st <@st|@reference-map: []
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr  678  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  680  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr  858  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  860  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr  898  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  900  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  878  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  886  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rax|DWORD = MOVE input: int[-99099|0xfffffffffffe7ce5] <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr  906  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  908  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: rsi|QWORD[.] rax|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: rsi|QWORD[.] - rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction rax|DWORD = MOVE input: int[-104723|0xfffffffffffe66ed] <|@ <|@
      nr  700  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rbx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   22  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   24  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   26  <|@ instruction CMP (x: rbx|QWORD, y: [rcx|QWORD + 488]) size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD = AND rcx|QWORD y: 7 size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP rbx|QWORD y: 1 size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 8 size: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  108  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr  114  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr  118  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r9|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|DWORD = IMUL r11|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr  128  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD = NEG r8|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction rdi|DWORD = SHL (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction rcx|DWORD = POPCNT r9|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  144  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rbp|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction r9|DWORD = AND (x: r9|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  162  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  322  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r13:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr  324  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  336  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  338  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  344  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction CMP (x: r11|QWORD, y: [rax|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rax|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: stack:32|QWORD[.] stack:40|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B42" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rax|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B42 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B41" "B40" 
    successors "B53" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction MOV (x: [r13|QWORD[.] + rbx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  496  <|@ instruction rax|QWORD[*] = XOR (x: rax|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  498  <|@ instruction TEST rax|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B53 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  512  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B53 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  524  <|@ instruction rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  528  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  530  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B53 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B46" "B48" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  602  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  178  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  194  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  196  <|@ instruction r8|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  198  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  200  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  260  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  272  <|@ instruction r9|DWORD = INC stack:48|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r10|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  280  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B85" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  740  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B85 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  750  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  754  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction rax|QWORD = MOV [rax|QWORD + 472] size: QWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  806  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  808  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  816  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  818  <|@ instruction rax|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr  820  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  822  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  824  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  826  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr  832  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  834  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  838  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction CMP (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction rsi|QWORD = MOV [rax|QWORD + 40] size: QWORD <|@ <|@
      nr  382  <|@ instruction rdx|DWORD = MOV [rsi|QWORD] size: DWORD <|@ <|@
      nr  384  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  396  <|@ instruction r8|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  398  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  402  <|@ instruction r8|QWORD = MOV [rsi|QWORD + r8|QWORD * 1] size: QWORD <|@ <|@
      nr  404  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  892  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  442  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.]] size: DWORD <|@ <|@
      nr  444  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B42 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  460  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rdx|QWORD + r10|QWORD * 1 - 8], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rax|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 56], y: rax|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  546  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B53 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction MOV (x: [rax|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  188  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 488] size: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr   96  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction MOVB [rax|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  560  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  562  <|@ instruction rax|QWORD[*] = ADD (x: rax|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [r10|QWORD + rsi|QWORD * 1 - 8], y: rax|QWORD[*]) size: QWORD <|@ <|@
      nr  584  <|@ instruction rax|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 112], y: rax|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B79" "B72" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  874  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B63" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  616  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  618  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr  620  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B63 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B63 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  642  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  656  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  658  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  660  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  662  <|@ instruction rdi|QWORD = MOV [r10|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  664  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  650  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ st <@st|@reference-map: []
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr  678  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  680  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr  858  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  860  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr  898  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  900  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  878  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  886  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rax|DWORD = MOVE input: int[-99099|0xfffffffffffe7ce5] <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr  906  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  908  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: rsi|QWORD[.] rax|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: rsi|QWORD[.] - rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction rax|DWORD = MOVE input: int[-104723|0xfffffffffffe66ed] <|@ <|@
      nr  700  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B89" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rbx|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr   22  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr   24  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   26  <|@ instruction CMP (x: rbx|QWORD, y: [rcx|QWORD + 488]) size: QWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD = AND rcx|QWORD y: 7 size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP rbx|QWORD y: 1 size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 8 size: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" "B7" 
    successors "B10" "B88" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  108  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:5] <|@ <|@
      nr  114  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:5] <|@ <|@
      nr  118  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  120  <|@ instruction r9|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|DWORD = IMUL r11|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = BSWAP rcx|DWORD <|@ <|@
      nr  126  <|@ instruction rdi|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD <|@ <|@
      nr  128  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|DWORD = NEG r8|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction rdi|DWORD = SHL (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rbp|DWORD = OR (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction rcx|DWORD = POPCNT r9|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  144  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rbp|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction r9|DWORD = AND (x: r9|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  162  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B24" 
    xhandlers
    flags 
    probability 4604637101697543118
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B11" 
    successors "B25" "B70" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  322  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r13:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:58] <|@ <|@
      nr  324  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4605009928850914964
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  334  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  336  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  338  <|@ instruction r11|QWORD = MOV [r11|QWORD + 232] size: QWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = MOV [r11|QWORD + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction r9|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  344  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction CMP (x: r11|QWORD, y: [rax|QWORD + r9|QWORD * 1]) size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B69" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction CMP r8|DWORD y: 32 size: DWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B71" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B66" "B68" "B69" 
    successors 
    xhandlers
    flags 
    probability 4598309458375303506
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 1004], y: rax|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  732  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58]
locals: stack:32|QWORD[.] stack:40|QWORD[.] rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:58] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600506329223544468
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B26 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" "B33" 
    successors "B35" "B66" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B42" "B37" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rax|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD <|@ <|@
      nr  428  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B42 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B41" "B40" 
    successors "B53" "B44" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  492  <|@ instruction MOV (x: [r13|QWORD[.] + rbx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  496  <|@ instruction rax|QWORD[*] = XOR (x: rax|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  498  <|@ instruction TEST rax|QWORD[*] y: -1048576 size: QWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B53 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" "B46" 
    xhandlers
    flags 
    probability 4601800042056397479
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  512  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B53 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" "B48" 
    xhandlers
    flags 
    probability 4600987199842548323
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  524  <|@ instruction rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD = MOVE input: long[139991352238080|0x7f5246d26000] <|@ <|@
      nr  528  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  530  <|@ instruction CMP r10|DWORD y: 32 size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B53 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B46" "B48" "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4602691009622216171
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  596  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  602  <|@ instruction BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4602682194638797716
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4598762254122854497
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  178  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r8|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  194  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  196  <|@ instruction r8|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  198  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  200  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598032219080370290
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597774740952762860
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 472] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" "B18" 
    successors "B20" "B87" 
    xhandlers
    flags 
    probability 4598360508682375227
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  260  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B86" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  272  <|@ instruction r9|DWORD = INC stack:48|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r10|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  280  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4596499073823946934
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B85" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580356599366154274
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  736  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  740  <|@ instruction BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B85 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  750  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  754  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579336535486657376
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed} <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579098846627320397
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction rax|QWORD = MOV [rax|QWORD + 472] size: QWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD = MOV [rax|QWORD + 56] size: QWORD <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  800  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" "B78" 
    successors "B80" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579810641562430203
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  806  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  808  <|@ instruction BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  816  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:29] <|@ <|@
      nr  818  <|@ instruction rax|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr  820  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD <|@ <|@
      nr  822  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:29] <|@ <|@
      nr  824  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  826  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577921224793732127
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29] <|@ <|@
      nr  832  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  834  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  838  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B81 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B81" 
    successors "B23" "B72" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4588475744468609129
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>} <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560724920483936689
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556241667142984286
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:52|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4596002729596173972
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction CMP (x: r11|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction rsi|QWORD = MOV [rax|QWORD + 40] size: QWORD <|@ <|@
      nr  382  <|@ instruction rdx|DWORD = MOV [rsi|QWORD] size: DWORD <|@ <|@
      nr  384  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4589546355881478177
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  396  <|@ instruction r8|DWORD = SHL r10|DWORD y: 3 size: DWORD <|@ <|@
      nr  398  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  400  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  402  <|@ instruction r8|QWORD = MOV [rsi|QWORD + r8|QWORD * 1] size: QWORD <|@ <|@
      nr  404  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586019143297770331
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B67 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B67" 
    successors "B32" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594049955508848673
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591499129968803476
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B71" 
    xhandlers
    flags 
    probability 4589546355881478177
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5] <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4588347717017902849
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  892  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B42" "B39" 
    xhandlers
    flags 
    probability 4587386085158898038
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  442  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.]] size: DWORD <|@ <|@
      nr  444  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B42 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586663558746587678
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  460  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586013284975508354
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rdx|QWORD + r10|QWORD * 1 - 8], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  480  <|@ instruction rax|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  482  <|@ instruction MOV (x: [r15|QWORD + 56], y: rax|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4586126055489743960
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" "B50" 
    xhandlers
    flags 
    probability 4586013284975508353
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  544  <|@ instruction r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  546  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B53 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4583468317757725135
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction MOV (x: [rax|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4582085148456092248
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  188  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4579370881606713415
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26] <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 488] size: QWORD <|@ <|@
      nr   90  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2] <|@ <|@
      nr   96  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   74  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574889322237120705
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [stack:24, stack:32]
live-base-pointers: []
scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28]
locals: - - 
scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9]
locals: - - 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:48|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26] <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4571852212322317540
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4571331993305454080
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction MOVB [rax|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  560  <|@ instruction r10|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  562  <|@ instruction rax|QWORD[*] = ADD (x: rax|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570573970599500493
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 128] size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [r10|QWORD + rsi|QWORD * 1 - 8], y: rax|QWORD[*]) size: QWORD <|@ <|@
      nr  584  <|@ instruction rax|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 112], y: rax|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B79" "B72" 
    successors 
    xhandlers
    flags 
    probability 4571912327959246922
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  874  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B63" "B57" 
    xhandlers
    flags 
    probability 4562156094409190694
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD = MOVE input: long[34359738368|0x800000000] <|@ <|@
      nr  616  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3 <|@ <|@
      nr  618  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>} <|@ <|@
      nr  620  <|@ instruction CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B63 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B63" "B59" 
    xhandlers
    flags 
    probability 4557652494781820198
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B63 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4553148895154449702
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction r10|QWORD = MOV [r8|QWORD + 40] size: QWORD <|@ <|@
      nr  642  <|@ instruction r9|DWORD = MOV [r10|QWORD] size: DWORD <|@ <|@
      nr  644  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  656  <|@ instruction rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  658  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD <|@ <|@
      nr  660  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  662  <|@ instruction rdi|QWORD = MOV [r10|QWORD + rdi|QWORD * 1] size: QWORD <|@ <|@
      nr  664  <|@ instruction CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  666  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4551869060891542593
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B64 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B64" 
    successors "B61" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4555083154373127734
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  650  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" "B62" 
    successors 
    xhandlers
    flags 
    probability 4561198636682729924
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ st <@st|@reference-map: []
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104] <|@ <|@
      nr  678  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  680  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4556126777487034776
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction rsi|QWORD = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    probability 4549290048599971883
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction MOV [r15|QWORD + 1004] y: -89627 size: DWORD <|@ <|@
      nr  858  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  860  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction MOV [r15|QWORD + 1004] y: -80411 size: DWORD <|@ <|@
      nr  898  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  900  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5]
stack: rsi|QWORD[.] r11|DWORD 
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  878  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction MOV [r15|QWORD + 1004] y: -85275 size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  886  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rax|DWORD = MOVE input: int[-99099|0xfffffffffffe7ce5] <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction MOV [r15|QWORD + 1004] y: -74803 size: DWORD <|@ <|@
      nr  906  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  908  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction MOV [r15|QWORD + 1004] y: -188449 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5]
locals: rsi|QWORD[.] rax|DWORD 
scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76]
locals: rsi|QWORD[.] - rbx|DWORD - 
>@ <|@ instruction DEOPT info [bci:5, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction rax|DWORD = MOVE input: int[-104723|0xfffffffffffe66ed] <|@ <|@
      nr  700  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #51         // java.lang.Object.hashCode:()int
     5: invokeinterface#52, 2      // index:(int)int
    10: istore_2      
    11: aload_0       
    12: invokeinterface#14, 1      // table:()java.lang.Object[]
    17: iload_2       
    18: aaload        
    19: astore_3      
    20: aload_3       
    21: ifnull        58
    24: aload_3       
    25: aload_1       
    26: invokestatic  #53         // scala.runtime.BoxesRunTime.equals:(java.lang.Object, java.lang.Object)boolean
    29: ifeq          34
    32: iconst_0      
    33: ireturn       
    34: iload_2       
    35: iconst_1      
    36: iadd          
    37: aload_0       
    38: invokeinterface#14, 1      // table:()java.lang.Object[]
    43: arraylength   
    44: irem          
    45: istore_2      
    46: aload_0       
    47: invokeinterface#14, 1      // table:()java.lang.Object[]
    52: iload_2       
    53: aaload        
    54: astore_3      
    55: goto          20
    58: aload_0       
    59: invokeinterface#14, 1      // table:()java.lang.Object[]
    64: iload_2       
    65: aload_1       
    66: aastore       
    67: aload_0       
    68: aload_0       
    69: invokeinterface#37, 1      // tableSize:()int
    74: iconst_1      
    75: iadd          
    76: invokeinterface#23, 2      // tableSize_$eq:(int)void
    81: aload_0       
    82: iload_2       
    83: invokeinterface#55, 2      // nnSizeMapAdd:(int)void
    88: aload_0       
    89: invokeinterface#37, 1      // tableSize:()int
    94: aload_0       
    95: invokeinterface#56, 1      // threshold:()int
   100: if_icmplt     107
   103: aload_0       
   104: invokespecial #148        // growTable:()void
   107: iconst_1      
   108: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e20349bc00000000080000004d03d449bc0000000000000000493bc20f85d8ffffff906666660f1f840000000000660f1f440000660f1f44000089842400c0feff4883ec3848896c2430488974242048895424188b4a08448b56084181faaddeadde0f858006000048bb0000000008000000488d0ccb48bbaddeaddeaddeadde483b99e80100000f857f040000488b0a488bd94883e3074883fb010f859a04000048c1e9088bc985c90f848c040000448bd948b9addeaddeaddeadde8b4970418504cc8b5e1c8b04dd0c000000448b4618448bc841ffc94169cbcd75379e0fc969f9cd75379e418bc88befd3ed41f7d8418bc8d3e70beff3410fb8c941b820000000442bc1418bc8d3ed4423cd413bc10f868605000048c1e303428b448b1085c00f85160100004c8beb418bd9418b450c458b5d083bc30f86a10500008b420849b800000000080000004f8d1cd84d8b9be8000000458b431049b90000000008000000498d04c14d63c84e3b1c080f84270000004183f8200f845e020000b8d56efeff418987ec03000049c787f803000000000000e8000000009044895424148b462085c00f8575050000410fbe473085c00f85a9020000488b542418488bc248c1e8034189449d10498d449d104833c248f7c00000f0ff0f842b0000004885d20f8422000000498d449d1048c1e80948be0060d246527f0000440fbe14304183fa200f85a2020000488b742420b8010000000346108946103b46140f8db0030000b801000000488b6c24304883c438498b8f080100008501c5f877c38b1cc508000000448bd849c1e3034c3bda0f847d02000049b80000000008000000498d1cd84c8b433848b9addeaddeaddeadde493bc80f8473020000813cc508000000addeadde44894c241044895424140f84ce020000488b9bd8010000488b4338498bf34c8bdaffd09085c00f8596010000488b7424208b5e1c448b14dd0c000000448b4c241041ffc1418bc19941f7fa443bd20f86e003000048c1e3038b44931048c1e0034c8beb8954240c4c8bd0e9a40000000f1f8000000000418b42084c3bd20f84b002000049bb0000000008000000498d04c34c8b5838493bcb0f849200000041817a08addeadde0f8499000000488b80d80100004c8b5838498bf24c8bd2488bd8498bc3ffd09085c00f8565020000488b742420448b561c468b1cd50c0000008b44240cffc09941f7fb443bda0f86000300004d8b9f0801000041850349c1e203458b5c921049c1e3034d8bea8954240c4d8bd348b9addeaddeaddeadde488b5424184d85d20f84e9000000e946ffffff498bf2488b5424180f1f440000e80000000090eb81498bf2488b542418e80000000090e96effffff44895424144c3bd80f8448000000488b70288b1641ba00000000e92d0000000f1f8400000000000f1f8000000000458bc241c1e003458d40084d63c04e8b04064d3bd80f849e00000041ffc2413bd27fdde90a000000488b742420e964fdffffb8d56efeffe93dfdffffb800000000488b6c24304883c438498b8f080100008501c5f877c3498d449d108b0048c1e0034885c00f8443fdffff498b57384885d20f84fa0000004d8b57484a894412f8488d42f849894738e920fdffff8b5c240c448b542414488b742420e982fcfffff083042400440fbe14304585d20f844bfdffffe9c70000004c895820488b742420e9cffcffffb800000000488b6c24304883c438498b8f080100008501c5f877c344894c24104489542414498bf3488b542418666690e80000000090e99cfdffff4489542414488b99e8010000488b4338488b742418ffd090448bd8448b542414488b542418488b742420e977fbffff4489542414488b742418e80000000090448bd8448b542414488b542418488b742420e950fbffff498bf3488b5424180f1f8000000000e80000000090e92cfdffff488bf0e80000000090e92efcffffc60430004d8b57704803c64d85d20f84c4000000498bb78000000049894432f8498d42f849894770e952fcffffb800000000488b6c24304883c438498b8f080100008501c5f877c3448b54241449bb00000000080000004f8d04d349bbaddeaddeaddeadde4d3b58200f84450000004181faaddeadde0f84380000004d8b5028458b0ab900000000e91d0000006666908bf9c1e7038d7f084863ff498b3c3a4c3bdf0f843e000000ffc1443bc97fe1e9c6000000666690e80000000090b801000000488b6c24304883c438498b8f080100008501c5f877c3488bf0e80000000090e999fbffff4d895820ebc8448b54240c488b54241841c787ec030000e5a1feff49c787f803000000000000e8000000009041c787ec030000e5c5feff49c787f803000000000000e80000000090448b4c2410488b54241841c787ec030000e5b2feff49c787f803000000000000e80000000090b8e57cfeffe99bfaffff41c787ec030000cddbfeff49c787f803000000000000e8000000009041c787ec030000df1ffdff49c787f803000000000000e80000000090b8ed66feffe959faffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 34 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f524d2f2db8, value=0x7f5227888080]:0x7f5227888080}  <||@
  Comment 64 [stack overflow check]  <||@
  Comment 64 3  <||@
  Comment 64 1  <||@
  Comment 75 block B0 null  <||@
  Comment 75 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 80 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD  <||@
  Comment 80 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 85 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 90 10 rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 90 [rdx:0, rsi:0, stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 90 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 93 12 r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 97 14 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed}  <||@
  Comment 97 {meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed}}  <||@
  Comment 104 16 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89  <||@
  Comment 110 block B1 null  <||@
  Comment 110 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 110 20 rbx|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 120 22 rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3  <||@
  Comment 124 24 rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>}  <||@
  Comment 124 {meta{HotSpotMethod<Object.hashCode()>}}  <||@
  Comment 134 26 CMP (x: rbx|QWORD, y: [rcx|QWORD + 488]) size: QWORD  <||@
  Comment 141 28 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8  <||@
  Comment 147 block B2 null  <||@
  Comment 147 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 147 32 rcx|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 150 34 rbx|QWORD = AND rcx|QWORD y: 7 size: QWORD  <||@
  Comment 157 36 CMP rbx|QWORD y: 1 size: QWORD  <||@
  Comment 161 38 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7  <||@
  Comment 167 block B3 null  <||@
  Comment 167 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 167 42 rcx|QWORD = SHR rcx|QWORD y: 8 size: QWORD  <||@
  Comment 171 44 rcx|DWORD = MOV rcx|QWORD size: DWORD  <||@
  Comment 173 46 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 175 48 BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5  <||@
  Comment 181 block B5 null  <||@
  Comment 181 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 181 58 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 184 60 JUMP ~[] destination: B5 -> B9  <||@
  Comment 184 block B9 null  <||@
  Comment 184 106 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 184 108 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$]  <||@
  Comment 184 {Object[Class:scala.util.hashing.package$]}  <||@
  Comment 194 110 rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD  <||@
  Comment 197 112 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:5]  <||@
  Comment 197 [rdx:0, rsi:0, stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |- 
     stack:   |rsi|QWORD[.]  |r11|DWORD     |   |    <||@
  Comment 197 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 201 114 rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 204 116 rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:5]  <||@
  Comment 204 [rdx:0, rbx:0, rsi:0, stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |- 
     stack:   |rsi|QWORD[.]  |r11|DWORD     |   |    <||@
  Comment 204 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 211 118 r8|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 215 120 r9|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 221 122 rcx|DWORD = IMUL r11|DWORD y: -1640532531 size: DWORD  <||@
  Comment 228 124 rcx|DWORD = BSWAP rcx|DWORD  <||@
  Comment 230 126 rdi|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD  <||@
  Comment 236 128 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 239 130 rbp|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 243 132 r8|DWORD = NEG r8|DWORD size: DWORD  <||@
  Comment 246 134 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 249 136 rdi|DWORD = SHL (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 251 138 rbp|DWORD = OR (x: rbp|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 253 140 rcx|DWORD = POPCNT r9|DWORD size: DWORD  <||@
  Comment 258 142 r8|DWORD = MOVE input: int[32|0x20]  <||@
  Comment 264 144 r8|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 267 146 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 270 148 rbp|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 272 150 r9|DWORD = AND (x: r9|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 275 152 CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 278 154 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88  <||@
  Comment 284 block B10 null  <||@
  Comment 284 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 284 158 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3  <||@
  Comment 288 160 rax|DWORD[.] = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 293 162 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 295 164 BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 301 block B11 null  <||@
  Comment 301 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 301 168 r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 304 170 rbx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 307 172 JUMP ~[] destination: B11 -> B24  <||@
  Comment 307 block B24 null  <||@
  Comment 307 320 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 307 322 rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:58]  <||@
  Comment 307 [rdx:0, rsi:0, r13:0, stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rbx|DWORD  |-   <||@
  Comment 307 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 311 324 r11|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD  <||@
  Comment 315 326 CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 317 328 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70  <||@
  Comment 323 block B25 null  <||@
  Comment 323 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 323 332 rax|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 326 334 r8|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 336 336 r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3  <||@
  Comment 340 338 r11|QWORD = MOV [r11|QWORD + 232] size: QWORD  <||@
  Comment 347 340 r8|DWORD = MOV [r11|QWORD + 16] size: DWORD  <||@
  Comment 351 342 r9|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 361 344 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3  <||@
  Comment 365 346 r9|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 368 348 CMP (x: r11|QWORD, y: [rax|QWORD + r9|QWORD * 1]) size: QWORD  <||@
  Comment 372 350 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 378 block B27 null  <||@
  Comment 378 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 378 360 CMP r8|DWORD y: 32 size: DWORD  <||@
  Comment 382 362 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69  <||@
  Comment 388 block B69 null  <||@
  Comment 388 714 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 388 716 rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5]  <||@
  Comment 393 718 JUMP ~[] destination: B69 -> B71  <||@
  Comment 393 block B71 null  <||@
  Comment 393 726 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 393 728 MOV (x: [r15|QWORD + 1004], y: rax|DWORD) size: DWORD  <||@
  Comment 400 730 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 411 732 DEOPT info [bci:58]  <||@
  Comment 411 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f524d2f2da0, value=0x7f5227887084]:0x7f5227887084}  <||@
  Comment 416 [stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |rbx|DWORD  |-   <||@
  Comment 417 block B26 null  <||@
  Comment 417 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 417 354 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 422 356 JUMP ~[] destination: B26 -> B34  <||@
  Comment 422 block B34 null  <||@
  Comment 422 416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 422 418 rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 425 420 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 427 422 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66  <||@
  Comment 433 block B35 null  <||@
  Comment 433 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 433 426 rax|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD  <||@
  Comment 438 428 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 440 430 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B42 falseDestination: B35 -> B37  <||@
  Comment 446 block B42 null  <||@
  Comment 446 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 446 434 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 451 490 rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3  <||@
  Comment 458 492 MOV (x: [r13|QWORD[.] + rbx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 463 494 rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 468 496 rax|QWORD[*] = XOR (x: rax|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 471 498 TEST rax|QWORD[*] y: -1048576 size: QWORD  <||@
  Comment 478 500 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B53 falseDestination: B42 -> B44  <||@
  Comment 484 block B44 null  <||@
  Comment 484 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 484 510 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 487 512 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B53 falseDestination: B44 -> B46  <||@
  Comment 493 block B46 null  <||@
  Comment 493 520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 493 522 rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 498 524 rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD  <||@
  Comment 502 526 rsi|QWORD = MOVE input: long[139991352238080|0x7f5246d26000]  <||@
  Comment 512 528 r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD  <||@
  Comment 517 530 CMP r10|DWORD y: 32 size: DWORD  <||@
  Comment 521 532 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B53 falseDestination: B46 -> B48  <||@
  Comment 527 block B53 null  <||@
  Comment 527 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 527 504 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 532 594 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 537 596 rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 540 598 MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 543 600 CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 546 602 BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 552 block B54 null  <||@
  Comment 552 604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 552 606 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 557 608 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd  <||@
  Comment 573 15  <||@
  Comment 579 block B12 null  <||@
  Comment 579 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 579 176 rbx|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 586 178 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3  <||@
  Comment 593 180 CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 596 182 BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 602 block B14 null  <||@
  Comment 602 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 602 192 r8|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 612 194 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3  <||@
  Comment 616 196 r8|QWORD = MOV [rbx|QWORD + 56] size: QWORD  <||@
  Comment 620 198 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>}  <||@
  Comment 620 {meta{HotSpotType<Ljava/lang/Number;, resolved>}}  <||@
  Comment 630 200 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 633 202 BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 639 block B16 null  <||@
  Comment 639 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 639 220 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed}  <||@
  Comment 639 {meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed}}  <||@
  Comment 650 226 stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 655 228 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 660 222 BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 666 block B18 null  <||@
  Comment 666 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 666 244 rbx|QWORD = MOV [rbx|QWORD + 472] size: QWORD  <||@
  Comment 673 246 rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD  <||@
  Comment 677 248 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 680 250 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 683 254 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26]  <||@
  Comment 683 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 683 11  <||@
  Comment 685 [stack:24, stack:32]at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|DWORD  |-   <||@
  Comment 686 256 JUMP ~[] destination: B18 -> B19  <||@
  Comment 686 block B19 null  <||@
  Comment 686 258 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 686 260 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 688 262 BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87  <||@
  Comment 694 block B20 null  <||@
  Comment 694 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 694 266 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 699 268 rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 702 270 r10|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:29]  <||@
  Comment 702 [rbx:0, rsi:0, stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29, duringCall: false, rethrow: false]
              |0             |1                  |2               |3 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |stack:48|DWORD  |- 
     stack:   |int[0|0x0]    |                   |                |    <||@
  Comment 702 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 710 272 r9|DWORD = INC stack:48|DWORD size: DWORD  <||@
  Comment 718 274 rax|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 721 276 (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD  <||@
  Comment 722 278 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r10|DWORD) size: DWORD state [bci:29]  <||@
  Comment 722 [rbx:0, rsi:0, stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29, duringCall: false, rethrow: false]
              |0             |1                  |2               |3 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |stack:48|DWORD  |- 
     stack:   |int[0|0x0]    |                   |                |    <||@
  Comment 722 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 725 280 CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 728 282 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86  <||@
  Comment 734 block B21 null  <||@
  Comment 734 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 734 286 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3  <||@
  Comment 738 288 rax|DWORD[.] = MOV [rbx|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 742 290 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3  <||@
  Comment 746 292 r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 749 294 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 753 296 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 756 302 JUMP ~[] destination: B21 -> B22  <||@
  Comment 761 block B72 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 761 734 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 768 736 rax|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD  <||@
  Comment 772 738 CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 775 740 BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B85 falseDestination: B72 -> B74  <||@
  Comment 781 block B74 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 781 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 781 748 r11|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 791 750 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3  <||@
  Comment 795 752 r11|QWORD = MOV [rax|QWORD + 56] size: QWORD  <||@
  Comment 799 754 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 802 756 BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 808 block B76 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 808 768 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 808 770 CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed}  <||@
  Comment 808 {meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed}}  <||@
  Comment 816 772 BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 822 block B78 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 822 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 822 786 rax|QWORD = MOV [rax|QWORD + 472] size: QWORD  <||@
  Comment 829 788 r11|QWORD = MOV [rax|QWORD + 56] size: QWORD  <||@
  Comment 833 790 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 836 792 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 839 796 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 842 798 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 845 800 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26]  <||@
  Comment 845 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 845 11  <||@
  Comment 847 [stack:24, stack:32]at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:52|DWORD  |-   <||@
  Comment 848 802 JUMP ~[] destination: B78 -> B79  <||@
  Comment 848 block B79 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 848 804 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 848 806 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 850 808 BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B85  <||@
  Comment 856 block B80 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 856 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 856 812 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 861 814 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 865 816 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:29]  <||@
  Comment 865 [rsi:0, r10:0, stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29, duringCall: false, rethrow: false]
              |0             |1                  |2               |3 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |stack:52|DWORD  |- 
     stack:   |int[0|0x0]    |                   |                |    <||@
  Comment 865 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 873 818 rax|DWORD = INC stack:52|DWORD size: DWORD  <||@
  Comment 879 820 (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD  <||@
  Comment 880 822 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:29]  <||@
  Comment 880 [rsi:0, r10:0, stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29, duringCall: false, rethrow: false]
              |0             |1                  |2               |3 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |stack:52|DWORD  |- 
     stack:   |int[0|0x0]    |                   |                |    <||@
  Comment 880 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 883 824 CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 886 826 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82  <||@
  Comment 892 block B81 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 892 828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 892 830 SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29]  <||@
  Comment 899 [rsi:0, r10:0, stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29, duringCall: false, rethrow: false]
              |0             |1                  |2               |3 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |stack:52|DWORD  |- 
     stack:   |int[0|0x0]    |                   |                |    <||@
  Comment 899 {infopoint: SAFEPOINT}  <||@
  Comment 899 14  <||@
  Comment 902 832 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3  <||@
  Comment 906 834 r11|DWORD[.] = MOV [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 911 836 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3  <||@
  Comment 915 838 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 918 840 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 922 842 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 925 848 JUMP ~[] destination: B81 -> B22  <||@
  Comment 925 block B22 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 925 304 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 925 298 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>}  <||@
  Comment 925 {meta{HotSpotType<Ljava/lang/Number;, resolved>}}  <||@
  Comment 935 300 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 940 306 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 943 308 BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72  <||@
  Comment 954 block B75 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 954 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 954 760 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 957 762 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 962 764 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26]  <||@
  Comment 962 9  <||@
  Comment 967 {HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)>}  <||@
  Comment 972 [stack:24, stack:32]at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:52|DWORD  |-   <||@
  Comment 973 766 JUMP ~[] destination: B75 -> B79  <||@
  Comment 975 block B77 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 975 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 975 776 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 978 778 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 983 780 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26]  <||@
  Comment 983 {HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)>}  <||@
  Comment 983 9  <||@
  Comment 988 [stack:24, stack:32]at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:52|DWORD  |-   <||@
  Comment 989 782 JUMP ~[] destination: B77 -> B79  <||@
  Comment 994 block B28 null  <||@
  Comment 994 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 994 366 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 999 368 CMP (x: r11|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1002 370 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 1008 block B30 null  <||@
  Comment 1008 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1008 380 rsi|QWORD = MOV [rax|QWORD + 40] size: QWORD  <||@
  Comment 1012 382 rdx|DWORD = MOV [rsi|QWORD] size: DWORD  <||@
  Comment 1014 384 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1020 386 JUMP ~[] destination: B30 -> B31  <||@
  Comment 1025 block B32 loop 1 depth 1 header:643|LoopBegin  <||@
  Comment 1025 394 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1040 396 r8|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 1047 398 r8|DWORD = LEA [r8|DWORD + 8] size: DWORD  <||@
  Comment 1051 400 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 1054 402 r8|QWORD = MOV [rsi|QWORD + r8|QWORD * 1] size: QWORD  <||@
  Comment 1058 404 CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1061 406 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67  <||@
  Comment 1067 block B67 loop 1 depth 1 header:643|LoopBegin  <||@
  Comment 1067 702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1067 704 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 1070 706 JUMP ~[] destination: B67 -> B31  <||@
  Comment 1070 block B31 loop 1 depth 1 header:643|LoopBegin  <||@
  Comment 1070 388 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1070 390 CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1073 392 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68  <||@
  Comment 1080 block B29 null  <||@
  Comment 1080 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1080 374 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1085 376 JUMP ~[] destination: B29 -> B34  <||@
  Comment 1090 block B68 null  <||@
  Comment 1090 708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1090 710 rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5]  <||@
  Comment 1095 712 JUMP ~[] destination: B68 -> B71  <||@
  Comment 1100 block B87 null  <||@
  Comment 1100 888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1100 890 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1105 892 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd  <||@
  Comment 1121 15  <||@
  Comment 1127 block B37 null  <||@
  Comment 1127 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1127 440 rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1132 442 rax|DWORD[.] = MOV [rax|QWORD[.]] size: DWORD  <||@
  Comment 1134 444 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3  <||@
  Comment 1138 446 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 1141 448 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B42 falseDestination: B37 -> B39  <||@
  Comment 1147 block B39 null  <||@
  Comment 1147 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1147 458 rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1151 460 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1154 462 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 1160 block B41 null  <||@
  Comment 1160 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1160 476 r10|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1164 478 MOV (x: [rdx|QWORD + r10|QWORD * 1 - 8], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 1169 480 rax|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1173 482 MOV (x: [r15|QWORD + 56], y: rax|QWORD) size: QWORD  <||@
  Comment 1177 486 JUMP ~[] destination: B41 -> B42  <||@
  Comment 1182 block B23 null  <||@
  Comment 1182 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1182 312 rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1186 314 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1191 316 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1196 318 JUMP ~[] destination: B23 -> B24  <||@
  Comment 1201 block B48 null  <||@
  Comment 1201 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1201 542 MEMBAR barriers: 4  <||@
  Comment 1206 544 r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD  <||@
  Comment 1211 546 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1214 548 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B53 falseDestination: B48 -> B50  <||@
  Comment 1225 block B33 null  <||@
  Comment 1225 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1225 410 MOV (x: [rax|QWORD + 32], y: r11|QWORD) size: QWORD  <||@
  Comment 1229 412 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1234 414 JUMP ~[] destination: B33 -> B34  <||@
  Comment 1239 block B13 null  <||@
  Comment 1239 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1239 186 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1244 188 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd  <||@
  Comment 1260 15  <||@
  Comment 1266 block B15 null  <||@
  Comment 1266 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1266 206 stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1271 208 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1276 210 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1279 212 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1284 214 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26]  <||@
  Comment 1284 9  <||@
  Comment 1287 {HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)>}  <||@
  Comment 1292 [stack:24, stack:32]at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|DWORD  |-   <||@
  Comment 1293 216 JUMP ~[] destination: B15 -> B19  <||@
  Comment 1298 block B8 null  <||@
  Comment 1298 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1298 86 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1303 88 rbx|QWORD = MOV [rcx|QWORD + 488] size: QWORD  <||@
  Comment 1310 90 rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD  <||@
  Comment 1314 92 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1319 94 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2]  <||@
  Comment 1319 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 1319 11  <||@
  Comment 1321 [stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |- 
     stack:   |stack:32|QWORD[.]  |                   |   |    <||@
  Comment 1322 96 r11|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1325 98 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1330 100 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1335 102 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1340 104 JUMP ~[] destination: B8 -> B9  <||@
  Comment 1345 block B7 null  <||@
  Comment 1345 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1345 64 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1350 70 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1355 72 rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0]  <||@
  Comment 1355 {Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1360 [stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-   <||@
  Comment 1361 74 r11|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1364 76 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1369 78 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1374 80 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1379 82 JUMP ~[] destination: B7 -> B9  <||@
  Comment 1384 block B17 null  <||@
  Comment 1384 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1384 230 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1387 232 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1392 234 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26]  <||@
  Comment 1392 9  <||@
  Comment 1399 {HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)>}  <||@
  Comment 1404 [stack:24, stack:32]at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|DWORD  |-   <||@
  Comment 1405 236 JUMP ~[] destination: B17 -> B19  <||@
  Comment 1410 block B40 null  <||@
  Comment 1410 464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1410 466 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1413 468 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1413 {Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1419 472 JUMP ~[] destination: B40 -> B42  <||@
  Comment 1424 block B50 null  <||@
  Comment 1424 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1424 558 MOVB [rax|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1428 560 r10|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1432 562 rax|QWORD[*] = ADD (x: rax|QWORD[*], y: rsi|QWORD) size: QWORD  <||@
  Comment 1435 564 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1438 566 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52  <||@
  Comment 1444 block B52 null  <||@
  Comment 1444 578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1444 580 rsi|QWORD = MOV [r15|QWORD + 128] size: QWORD  <||@
  Comment 1451 582 MOV (x: [r10|QWORD + rsi|QWORD * 1 - 8], y: rax|QWORD[*]) size: QWORD  <||@
  Comment 1456 584 rax|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1460 586 MOV (x: [r15|QWORD + 112], y: rax|QWORD) size: QWORD  <||@
  Comment 1464 590 JUMP ~[] destination: B52 -> B53  <||@
  Comment 1469 block B85 null  <||@
  Comment 1469 870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1469 872 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1474 874 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd  <||@
  Comment 1490 15  <||@
  Comment 1496 block B55 null  <||@
  Comment 1496 610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1496 612 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1501 614 r11|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 1511 616 r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3  <||@
  Comment 1515 618 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>}  <||@
  Comment 1515 {meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>}}  <||@
  Comment 1525 620 CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD  <||@
  Comment 1529 622 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B63 falseDestination: B55 -> B57  <||@
  Comment 1535 block B57 null  <||@
  Comment 1535 628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1535 630 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed}  <||@
  Comment 1535 {meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed}}  <||@
  Comment 1542 632 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B63 falseDestination: B57 -> B59  <||@
  Comment 1548 block B59 null  <||@
  Comment 1548 638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1548 640 r10|QWORD = MOV [r8|QWORD + 40] size: QWORD  <||@
  Comment 1552 642 r9|DWORD = MOV [r10|QWORD] size: DWORD  <||@
  Comment 1555 644 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1560 646 JUMP ~[] destination: B59 -> B60  <||@
  Comment 1565 block B61 loop 2 depth 1 header:702|LoopBegin  <||@
  Comment 1565 654 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1568 656 rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD  <||@
  Comment 1573 658 rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD  <||@
  Comment 1576 660 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 1579 662 rdi|QWORD = MOV [r10|QWORD + rdi|QWORD * 1] size: QWORD  <||@
  Comment 1583 664 CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1586 666 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64  <||@
  Comment 1592 block B64 loop 2 depth 1 header:702|LoopBegin  <||@
  Comment 1592 682 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1592 684 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 1594 686 JUMP ~[] destination: B64 -> B60  <||@
  Comment 1594 block B60 loop 2 depth 1 header:702|LoopBegin  <||@
  Comment 1594 648 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1594 650 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1597 652 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65  <||@
  Comment 1604 block B63 null  <||@
  Comment 1604 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1604 676 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104]  <||@
  Comment 1604 10  <||@
  Comment 1607 {HotSpotMethod<FlatHashTable.growTable()>}  <||@
  Comment 1612 []at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1613 678 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1618 680 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd  <||@
  Comment 1634 15  <||@
  Comment 1640 block B51 null  <||@
  Comment 1640 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1640 570 rsi|QWORD = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1643 572 - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1643 {Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1649 576 JUMP ~[] destination: B51 -> B53  <||@
  Comment 1654 block B62 null  <||@
  Comment 1654 668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1654 670 MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD  <||@
  Comment 1658 672 JUMP ~[] destination: B62 -> B63  <||@
  Comment 1660 block B82 null  <||@
  Comment 1660 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1660 852 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1665 854 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1670 856 MOV [r15|QWORD + 1004] y: -89627 size: DWORD  <||@
  Comment 1681 858 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 1692 860 DEOPT info [bci:29]  <||@
  Comment 1692 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f524d2f2da0, value=0x7f5227887084]:0x7f5227887084}  <||@
  Comment 1697 [rdx:0, rsi:0]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
     stack:   |int[0|0x0]    |              |           |    <||@
  Comment 1698 block B88 null  <||@
  Comment 1698 894 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1698 896 MOV [r15|QWORD + 1004] y: -80411 size: DWORD  <||@
  Comment 1709 898 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 1720 900 DEOPT info [bci:5]  <||@
  Comment 1720 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f524d2f2da0, value=0x7f5227887084]:0x7f5227887084}  <||@
  Comment 1725 [rdx:0, rsi:0]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |- 
     stack:   |rsi|QWORD[.]  |r11|DWORD     |   |    <||@
  Comment 1726 block B86 null  <||@
  Comment 1726 876 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1726 878 r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1731 880 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1736 882 MOV [r15|QWORD + 1004] y: -85275 size: DWORD  <||@
  Comment 1747 884 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 1758 886 DEOPT info [bci:29]  <||@
  Comment 1758 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f524d2f2da0, value=0x7f5227887084]:0x7f5227887084}  <||@
  Comment 1763 [rdx:0, rsi:0]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29, duringCall: false, rethrow: false]
              |0             |1             |2         |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r9|DWORD  |- 
     stack:   |int[0|0x0]    |              |          |    <||@
  Comment 1764 block B70 null  <||@
  Comment 1764 720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1764 722 rax|DWORD = MOVE input: int[-99099|0xfffffffffffe7ce5]  <||@
  Comment 1769 724 JUMP ~[] destination: B70 -> B71  <||@
  Comment 1774 block B89 null  <||@
  Comment 1774 902 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1774 904 MOV [r15|QWORD + 1004] y: -74803 size: DWORD  <||@
  Comment 1785 906 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 1796 908 DEOPT info [bci:0]  <||@
  Comment 1796 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f524d2f2da0, value=0x7f5227887084]:0x7f5227887084}  <||@
  Comment 1801 [rdx:0, rsi:0]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 1802 block B65 null  <||@
  Comment 1802 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1802 690 MOV [r15|QWORD + 1004] y: -188449 size: DWORD  <||@
  Comment 1813 692 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 1824 694 DEOPT info [bci:5, 76]  <||@
  Comment 1824 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f524d2f2da0, value=0x7f5227887084]:0x7f5227887084}  <||@
  Comment 1829 [rsi:0]at scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rax|DWORD 
  at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76, duringCall: true, rethrow: false]
              |0             |1  |2          |3 
     locals:  |rsi|QWORD[.]  |-  |rbx|DWORD  |-   <||@
  Comment 1830 block B66 null  <||@
  Comment 1830 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1830 698 rax|DWORD = MOVE input: int[-104723|0xfffffffffffe66ed]  <||@
  Comment 1835 700 JUMP ~[] destination: B66 -> B71  <||@
  Comment 1840 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f5227976b80:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1840 4  <||@
  Comment 1846 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f524d2f2da8, value=0x7f5227886e20]:0x7f5227886e20}  <||@
  Comment 1846 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9982[scala.collection.mutable.FlatHashTable.addEntry(Object)]"
  method "HotSpotCompilation-9982[scala.collection.mutable.FlatHashTable.addEntry(Object)]"
  date 1649331762784
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f52327d28a0 448b560849c1e20349bc00000000080000004d03d449bc0000000000000000493bc20f85b8570bf5906666660f1f840000000000660f1f440000660f1f44000089842400c0feff4883ec3848896c2430488974242048895424188b4a08448b56084181fa08700c080f858006000048bb0000000008000000488d0ccb48bba829000008000000483b99e80100000f857f040000488b0a488bd94883e3074883fb010f859a04000048c1e9088bc985c90f848c040000448bd948b990738454070000008b4970418504cc8b5e1c8b04dd0c000000448b4618448bc841ffc94169cbcd75379e0fc969f9cd75379e418bc88befd3ed41f7d8418bc8d3e70beff3410fb8c941b820000000442bc1418bc8d3ed4423cd413bc10f868605000048c1e303428b448b1085c00f85160100004c8beb418bd9418b450c458b5d083bc30f86a10500008b420849b800000000080000004f8d1cd84d8b9be8000000458b431049b90000000008000000498d04c14d63c84e3b1c080f84270000004183f8200f845e020000b8d56efeff418987ec03000049c787f803000000000000e844460bf59044895424148b462085c00f8575050000410fbe473085c00f85a9020000488b542418488bc248c1e8034189449d10498d449d104833c248f7c00000f0ff0f842b0000004885d20f8422000000498d449d1048c1e80948be0060d246527f0000440fbe14304183fa200f85a2020000488b742420b8010000000346108946103b46140f8db0030000b801000000488b6c24304883c438498b8f080100008501c5f877c38b1cc508000000448bd849c1e3034c3bda0f847d02000049b80000000008000000498d1cd84c8b433848b9f8c30a0008000000493bc80f8473020000813cc50800000059f0060044894c241044895424140f84ce020000488b9bd8010000488b4338498bf34c8bdaffd09085c00f8596010000488b7424208b5e1c448b14dd0c000000448b4c241041ffc1418bc19941f7fa443bd20f86e003000048c1e3038b44931048c1e0034c8beb8954240c4c8bd0e9a40000000f1f8000000000418b42084c3bd20f84b002000049bb0000000008000000498d04c34c8b5838493bcb0f849200000041817a0859f006000f8499000000488b80d80100004c8b5838498bf24c8bd2488bd8498bc3ffd09085c00f8565020000488b742420448b561c468b1cd50c0000008b44240cffc09941f7fb443bda0f86000300004d8b9f0801000041850349c1e203458b5c921049c1e3034d8bea8954240c4d8bd348b9f8c30a0008000000488b5424184d85d20f84e9000000e946ffffff498bf2488b5424180f1f440000e8144b0bf590eb81498bf2488b542418e8044b0bf590e96effffff44895424144c3bd80f8448000000488b70288b1641ba00000000e92d0000000f1f8400000000000f1f8000000000458bc241c1e003458d40084d63c04e8b04064d3bd80f849e00000041ffc2413bd27fdde90a000000488b742420e964fdffffb8d56efeffe93dfdffffb800000000488b6c24304883c438498b8f080100008501c5f877c3498d449d108b0048c1e0034885c00f8443fdffff498b57384885d20f84fa0000004d8b57484a894412f8488d42f849894738e920fdffff8b5c240c448b542414488b742420e982fcfffff083042400440fbe14304585d20f844bfdffffe9c70000004c895820488b742420e9cffcffffb800000000488b6c24304883c438498b8f080100008501c5f877c344894c24104489542414498bf3488b542418666690e8d4490bf590e99cfdffff4489542414488b99e8010000488b4338488b742418ffd090448bd8448b542414488b542418488b742420e977fbffff4489542414488b742418e810cf1af590448bd8448b542414488b542418488b742420e950fbffff498bf3488b5424180f1f8000000000e864490bf590e92cfdffff488bf0e856801af590e92efcffffc60430004d8b57704803c64d85d20f84c4000000498bb78000000049894432f8498d42f849894770e952fcffffb800000000488b6c24304883c438498b8f080100008501c5f877c3448b54241449bb00000000080000004f8d04d349bbe85d5b40080000004d3b58200f84450000004181fabd6b0b080f84380000004d8b5028458b0ab900000000e91d0000006666908bf9c1e7038d7f084863ff498b3c3a4c3bdf0f843e000000ffc1443bc97fe1e9c6000000666690e8944e0bf590b801000000488b6c24304883c438498b8f080100008501c5f877c3488bf0e870861af590e999fbffff4d895820ebc8448b54240c488b54241841c787ec030000e5a1feff49c787f803000000000000e843410bf59041c787ec030000e5c5feff49c787f803000000000000e827410bf590448b4c2410488b54241841c787ec030000e5b2feff49c787f803000000000000e801410bf590b8e57cfeffe99bfaffff41c787ec030000cddbfeff49c787f803000000000000e8db400bf59041c787ec030000df1ffdff49c787f803000000000000e8bf400bf590b8ed66feffe959faffffe8ab3b1af590e8453e0bf590f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 34 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f524d2f2db8, value=0x7f5227888080]:0x7f5227888080}  <||@
  Comment 64 [stack overflow check]  <||@
  Comment 64 3  <||@
  Comment 64 1  <||@
  Comment 75 block B0 null  <||@
  Comment 75 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 80 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3e32fca1 slotKind: QWORD  <||@
  Comment 80 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 85 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 90 10 rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 90 [rdx:0, rsi:0, stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 90 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 93 12 r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 97 14 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed}  <||@
  Comment 97 {meta{HotSpotType<Lscala/collection/mutable/HashSet;, resolved>;compressed}}  <||@
  Comment 104 16 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B89  <||@
  Comment 110 block B1 null  <||@
  Comment 110 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 110 20 rbx|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 120 22 rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rbx|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3  <||@
  Comment 124 24 rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>}  <||@
  Comment 124 {meta{HotSpotMethod<Object.hashCode()>}}  <||@
  Comment 134 26 CMP (x: rbx|QWORD, y: [rcx|QWORD + 488]) size: QWORD  <||@
  Comment 141 28 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B8  <||@
  Comment 147 block B2 null  <||@
  Comment 147 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 147 32 rcx|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 150 34 rbx|QWORD = AND rcx|QWORD y: 7 size: QWORD  <||@
  Comment 157 36 CMP rbx|QWORD y: 1 size: QWORD  <||@
  Comment 161 38 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7  <||@
  Comment 167 block B3 null  <||@
  Comment 167 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 167 42 rcx|QWORD = SHR rcx|QWORD y: 8 size: QWORD  <||@
  Comment 171 44 rcx|DWORD = MOV rcx|QWORD size: DWORD  <||@
  Comment 173 46 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 175 48 BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5  <||@
  Comment 181 block B5 null  <||@
  Comment 181 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 181 58 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 184 60 JUMP ~[] destination: B5 -> B9  <||@
  Comment 184 block B9 null  <||@
  Comment 184 106 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 184 108 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.util.hashing.package$]  <||@
  Comment 184 {Object[Class:scala.util.hashing.package$]}  <||@
  Comment 194 110 rcx|DWORD[.] = MOV [rcx|QWORD[.] + 112] size: DWORD  <||@
  Comment 197 112 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:5]  <||@
  Comment 197 [rdx:0, rsi:0, stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |- 
     stack:   |rsi|QWORD[.]  |r11|DWORD     |   |    <||@
  Comment 197 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 201 114 rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 204 116 rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:5]  <||@
  Comment 204 [rdx:0, rbx:0, rsi:0, stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |- 
     stack:   |rsi|QWORD[.]  |r11|DWORD     |   |    <||@
  Comment 204 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 211 118 r8|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 215 120 r9|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 221 122 rcx|DWORD = IMUL r11|DWORD y: -1640532531 size: DWORD  <||@
  Comment 228 124 rcx|DWORD = BSWAP rcx|DWORD  <||@
  Comment 230 126 rdi|DWORD = IMUL rcx|DWORD y: -1640532531 size: DWORD  <||@
  Comment 236 128 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 239 130 rbp|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 243 132 r8|DWORD = NEG r8|DWORD size: DWORD  <||@
  Comment 246 134 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 249 136 rdi|DWORD = SHL (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 251 138 rbp|DWORD = OR (x: rbp|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 253 140 rcx|DWORD = POPCNT r9|DWORD size: DWORD  <||@
  Comment 258 142 r8|DWORD = MOVE input: int[32|0x20]  <||@
  Comment 264 144 r8|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 267 146 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 270 148 rbp|DWORD = SHR (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 272 150 r9|DWORD = AND (x: r9|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 275 152 CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 278 154 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B88  <||@
  Comment 284 block B10 null  <||@
  Comment 284 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 284 158 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3  <||@
  Comment 288 160 rax|DWORD[.] = MOV [rbx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 293 162 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 295 164 BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 301 block B11 null  <||@
  Comment 301 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 301 168 r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 304 170 rbx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 307 172 JUMP ~[] destination: B11 -> B24  <||@
  Comment 307 block B24 null  <||@
  Comment 307 320 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 307 322 rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:58]  <||@
  Comment 307 [rdx:0, rsi:0, r13:0, stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rbx|DWORD  |-   <||@
  Comment 307 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 311 324 r11|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD  <||@
  Comment 315 326 CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 317 328 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B70  <||@
  Comment 323 block B25 null  <||@
  Comment 323 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 323 332 rax|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 326 334 r8|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 336 336 r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3  <||@
  Comment 340 338 r11|QWORD = MOV [r11|QWORD + 232] size: QWORD  <||@
  Comment 347 340 r8|DWORD = MOV [r11|QWORD + 16] size: DWORD  <||@
  Comment 351 342 r9|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 361 344 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3  <||@
  Comment 365 346 r9|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 368 348 CMP (x: r11|QWORD, y: [rax|QWORD + r9|QWORD * 1]) size: QWORD  <||@
  Comment 372 350 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 378 block B27 null  <||@
  Comment 378 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 378 360 CMP r8|DWORD y: 32 size: DWORD  <||@
  Comment 382 362 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B69  <||@
  Comment 388 block B69 null  <||@
  Comment 388 714 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 388 716 rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5]  <||@
  Comment 393 718 JUMP ~[] destination: B69 -> B71  <||@
  Comment 393 block B71 null  <||@
  Comment 393 726 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 393 728 MOV (x: [r15|QWORD + 1004], y: rax|DWORD) size: DWORD  <||@
  Comment 400 730 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 411 732 DEOPT info [bci:58]  <||@
  Comment 411 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f524d2f2da0, value=0x7f5227887084]:0x7f5227887084}  <||@
  Comment 416 [stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:161) [bci: 58, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |rbx|DWORD  |-   <||@
  Comment 417 block B26 null  <||@
  Comment 417 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 417 354 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 422 356 JUMP ~[] destination: B26 -> B34  <||@
  Comment 422 block B34 null  <||@
  Comment 422 416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 422 418 rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 425 420 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 427 422 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B66  <||@
  Comment 433 block B35 null  <||@
  Comment 433 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 433 426 rax|DWORD = MOVSXB [r15|QWORD + 48] size: DWORD  <||@
  Comment 438 428 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 440 430 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B42 falseDestination: B35 -> B37  <||@
  Comment 446 block B42 null  <||@
  Comment 446 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 446 434 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 451 490 rax|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3  <||@
  Comment 458 492 MOV (x: [r13|QWORD[.] + rbx|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 463 494 rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 468 496 rax|QWORD[*] = XOR (x: rax|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 471 498 TEST rax|QWORD[*] y: -1048576 size: QWORD  <||@
  Comment 478 500 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B53 falseDestination: B42 -> B44  <||@
  Comment 484 block B44 null  <||@
  Comment 484 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 484 510 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 487 512 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B53 falseDestination: B44 -> B46  <||@
  Comment 493 block B46 null  <||@
  Comment 493 520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 493 522 rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 498 524 rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD  <||@
  Comment 502 526 rsi|QWORD = MOVE input: long[139991352238080|0x7f5246d26000]  <||@
  Comment 512 528 r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD  <||@
  Comment 517 530 CMP r10|DWORD y: 32 size: DWORD  <||@
  Comment 521 532 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B53 falseDestination: B46 -> B48  <||@
  Comment 527 block B53 null  <||@
  Comment 527 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 527 504 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 532 594 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 537 596 rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 540 598 MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 543 600 CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 546 602 BRANCH trueDestinationProbability: 0.998047964305633 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 552 block B54 null  <||@
  Comment 552 604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 552 606 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 557 608 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd  <||@
  Comment 573 15  <||@
  Comment 579 block B12 null  <||@
  Comment 579 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 579 176 rbx|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 586 178 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3  <||@
  Comment 593 180 CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 596 182 BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 602 block B14 null  <||@
  Comment 602 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 602 192 r8|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 612 194 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3  <||@
  Comment 616 196 r8|QWORD = MOV [rbx|QWORD + 56] size: QWORD  <||@
  Comment 620 198 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>}  <||@
  Comment 620 {meta{HotSpotType<Ljava/lang/Number;, resolved>}}  <||@
  Comment 630 200 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 633 202 BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 639 block B16 null  <||@
  Comment 639 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 639 220 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed}  <||@
  Comment 639 {meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed}}  <||@
  Comment 650 226 stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 655 228 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 660 222 BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 666 block B18 null  <||@
  Comment 666 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 666 244 rbx|QWORD = MOV [rbx|QWORD + 472] size: QWORD  <||@
  Comment 673 246 rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD  <||@
  Comment 677 248 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 680 250 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 683 254 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26]  <||@
  Comment 683 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 683 11  <||@
  Comment 685 [stack:24, stack:32]at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|DWORD  |-   <||@
  Comment 686 256 JUMP ~[] destination: B18 -> B19  <||@
  Comment 686 block B19 null  <||@
  Comment 686 258 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 686 260 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 688 262 BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B87  <||@
  Comment 694 block B20 null  <||@
  Comment 694 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 694 266 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 699 268 rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 702 270 r10|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:29]  <||@
  Comment 702 [rbx:0, rsi:0, stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29, duringCall: false, rethrow: false]
              |0             |1                  |2               |3 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |stack:48|DWORD  |- 
     stack:   |int[0|0x0]    |                   |                |    <||@
  Comment 702 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 710 272 r9|DWORD = INC stack:48|DWORD size: DWORD  <||@
  Comment 718 274 rax|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 721 276 (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD  <||@
  Comment 722 278 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r10|DWORD) size: DWORD state [bci:29]  <||@
  Comment 722 [rbx:0, rsi:0, stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29, duringCall: false, rethrow: false]
              |0             |1                  |2               |3 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |stack:48|DWORD  |- 
     stack:   |int[0|0x0]    |                   |                |    <||@
  Comment 722 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 725 280 CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 728 282 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B86  <||@
  Comment 734 block B21 null  <||@
  Comment 734 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 734 286 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3  <||@
  Comment 738 288 rax|DWORD[.] = MOV [rbx|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 742 290 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3  <||@
  Comment 746 292 r13|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 749 294 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 753 296 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 756 302 JUMP ~[] destination: B21 -> B22  <||@
  Comment 761 block B72 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 761 734 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 768 736 rax|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD  <||@
  Comment 772 738 CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 775 740 BRANCH trueDestinationProbability: 0.07891854419410749 condition: = trueDestination: B72 -> B85 falseDestination: B72 -> B74  <||@
  Comment 781 block B74 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 781 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 781 748 r11|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 791 750 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3  <||@
  Comment 795 752 r11|QWORD = MOV [rax|QWORD + 56] size: QWORD  <||@
  Comment 799 754 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 802 756 BRANCH trueDestinationProbability: 0.05476550680786685 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 808 block B76 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 808 768 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 808 770 CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed}  <||@
  Comment 808 {meta{HotSpotType<Ljava/lang/Character;, resolved>;compressed}}  <||@
  Comment 816 772 BRANCH trueDestinationProbability: 0.029046971273105515 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 822 block B78 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 822 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 822 786 rax|QWORD = MOV [rax|QWORD + 472] size: QWORD  <||@
  Comment 829 788 r11|QWORD = MOV [rax|QWORD + 56] size: QWORD  <||@
  Comment 833 790 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 836 792 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 839 796 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 842 798 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 845 800 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:48, 9, 26]  <||@
  Comment 845 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 845 11  <||@
  Comment 847 [stack:24, stack:32]at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:137) [bci: 48, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:52|DWORD  |-   <||@
  Comment 848 802 JUMP ~[] destination: B78 -> B79  <||@
  Comment 848 block B79 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 848 804 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 848 806 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 850 808 BRANCH trueDestinationProbability: 0.7817474354439335 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B85  <||@
  Comment 856 block B80 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 856 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 856 812 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 861 814 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 865 816 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:29]  <||@
  Comment 865 [rsi:0, r10:0, stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29, duringCall: false, rethrow: false]
              |0             |1                  |2               |3 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |stack:52|DWORD  |- 
     stack:   |int[0|0x0]    |                   |                |    <||@
  Comment 865 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 873 818 rax|DWORD = INC stack:52|DWORD size: DWORD  <||@
  Comment 879 820 (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ rax|DWORD size: DWORD  <||@
  Comment 880 822 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:29]  <||@
  Comment 880 [rsi:0, r10:0, stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29, duringCall: false, rethrow: false]
              |0             |1                  |2               |3 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |stack:52|DWORD  |- 
     stack:   |int[0|0x0]    |                   |                |    <||@
  Comment 880 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 883 824 CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 886 826 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B82  <||@
  Comment 892 block B81 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 892 828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 892 830 SAFEPOINT r11|QWORD config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd thread: r15 state [bci:29]  <||@
  Comment 899 [rsi:0, r10:0, stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29, duringCall: false, rethrow: false]
              |0             |1                  |2               |3 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |stack:52|DWORD  |- 
     stack:   |int[0|0x0]    |                   |                |    <||@
  Comment 899 {infopoint: SAFEPOINT}  <||@
  Comment 899 14  <||@
  Comment 902 832 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3  <||@
  Comment 906 834 r11|DWORD[.] = MOV [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 911 836 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3  <||@
  Comment 915 838 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 918 840 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 922 842 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 925 848 JUMP ~[] destination: B81 -> B22  <||@
  Comment 925 block B22 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 925 304 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 925 298 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/Number;, resolved>}  <||@
  Comment 925 {meta{HotSpotType<Ljava/lang/Number;, resolved>}}  <||@
  Comment 935 300 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 940 306 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 943 308 BRANCH trueDestinationProbability: 0.7174130347860855 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B72  <||@
  Comment 954 block B75 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 954 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 954 760 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 957 762 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 962 764 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26]  <||@
  Comment 962 9  <||@
  Comment 967 {HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)>}  <||@
  Comment 972 [stack:24, stack:32]at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:52|DWORD  |-   <||@
  Comment 973 766 JUMP ~[] destination: B75 -> B79  <||@
  Comment 975 block B77 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 975 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 975 776 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 978 778 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 983 780 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26]  <||@
  Comment 983 {HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)>}  <||@
  Comment 983 9  <||@
  Comment 988 [stack:24, stack:32]at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:52|DWORD  |-   <||@
  Comment 989 782 JUMP ~[] destination: B77 -> B79  <||@
  Comment 994 block B28 null  <||@
  Comment 994 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 994 366 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 999 368 CMP (x: r11|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1002 370 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 1008 block B30 null  <||@
  Comment 1008 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1008 380 rsi|QWORD = MOV [rax|QWORD + 40] size: QWORD  <||@
  Comment 1012 382 rdx|DWORD = MOV [rsi|QWORD] size: DWORD  <||@
  Comment 1014 384 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1020 386 JUMP ~[] destination: B30 -> B31  <||@
  Comment 1025 block B32 loop 1 depth 1 header:643|LoopBegin  <||@
  Comment 1025 394 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1040 396 r8|DWORD = SHL r10|DWORD y: 3 size: DWORD  <||@
  Comment 1047 398 r8|DWORD = LEA [r8|DWORD + 8] size: DWORD  <||@
  Comment 1051 400 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 1054 402 r8|QWORD = MOV [rsi|QWORD + r8|QWORD * 1] size: QWORD  <||@
  Comment 1058 404 CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1061 406 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B67  <||@
  Comment 1067 block B67 loop 1 depth 1 header:643|LoopBegin  <||@
  Comment 1067 702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1067 704 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 1070 706 JUMP ~[] destination: B67 -> B31  <||@
  Comment 1070 block B31 loop 1 depth 1 header:643|LoopBegin  <||@
  Comment 1070 388 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1070 390 CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1073 392 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B68  <||@
  Comment 1080 block B29 null  <||@
  Comment 1080 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1080 374 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1085 376 JUMP ~[] destination: B29 -> B34  <||@
  Comment 1090 block B68 null  <||@
  Comment 1090 708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1090 710 rax|DWORD = MOVE input: int[-102699|0xfffffffffffe6ed5]  <||@
  Comment 1095 712 JUMP ~[] destination: B68 -> B71  <||@
  Comment 1100 block B87 null  <||@
  Comment 1100 888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1100 890 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1105 892 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd  <||@
  Comment 1121 15  <||@
  Comment 1127 block B37 null  <||@
  Comment 1127 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1127 440 rax|QWORD[.] = LEA [r13|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1132 442 rax|DWORD[.] = MOV [rax|QWORD[.]] size: DWORD  <||@
  Comment 1134 444 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 0 shift: 3  <||@
  Comment 1138 446 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 1141 448 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B37 -> B42 falseDestination: B37 -> B39  <||@
  Comment 1147 block B39 null  <||@
  Comment 1147 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1147 458 rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1151 460 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1154 462 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 1160 block B41 null  <||@
  Comment 1160 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1160 476 r10|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1164 478 MOV (x: [rdx|QWORD + r10|QWORD * 1 - 8], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 1169 480 rax|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1173 482 MOV (x: [r15|QWORD + 56], y: rax|QWORD) size: QWORD  <||@
  Comment 1177 486 JUMP ~[] destination: B41 -> B42  <||@
  Comment 1182 block B23 null  <||@
  Comment 1182 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1182 312 rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1186 314 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1191 316 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1196 318 JUMP ~[] destination: B23 -> B24  <||@
  Comment 1201 block B48 null  <||@
  Comment 1201 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1201 542 MEMBAR barriers: 4  <||@
  Comment 1206 544 r10|DWORD = MOVSXB [rax|QWORD[*] + rsi|QWORD * 1] size: DWORD  <||@
  Comment 1211 546 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1214 548 BRANCH trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B53 falseDestination: B48 -> B50  <||@
  Comment 1225 block B33 null  <||@
  Comment 1225 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1225 410 MOV (x: [rax|QWORD + 32], y: r11|QWORD) size: QWORD  <||@
  Comment 1229 412 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1234 414 JUMP ~[] destination: B33 -> B34  <||@
  Comment 1239 block B13 null  <||@
  Comment 1239 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1239 186 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1244 188 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd  <||@
  Comment 1260 15  <||@
  Comment 1266 block B15 null  <||@
  Comment 1266 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1266 206 stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1271 208 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1276 210 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1279 212 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1284 214 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:12, 9, 26]  <||@
  Comment 1284 9  <||@
  Comment 1287 {HotSpotMethod<BoxesRunTime.equalsNumObject(Number, Object)>}  <||@
  Comment 1292 [stack:24, stack:32]at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:131) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|DWORD  |-   <||@
  Comment 1293 216 JUMP ~[] destination: B15 -> B19  <||@
  Comment 1298 block B8 null  <||@
  Comment 1298 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1298 86 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1303 88 rbx|QWORD = MOV [rcx|QWORD + 488] size: QWORD  <||@
  Comment 1310 90 rax|QWORD = MOV [rbx|QWORD + 56] size: QWORD  <||@
  Comment 1314 92 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1319 94 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:2]  <||@
  Comment 1319 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 1319 11  <||@
  Comment 1321 [stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |- 
     stack:   |stack:32|QWORD[.]  |                   |   |    <||@
  Comment 1322 96 r11|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1325 98 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1330 100 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1335 102 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1340 104 JUMP ~[] destination: B8 -> B9  <||@
  Comment 1345 block B7 null  <||@
  Comment 1345 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1345 64 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1350 70 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1355 72 rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0]  <||@
  Comment 1355 {Stub<identity_hashcode(Object)int>@0x7f522797fd00:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1360 [stack:24, stack:32]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-   <||@
  Comment 1361 74 r11|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1364 76 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1369 78 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1374 80 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1379 82 JUMP ~[] destination: B7 -> B9  <||@
  Comment 1384 block B17 null  <||@
  Comment 1384 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1384 230 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1387 232 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1392 234 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:28, 9, 26]  <||@
  Comment 1392 9  <||@
  Comment 1399 {HotSpotMethod<BoxesRunTime.equalsCharObject(Character, Object)>}  <||@
  Comment 1404 [stack:24, stack:32]at scala.runtime.BoxesRunTime.equals2(BoxesRunTime.java:133) [bci: 28, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.runtime.BoxesRunTime.equals(BoxesRunTime.java:123) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:48|DWORD  |-   <||@
  Comment 1405 236 JUMP ~[] destination: B17 -> B19  <||@
  Comment 1410 block B40 null  <||@
  Comment 1410 464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1410 466 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1413 468 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1413 {Stub<write_barrier_pre(Object)void>@0x7f522797ae80:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1419 472 JUMP ~[] destination: B40 -> B42  <||@
  Comment 1424 block B50 null  <||@
  Comment 1424 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1424 558 MOVB [rax|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1428 560 r10|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1432 562 rax|QWORD[*] = ADD (x: rax|QWORD[*], y: rsi|QWORD) size: QWORD  <||@
  Comment 1435 564 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1438 566 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52  <||@
  Comment 1444 block B52 null  <||@
  Comment 1444 578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1444 580 rsi|QWORD = MOV [r15|QWORD + 128] size: QWORD  <||@
  Comment 1451 582 MOV (x: [r10|QWORD + rsi|QWORD * 1 - 8], y: rax|QWORD[*]) size: QWORD  <||@
  Comment 1456 584 rax|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1460 586 MOV (x: [r15|QWORD + 112], y: rax|QWORD) size: QWORD  <||@
  Comment 1464 590 JUMP ~[] destination: B52 -> B53  <||@
  Comment 1469 block B85 null  <||@
  Comment 1469 870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1469 872 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1474 874 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd  <||@
  Comment 1490 15  <||@
  Comment 1496 block B55 null  <||@
  Comment 1496 610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1496 612 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1501 614 r11|QWORD = MOVE input: long[34359738368|0x800000000]  <||@
  Comment 1511 616 r8|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@aab4968 encoding: base: 34359738368 shift: 3  <||@
  Comment 1515 618 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>}  <||@
  Comment 1515 {meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>}}  <||@
  Comment 1525 620 CMP (x: r11|QWORD, y: [r8|QWORD + 32]) size: QWORD  <||@
  Comment 1529 622 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B63 falseDestination: B55 -> B57  <||@
  Comment 1535 block B57 null  <||@
  Comment 1535 628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1535 630 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed}  <||@
  Comment 1535 {meta{HotSpotType<Lscala/collection/mutable/FlatHashTable;, resolved>;compressed}}  <||@
  Comment 1542 632 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B63 falseDestination: B57 -> B59  <||@
  Comment 1548 block B59 null  <||@
  Comment 1548 638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1548 640 r10|QWORD = MOV [r8|QWORD + 40] size: QWORD  <||@
  Comment 1552 642 r9|DWORD = MOV [r10|QWORD] size: DWORD  <||@
  Comment 1555 644 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1560 646 JUMP ~[] destination: B59 -> B60  <||@
  Comment 1565 block B61 loop 2 depth 1 header:702|LoopBegin  <||@
  Comment 1565 654 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1568 656 rdi|DWORD = SHL rcx|DWORD y: 3 size: DWORD  <||@
  Comment 1573 658 rdi|DWORD = LEA [rdi|DWORD + 8] size: DWORD  <||@
  Comment 1576 660 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 1579 662 rdi|QWORD = MOV [r10|QWORD + rdi|QWORD * 1] size: QWORD  <||@
  Comment 1583 664 CMP (x: r11|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1586 666 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B64  <||@
  Comment 1592 block B64 loop 2 depth 1 header:702|LoopBegin  <||@
  Comment 1592 682 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1592 684 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 1594 686 JUMP ~[] destination: B64 -> B60  <||@
  Comment 1594 block B60 loop 2 depth 1 header:702|LoopBegin  <||@
  Comment 1594 648 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1594 650 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1597 652 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B65  <||@
  Comment 1604 block B63 null  <||@
  Comment 1604 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1604 676 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FlatHashTable.growTable()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd state [bci:104]  <||@
  Comment 1604 10  <||@
  Comment 1607 {HotSpotMethod<FlatHashTable.growTable()>}  <||@
  Comment 1612 []at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:164) [bci: 104, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1613 678 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1618 680 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@37a176fd  <||@
  Comment 1634 15  <||@
  Comment 1640 block B51 null  <||@
  Comment 1640 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1640 570 rsi|QWORD = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1643 572 - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 1643 {Stub<write_barrier_post(Word)void>@0x7f522797b580:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1649 576 JUMP ~[] destination: B51 -> B53  <||@
  Comment 1654 block B62 null  <||@
  Comment 1654 668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1654 670 MOV (x: [r8|QWORD + 32], y: r11|QWORD) size: QWORD  <||@
  Comment 1658 672 JUMP ~[] destination: B62 -> B63  <||@
  Comment 1660 block B82 null  <||@
  Comment 1660 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1660 852 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1665 854 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1670 856 MOV [r15|QWORD + 1004] y: -89627 size: DWORD  <||@
  Comment 1681 858 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 1692 860 DEOPT info [bci:29]  <||@
  Comment 1692 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f524d2f2da0, value=0x7f5227887084]:0x7f5227887084}  <||@
  Comment 1697 [rdx:0, rsi:0]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
     stack:   |int[0|0x0]    |              |           |    <||@
  Comment 1698 block B88 null  <||@
  Comment 1698 894 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1698 896 MOV [r15|QWORD + 1004] y: -80411 size: DWORD  <||@
  Comment 1709 898 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 1720 900 DEOPT info [bci:5]  <||@
  Comment 1720 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f524d2f2da0, value=0x7f5227887084]:0x7f5227887084}  <||@
  Comment 1725 [rdx:0, rsi:0]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 5, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |- 
     stack:   |rsi|QWORD[.]  |r11|DWORD     |   |    <||@
  Comment 1726 block B86 null  <||@
  Comment 1726 876 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1726 878 r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1731 880 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1736 882 MOV [r15|QWORD + 1004] y: -85275 size: DWORD  <||@
  Comment 1747 884 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 1758 886 DEOPT info [bci:29]  <||@
  Comment 1758 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f524d2f2da0, value=0x7f5227887084]:0x7f5227887084}  <||@
  Comment 1763 [rdx:0, rsi:0]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:156) [bci: 29, duringCall: false, rethrow: false]
              |0             |1             |2         |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r9|DWORD  |- 
     stack:   |int[0|0x0]    |              |          |    <||@
  Comment 1764 block B70 null  <||@
  Comment 1764 720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1764 722 rax|DWORD = MOVE input: int[-99099|0xfffffffffffe7ce5]  <||@
  Comment 1769 724 JUMP ~[] destination: B70 -> B71  <||@
  Comment 1774 block B89 null  <||@
  Comment 1774 902 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1774 904 MOV [r15|QWORD + 1004] y: -74803 size: DWORD  <||@
  Comment 1785 906 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 1796 908 DEOPT info [bci:0]  <||@
  Comment 1796 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f524d2f2da0, value=0x7f5227887084]:0x7f5227887084}  <||@
  Comment 1801 [rdx:0, rsi:0]at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:153) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 1802 block B65 null  <||@
  Comment 1802 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1802 690 MOV [r15|QWORD + 1004] y: -188449 size: DWORD  <||@
  Comment 1813 692 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 1824 694 DEOPT info [bci:5, 76]  <||@
  Comment 1824 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f524d2f2da0, value=0x7f5227887084]:0x7f5227887084}  <||@
  Comment 1829 [rsi:0]at scala.collection.mutable.HashSet.tableSize_$eq(HashSet.scala:41) [bci: 5, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rax|DWORD 
  at scala.collection.mutable.FlatHashTable.addEntry(FlatHashTable.scala:162) [bci: 76, duringCall: true, rethrow: false]
              |0             |1  |2          |3 
     locals:  |rsi|QWORD[.]  |-  |rbx|DWORD  |-   <||@
  Comment 1830 block B66 null  <||@
  Comment 1830 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1830 698 rax|DWORD = MOVE input: int[-104723|0xfffffffffffe66ed]  <||@
  Comment 1835 700 JUMP ~[] destination: B66 -> B71  <||@
  Comment 1840 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f5227976b80:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1840 4  <||@
  Comment 1846 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f524d2f2da8, value=0x7f5227886e20]:0x7f5227886e20}  <||@
  Comment 1846 5  <||@
  HexCodeFile>>> <|@
end_nmethod
