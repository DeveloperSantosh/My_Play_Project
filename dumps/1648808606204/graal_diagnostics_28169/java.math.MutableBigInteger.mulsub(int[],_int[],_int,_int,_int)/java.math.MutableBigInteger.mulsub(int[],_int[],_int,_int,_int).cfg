begin_compilation
  name " HotSpotCompilation-15269[java.math.MutableBigInteger.mulsub(int[], int[], int, int, int)]"
  method "HotSpotCompilation-15269[java.math.MutableBigInteger.mulsub(int[], int[], int, int, int)]"
  date 1648808612630
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid j11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:639) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j92 v233 v219 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 i12 i15 i97 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 21]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i15 i39 i56 i72 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$124/0x00000008401fc040@53b6a472
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 21]
stamp: i32
=== Inputs ===
x: i5 
y: i14 
=== Succesors ===
=== Usages ===
v104 v61 v245 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i5 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 26]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 i52 v61 i82 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 26]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@789d27d
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i23 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i15 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 26]
stamp: void
trueSuccessorProbability: 0.016491035992883537
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v62 #falseSuccessor: v63  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:650) [bci: 106]
stamp: void
=== Inputs ===
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v90  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
v62 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: i237 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i237  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [I
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?22 v247 v249 v246 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# [I
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?22 v245 v248 v244 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 j10 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
index: 5
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 i12 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<MutableBigInteger.mulsub(int[], int[], int, int, int)>
duringCall: false
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: MutableBigInteger.java
sourceLine: 638
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a3 i4 i5 i6 - - - - - - - - - 
=== Succesors ===
=== Usages ===
v219 i237 i238 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 i4 i5 i6 - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i237 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i237 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?7 
guard: - 
address: v244 
=== Succesors ===
next: v190 
=== Usages ===
v104 v137 
=== Predecessor ===
v63 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?7 guard: - address: v244 #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@2ef4ed05
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i237 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i15 y: i237  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v187 
falseSuccessor: v189 
=== Usages ===
=== Predecessor ===
i237 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v187 #falseSuccessor: v189  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: i238 
=== Usages ===
i239 
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i238  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i238 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:644) [bci: 49]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?7 
guard: - 
address: v246 
=== Succesors ===
next: v198 
=== Usages ===
v155 v128 
=== Predecessor ===
v187 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?7 guard: - address: v246 #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$124/0x00000008401fc040@53b6a472
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:640) [bci: 15]
stamp: i32
=== Inputs ===
x: i5 
y: i6 
=== Succesors ===
=== Usages ===
v247 v128 i72 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i5 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 65]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@2ef4ed05
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i12 
y: i238 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i12 y: i238  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 65]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v195 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
i238 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v195 #falseSuccessor: v197  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: i239 
=== Usages ===
v18 v135 i240 
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i239  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3 
index: i15 
=== Succesors ===
=== Usages ===
i239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v187 
address: v245 
=== Succesors ===
next: i240 
=== Usages ===
j66 
=== Predecessor ===
v195 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v187 address: v245 #next: i240  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2 
index: i12 
=== Succesors ===
=== Usages ===
v135 i240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:644) [bci: 49]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v195 
address: v247 
=== Succesors ===
next: v135 
=== Usages ===
j70 
=== Predecessor ===
i239 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v195 address: v247 #next: v135  <|@  <|@
f <@~|@floating>@ <|@
tid j70 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$127/0x00000008401fb040@5f399b27
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x00000008401fb440@42d0c80a
inputBits: 32
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:644) [bci: 50]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i240 
=== Succesors ===
=== Usages ===
j71 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i240  <|@  <|@
f <@~|@floating>@ <|@
tid j10 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$129/0x00000008401fa840@1badfe5b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x00000008401fac40@8debeaa
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 5]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i4 
=== Succesors ===
=== Usages ===
?22 j34 j67 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j66 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$129/0x00000008401fa840@1badfe5b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x00000008401fac40@8debeaa
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 37]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i239 
=== Succesors ===
=== Usages ===
j67 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i239  <|@  <|@
f <@~|@floating>@ <|@
tid j67 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$164/0x00000008402b5040@24e952d
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 40]
stamp: i64
=== Inputs ===
x: j10 
y: j66 
=== Succesors ===
=== Usages ===
i78 j71 j76 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j10 y: j66  <|@  <|@
f <@~|@floating>@ <|@
tid j71 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$209/0x0000000840325440@29ae8d87
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:644) [bci: 53]
stamp: i64
=== Inputs ===
x: j70 
y: j67 
=== Succesors ===
=== Usages ===
i73 j77 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j70 y: j67  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$185/0x00000008402e1c40@79c40c7d
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$186/0x00000008402e2040@3267d2a7
inputBits: 64
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 64]
resultBits: 32
stamp: i32
=== Inputs ===
value: j71 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 65]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v195 
address: v247 
value: i73 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
i240 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v195 address: v247 value: i73 stateAfter: - lastLocationAccess: - #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:646) [bci: 68]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j44 j76 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j76 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$173/0x00000008402b2040@ce1d94a
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:646) [bci: 70]
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
x: j67 
y: i43 
=== Succesors ===
=== Usages ===
j84 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j67 y: i43  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$185/0x00000008402e1c40@79c40c7d
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$186/0x00000008402e2040@3267d2a7
inputBits: 64
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 79]
resultBits: 32
stamp: i32
=== Inputs ===
value: j67 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j67  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NotNode$$Lambda$831/0x000000084074e040@3aece9f7
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 81]
stamp: i32
=== Inputs ===
value: i78 
=== Succesors ===
=== Usages ===
j80 
=== Predecessor ===
- >@ <|@
instruction <@Not|@org.graalvm.compiler.nodes.calc.NotNode>@ value: i78  <|@  <|@
f <@~|@floating>@ <|@
tid j80 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$129/0x00000008401fa840@1badfe5b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x00000008401fac40@8debeaa
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 86]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i79 
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i79  <|@  <|@
f <@~|@floating>@ <|@
tid j9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 2]
rawvalue: 4294967295
stableDimension: 0
stamp: i64 [4294967295] ⇊00000000ffffffff ⇈00000000ffffffff
stampKind: i64
value: long[4294967295|0xffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j45 j77 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j77 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$123/0x00000008401fdc40@772c3b6d
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 76]
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
x: j71 
y: j9 
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j71 y: j9  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 88]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@2ef4ed05
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j80 
y: j77 
=== Succesors ===
=== Usages ===
i82 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j80 y: j77  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 20]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i52 i82 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 88]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v81 
trueValue: i13 
falseValue: i23 
=== Succesors ===
=== Usages ===
j83 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v81 trueValue: i13 falseValue: i23  <|@  <|@
f <@~|@floating>@ <|@
tid j83 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$129/0x00000008401fa840@1badfe5b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x00000008401fac40@8debeaa
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:648) [bci: 96]
resultBits: 64
stamp: i64 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i82 
=== Succesors ===
=== Usages ===
j84 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i82  <|@  <|@
f <@~|@floating>@ <|@
tid j84 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$124/0x00000008401fc040@53b6a472
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:648) [bci: 97]
stamp: i64 [0 - 4294967296] ⇈00000001ffffffff
=== Inputs ===
x: j76 
y: j83 
=== Succesors ===
=== Usages ===
j94 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j76 y: j83  <|@  <|@
f <@~|@floating>@ <|@
tid i72 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$124/0x00000008401fc040@53b6a472
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 59]
stamp: i32
=== Inputs ===
x: i12 
y: i14 
=== Succesors ===
=== Usages ===
i93 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i12 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 100]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$124/0x00000008401fc040@53b6a472
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 100]
stamp: i32
=== Inputs ===
x: i5 
y: i96 
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i5 y: i96  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
v135 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B6" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v18 
values: i97 i56 
=== Succesors ===
=== Usages ===
?22 v24 v248 v137 i56 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v18 values: i97 i56  <|@  <|@
f <@~|@floating>@ <|@
tid j94 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 4294967296] ⇈00000001ffffffff
valueDescription: i64
=== Inputs ===
merge: v18 
values: j84 j55 
=== Succesors ===
=== Usages ===
?22 j92 j35 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v18 values: j84 j55  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v18 
values: i72 i39 
=== Succesors ===
=== Usages ===
?22 v155 i39 v249 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v18 values: i72 i39  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 59.63900414937759
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: v195 
ends: v17 
=== Succesors ===
next: v30 
=== Usages ===
i95 j94 i93 v26 v57 v211 v206 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: v195 ends: v17 #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 26]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@789d27d
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i95 
y: i23 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i95 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 26]
stamp: void
trueSuccessorProbability: 0.016491035992883537
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v26 
falseSuccessor: v29 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v26 #falseSuccessor: v29  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606887792252088515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:650) [bci: 106]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v18 
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v18 #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
v26 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j92 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 4294967296] ⇈00000001ffffffff
valueDescription: i64
=== Inputs ===
merge: v88 
values: j94 j11 
=== Succesors ===
=== Usages ===
i58 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v88 values: j94 j11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v89 v90 
=== Succesors ===
next: v59 
=== Usages ===
j92 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v89 v90 #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$185/0x00000008402e1c40@79c40c7d
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$186/0x00000008402e2040@3267d2a7
inputBits: 64
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:650) [bci: 108]
resultBits: 32
stamp: i32
=== Inputs ===
value: j92 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j92  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:650) [bci: 109]
stamp: void
=== Inputs ===
result: i58 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i58 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@2ef4ed05
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i95 
y: i237 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i95 y: i237  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v137 
=== Succesors ===
trueSuccessor: v203 
falseSuccessor: v206 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v137 #trueSuccessor: v203 #falseSuccessor: v206  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
i241 
=== Predecessor ===
v207 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 65]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@2ef4ed05
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i93 
y: i238 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i93 y: i238  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 65]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v155 
=== Succesors ===
trueSuccessor: v208 
falseSuccessor: v211 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v155 #trueSuccessor: v208 #falseSuccessor: v211  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: i241 
=== Usages ===
i242 v162 
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i241  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3 
index: i95 
=== Succesors ===
=== Usages ===
i241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i241 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v203 
address: v248 
=== Succesors ===
next: i242 
=== Usages ===
j33 
=== Predecessor ===
v208 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v203 address: v248 #next: i242  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2 
index: i93 
=== Succesors ===
=== Usages ===
v162 i242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i93  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:644) [bci: 49]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v208 
address: v249 
=== Succesors ===
next: v162 
=== Usages ===
j37 
=== Predecessor ===
i241 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v208 address: v249 #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid j37 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$127/0x00000008401fb040@5f399b27
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x00000008401fb440@42d0c80a
inputBits: 32
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:644) [bci: 50]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i242 
=== Succesors ===
=== Usages ===
j38 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i242  <|@  <|@
f <@~|@floating>@ <|@
tid j33 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$129/0x00000008401fa840@1badfe5b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x00000008401fac40@8debeaa
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 37]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i241 
=== Succesors ===
=== Usages ===
j34 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i241  <|@  <|@
f <@~|@floating>@ <|@
tid j34 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$164/0x00000008402b5040@24e952d
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 40]
stamp: i64
=== Inputs ===
x: j10 
y: j33 
=== Succesors ===
=== Usages ===
j35 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j10 y: j33  <|@  <|@
f <@~|@floating>@ <|@
tid j35 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$124/0x00000008401fc040@53b6a472
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 43]
stamp: i64
=== Inputs ===
x: j34 
y: j94 
=== Succesors ===
=== Usages ===
j38 i46 j44 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j34 y: j94  <|@  <|@
f <@~|@floating>@ <|@
tid j38 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$209/0x0000000840325440@29ae8d87
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:644) [bci: 53]
stamp: i64
=== Inputs ===
x: j37 
y: j35 
=== Succesors ===
=== Usages ===
i40 j45 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j37 y: j35  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$185/0x00000008402e1c40@79c40c7d
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$186/0x00000008402e2040@3267d2a7
inputBits: 64
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 64]
resultBits: 32
stamp: i32
=== Inputs ===
value: j38 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 65]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v208 
address: v249 
value: i40 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
i242 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v208 address: v249 value: i40 stateAfter: - lastLocationAccess: - #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid j44 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$173/0x00000008402b2040@ce1d94a
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:646) [bci: 70]
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
x: j35 
y: i43 
=== Succesors ===
=== Usages ===
j55 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j35 y: i43  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$185/0x00000008402e1c40@79c40c7d
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$186/0x00000008402e2040@3267d2a7
inputBits: 64
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 79]
resultBits: 32
stamp: i32
=== Inputs ===
value: j35 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j35  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NotNode$$Lambda$831/0x000000084074e040@3aece9f7
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 81]
stamp: i32
=== Inputs ===
value: i46 
=== Succesors ===
=== Usages ===
j49 
=== Predecessor ===
- >@ <|@
instruction <@Not|@org.graalvm.compiler.nodes.calc.NotNode>@ value: i46  <|@  <|@
f <@~|@floating>@ <|@
tid j49 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$129/0x00000008401fa840@1badfe5b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x00000008401fac40@8debeaa
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 86]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i47 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i47  <|@  <|@
f <@~|@floating>@ <|@
tid j45 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$123/0x00000008401fdc40@772c3b6d
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 76]
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
x: j38 
y: j9 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j38 y: j9  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 88]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@2ef4ed05
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j49 
y: j45 
=== Succesors ===
=== Usages ===
i52 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j49 y: j45  <|@  <|@
f <@~|@floating>@ <|@
tid i52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 88]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v51 
trueValue: i13 
falseValue: i23 
=== Succesors ===
=== Usages ===
j54 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v51 trueValue: i13 falseValue: i23  <|@  <|@
f <@~|@floating>@ <|@
tid j54 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$129/0x00000008401fa840@1badfe5b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x00000008401fac40@8debeaa
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:648) [bci: 96]
resultBits: 64
stamp: i64 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i52 
=== Succesors ===
=== Usages ===
j55 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i52  <|@  <|@
f <@~|@floating>@ <|@
tid j55 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$124/0x00000008401fc040@53b6a472
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:648) [bci: 97]
stamp: i64 [0 - 4294967296] ⇈00000001ffffffff
=== Inputs ===
x: j44 
y: j54 
=== Succesors ===
=== Usages ===
j94 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j44 y: j54  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$124/0x00000008401fc040@53b6a472
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 59]
stamp: i32
=== Inputs ===
x: i93 
y: i14 
=== Succesors ===
=== Usages ===
i93 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i93 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i56 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$124/0x00000008401fc040@53b6a472
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 100]
stamp: i32
=== Inputs ===
x: i95 
y: i14 
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i95 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v18 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v18 
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v18 #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -39963
stableDimension: 0
stamp: i32 [-39963] ⇊00000000ffff63e5 ⇈00000000ffff63e5
stampKind: i32
value: int[-39963|0xffffffffffff63e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i231 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
v211 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v18 
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v18 #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -35355
stableDimension: 0
stamp: i32 [-35355] ⇊00000000ffff75e5 ⇈00000000ffff75e5
stampKind: i32
value: int[-35355|0xffffffffffff75e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i231 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
v206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i231 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-39963 - -35355] ⇊00000000ffff61e5 ⇈00000000ffff77e5
valueDescription: i32
=== Inputs ===
merge: v228 
values: i230 i235 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v228 values: i230 i235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v229 v234 
=== Succesors ===
next: v233 
=== Usages ===
i231 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v229 v234 #next: v233  <|@  <|@
tid ?22 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<MutableBigInteger.mulsub(int[], int[], int, int, int)>
duringCall: false
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: MutableBigInteger.java
sourceLine: 642
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a3 - - i93 j10 - j94 - i95 - - - - 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 - - i93 j10 - j94 - i95 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
stamp: void
=== Inputs ===
stateBefore: ?22 
actionAndReason: i231 
speculation: j11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?22 actionAndReason: i231 speculation: j11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -33051
stableDimension: 0
stamp: i32 [-33051] ⇊00000000ffff7ee5 ⇈00000000ffff7ee5
stampKind: i32
value: int[-33051|0xffffffffffff7ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
v197 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid i223 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -26907
stableDimension: 0
stamp: i32 [-26907] ⇊00000000ffff96e5 ⇈00000000ffff96e5
stampKind: i32
value: int[-26907|0xffffffffffff96e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
v189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i217 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-33051 - -25355] ⇊00000000ffff04e5 ⇈00000000fffffef5
valueDescription: i32
=== Inputs ===
merge: v214 
values: i223 i227 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v214 values: i223 i227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v222 v226 
=== Succesors ===
next: v219 
=== Usages ===
i217 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v222 v226 #next: v219  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
stamp: void
=== Inputs ===
stateBefore: ?7 
actionAndReason: i217 
speculation: j11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?7 actionAndReason: i217 speculation: j11  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v6|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v7|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = ADD (x: v4|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v1|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD [v0|QWORD[.] + v8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = IMUL (x: v11|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SUB (x: v10|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + v8|DWORD * 4 + 16], y: v14|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = SHR v13|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV v13|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = NOT v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = AND (x: v14|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SETCC condition: |>| <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = ADD (x: v15|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = DEC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v3|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD, v23|QWORD, v24|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV [v1|QWORD[.] + v26|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD [v0|QWORD[.] + v28|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = IMUL (x: v33|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = ADD (x: v34|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SUB (x: v32|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + v28|DWORD * 4 + 16], y: v36|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = SHR v35|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV v35|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = NOT v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV v39|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = AND (x: v36|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SETCC condition: |>| <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v37|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = DEC v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD, v44|QWORD, v45|DWORD] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B6" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD, v27|QWORD, v28|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v26|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606887792252088515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV v29|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33051|0xffffffffffff7ee5]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-39963|0xffffffffffff63e5]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - v0|QWORD[.] v1|QWORD[.] - - v28|DWORD v11|QWORD - v27|QWORD - v26|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-35355|0xffffffffffff75e5]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-26907|0xffffffffffff96e5]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid j11 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:639) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j92 v233 v219 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 i12 i15 i97 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 21]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i15 i39 i56 i72 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$124/0x00000008401fc040@53b6a472
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 21]
stamp: i32
=== Inputs ===
x: i5 
y: i14 
=== Succesors ===
=== Usages ===
v104 v61 v245 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i5 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 26]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 i52 v61 i82 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 26]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@789d27d
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i23 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i15 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 26]
stamp: void
trueSuccessorProbability: 0.016491035992883537
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v62 #falseSuccessor: v63  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:650) [bci: 106]
stamp: void
=== Inputs ===
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v90  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
v62 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: i237 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i237  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [I
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?22 v247 v249 v246 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# [I
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?22 v245 v248 v244 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 j10 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
index: 5
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 i12 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<MutableBigInteger.mulsub(int[], int[], int, int, int)>
duringCall: false
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: MutableBigInteger.java
sourceLine: 638
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a3 i4 i5 i6 - - - - - - - - - 
=== Succesors ===
=== Usages ===
v219 i237 i238 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 i4 i5 i6 - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i237 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i237 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?7 
guard: - 
address: v244 
=== Succesors ===
next: v190 
=== Usages ===
v104 v137 
=== Predecessor ===
v63 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?7 guard: - address: v244 #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@2ef4ed05
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i237 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i15 y: i237  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v187 
falseSuccessor: v189 
=== Usages ===
=== Predecessor ===
i237 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v187 #falseSuccessor: v189  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v6|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: i238 
=== Usages ===
i239 
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i238  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i238 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:644) [bci: 49]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?7 
guard: - 
address: v246 
=== Succesors ===
next: v198 
=== Usages ===
v155 v128 
=== Predecessor ===
v187 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?7 guard: - address: v246 #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$124/0x00000008401fc040@53b6a472
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:640) [bci: 15]
stamp: i32
=== Inputs ===
x: i5 
y: i6 
=== Succesors ===
=== Usages ===
v247 v128 i72 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i5 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 65]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@2ef4ed05
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i12 
y: i238 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i12 y: i238  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 65]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v195 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
i238 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v195 #falseSuccessor: v197  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v7|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = ADD (x: v4|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: i239 
=== Usages ===
v18 v135 i240 
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i239  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
result [v1|QWORD[.] + v5|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3 
index: i15 
=== Succesors ===
=== Usages ===
i239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i239 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v187 
address: v245 
=== Succesors ===
next: i240 
=== Usages ===
j66 
=== Predecessor ===
v195 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v187 address: v245 #next: i240  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
result [v0|QWORD[.] + v8|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2 
index: i12 
=== Succesors ===
=== Usages ===
v135 i240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i240 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:644) [bci: 49]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v195 
address: v247 
=== Succesors ===
next: v135 
=== Usages ===
j70 
=== Predecessor ===
i239 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v195 address: v247 #next: v135  <|@  <|@
f <@~|@floating>@ <|@
tid j70 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$127/0x00000008401fb040@5f399b27
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x00000008401fb440@42d0c80a
inputBits: 32
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:644) [bci: 50]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i240 
=== Succesors ===
=== Usages ===
j71 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i240  <|@  <|@
f <@~|@floating>@ <|@
tid j10 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$129/0x00000008401fa840@1badfe5b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x00000008401fac40@8debeaa
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 5]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i4 
=== Succesors ===
=== Usages ===
?22 j34 j67 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j66 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$129/0x00000008401fa840@1badfe5b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x00000008401fac40@8debeaa
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 37]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i239 
=== Succesors ===
=== Usages ===
j67 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i239  <|@  <|@
f <@~|@floating>@ <|@
tid j67 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$164/0x00000008402b5040@24e952d
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 40]
stamp: i64
=== Inputs ===
x: j10 
y: j66 
=== Succesors ===
=== Usages ===
i78 j71 j76 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j10 y: j66  <|@  <|@
f <@~|@floating>@ <|@
tid j71 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$209/0x0000000840325440@29ae8d87
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:644) [bci: 53]
stamp: i64
=== Inputs ===
x: j70 
y: j67 
=== Succesors ===
=== Usages ===
i73 j77 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j70 y: j67  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$185/0x00000008402e1c40@79c40c7d
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$186/0x00000008402e2040@3267d2a7
inputBits: 64
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 64]
resultBits: 32
stamp: i32
=== Inputs ===
value: j71 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v135 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@e4396551 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 65]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v195 
address: v247 
value: i73 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
i240 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v195 address: v247 value: i73 stateAfter: - lastLocationAccess: - #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result int[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:646) [bci: 68]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j44 j76 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j76 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$173/0x00000008402b2040@ce1d94a
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:646) [bci: 70]
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
x: j67 
y: i43 
=== Succesors ===
=== Usages ===
j84 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j67 y: i43  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$185/0x00000008402e1c40@79c40c7d
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$186/0x00000008402e2040@3267d2a7
inputBits: 64
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 79]
resultBits: 32
stamp: i32
=== Inputs ===
value: j67 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j67  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NotNode$$Lambda$831/0x000000084074e040@3aece9f7
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 81]
stamp: i32
=== Inputs ===
value: i78 
=== Succesors ===
=== Usages ===
j80 
=== Predecessor ===
- >@ <|@
instruction <@Not|@org.graalvm.compiler.nodes.calc.NotNode>@ value: i78  <|@  <|@
f <@~|@floating>@ <|@
tid j80 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$129/0x00000008401fa840@1badfe5b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x00000008401fac40@8debeaa
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 86]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i79 
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i79  <|@  <|@
f <@~|@floating>@ <|@
tid j9 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 2]
rawvalue: 4294967295
stableDimension: 0
stamp: i64 [4294967295] ⇊00000000ffffffff ⇈00000000ffffffff
stampKind: i64
value: long[4294967295|0xffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j45 j77 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j77 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$123/0x00000008401fdc40@772c3b6d
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 76]
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
x: j71 
y: j9 
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j71 y: j9  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 88]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@2ef4ed05
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j80 
y: j77 
=== Succesors ===
=== Usages ===
i82 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j80 y: j77  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 20]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i52 i82 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 88]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v81 
trueValue: i13 
falseValue: i23 
=== Succesors ===
=== Usages ===
j83 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v81 trueValue: i13 falseValue: i23  <|@  <|@
f <@~|@floating>@ <|@
tid j83 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$129/0x00000008401fa840@1badfe5b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x00000008401fac40@8debeaa
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:648) [bci: 96]
resultBits: 64
stamp: i64 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i82 
=== Succesors ===
=== Usages ===
j84 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i82  <|@  <|@
f <@~|@floating>@ <|@
tid j84 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$124/0x00000008401fc040@53b6a472
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:648) [bci: 97]
stamp: i64 [0 - 4294967296] ⇈00000001ffffffff
=== Inputs ===
x: j76 
y: j83 
=== Succesors ===
=== Usages ===
j94 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j76 y: j83  <|@  <|@
f <@~|@floating>@ <|@
tid i72 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$124/0x00000008401fc040@53b6a472
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 59]
stamp: i32
=== Inputs ===
x: i12 
y: i14 
=== Succesors ===
=== Usages ===
i93 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i12 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 100]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$124/0x00000008401fc040@53b6a472
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 100]
stamp: i32
=== Inputs ===
x: i5 
y: i96 
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i5 y: i96  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
v135 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v1|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD [v0|QWORD[.] + v8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = IMUL (x: v11|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SUB (x: v10|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + v8|DWORD * 4 + 16], y: v14|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = SHR v13|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV v13|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = NOT v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = AND (x: v14|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SETCC condition: |>| <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = ADD (x: v15|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = DEC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v3|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD, v23|QWORD, v24|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B6" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i95 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v18 
values: i97 i56 
=== Succesors ===
=== Usages ===
?22 v24 v248 v137 i56 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v18 values: i97 i56  <|@  <|@
f <@~|@floating>@ <|@
tid j94 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 4294967296] ⇈00000001ffffffff
valueDescription: i64
=== Inputs ===
merge: v18 
values: j84 j55 
=== Succesors ===
=== Usages ===
?22 j92 j35 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v18 values: j84 j55  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v18 
values: i72 i39 
=== Succesors ===
=== Usages ===
?22 v155 i39 v249 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v18 values: i72 i39  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 59.63900414937759
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: v195 
ends: v17 
=== Succesors ===
next: v30 
=== Usages ===
i95 j94 i93 v26 v57 v211 v206 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: v195 ends: v17 #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 26]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@789d27d
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i95 
y: i23 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i95 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 26]
stamp: void
trueSuccessorProbability: 0.016491035992883537
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v26 
falseSuccessor: v29 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v26 #falseSuccessor: v29  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD, v27|QWORD, v28|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v26|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606887792252088515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:650) [bci: 106]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v18 
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v18 #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
v26 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j92 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 4294967296] ⇈00000001ffffffff
valueDescription: i64
=== Inputs ===
merge: v88 
values: j94 j11 
=== Succesors ===
=== Usages ===
i58 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v88 values: j94 j11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v89 v90 
=== Succesors ===
next: v59 
=== Usages ===
j92 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v89 v90 #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$185/0x00000008402e1c40@79c40c7d
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$186/0x00000008402e2040@3267d2a7
inputBits: 64
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:650) [bci: 108]
resultBits: 32
stamp: i32
=== Inputs ===
value: j92 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j92  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:650) [bci: 109]
stamp: void
=== Inputs ===
result: i58 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i58 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV v29|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@2ef4ed05
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i95 
y: i237 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i95 y: i237  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v137 
=== Succesors ===
trueSuccessor: v203 
falseSuccessor: v206 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v137 #trueSuccessor: v203 #falseSuccessor: v206  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
i241 
=== Predecessor ===
v207 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 65]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@2ef4ed05
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i93 
y: i238 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i93 y: i238  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 65]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v155 
=== Succesors ===
trueSuccessor: v208 
falseSuccessor: v211 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v155 #trueSuccessor: v208 #falseSuccessor: v211  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: i241 
=== Usages ===
i242 v162 
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i241  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
result [v1|QWORD[.] + v26|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3 
index: i95 
=== Succesors ===
=== Usages ===
i241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i241 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v203 
address: v248 
=== Succesors ===
next: i242 
=== Usages ===
j33 
=== Predecessor ===
v208 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v203 address: v248 #next: i242  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
result [v0|QWORD[.] + v28|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2 
index: i93 
=== Succesors ===
=== Usages ===
v162 i242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i93  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i242 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:644) [bci: 49]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v208 
address: v249 
=== Succesors ===
next: v162 
=== Usages ===
j37 
=== Predecessor ===
i241 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v208 address: v249 #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid j37 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$127/0x00000008401fb040@5f399b27
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$128/0x00000008401fb440@42d0c80a
inputBits: 32
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:644) [bci: 50]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i242 
=== Succesors ===
=== Usages ===
j38 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i242  <|@  <|@
f <@~|@floating>@ <|@
tid j33 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$129/0x00000008401fa840@1badfe5b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x00000008401fac40@8debeaa
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 37]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i241 
=== Succesors ===
=== Usages ===
j34 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i241  <|@  <|@
f <@~|@floating>@ <|@
tid j34 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$164/0x00000008402b5040@24e952d
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 40]
stamp: i64
=== Inputs ===
x: j10 
y: j33 
=== Succesors ===
=== Usages ===
j35 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j10 y: j33  <|@  <|@
f <@~|@floating>@ <|@
tid j35 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$124/0x00000008401fc040@53b6a472
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 43]
stamp: i64
=== Inputs ===
x: j34 
y: j94 
=== Succesors ===
=== Usages ===
j38 i46 j44 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j34 y: j94  <|@  <|@
f <@~|@floating>@ <|@
tid j38 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$209/0x0000000840325440@29ae8d87
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:644) [bci: 53]
stamp: i64
=== Inputs ===
x: j37 
y: j35 
=== Succesors ===
=== Usages ===
i40 j45 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j37 y: j35  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$185/0x00000008402e1c40@79c40c7d
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$186/0x00000008402e2040@3267d2a7
inputBits: 64
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 64]
resultBits: 32
stamp: i32
=== Inputs ===
value: j38 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v162 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@e4396551 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 65]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v208 
address: v249 
value: i40 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
i242 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v208 address: v249 value: i40 stateAfter: - lastLocationAccess: - #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid j44 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$173/0x00000008402b2040@ce1d94a
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:646) [bci: 70]
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
x: j35 
y: i43 
=== Succesors ===
=== Usages ===
j55 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j35 y: i43  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$185/0x00000008402e1c40@79c40c7d
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$186/0x00000008402e2040@3267d2a7
inputBits: 64
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 79]
resultBits: 32
stamp: i32
=== Inputs ===
value: j35 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j35  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NotNode$$Lambda$831/0x000000084074e040@3aece9f7
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 81]
stamp: i32
=== Inputs ===
value: i46 
=== Succesors ===
=== Usages ===
j49 
=== Predecessor ===
- >@ <|@
instruction <@Not|@org.graalvm.compiler.nodes.calc.NotNode>@ value: i46  <|@  <|@
f <@~|@floating>@ <|@
tid j49 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$129/0x00000008401fa840@1badfe5b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x00000008401fac40@8debeaa
inputAlwaysPositive: false
inputBits: 32
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 86]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i47 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i47  <|@  <|@
f <@~|@floating>@ <|@
tid j45 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$123/0x00000008401fdc40@772c3b6d
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 76]
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
x: j38 
y: j9 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j38 y: j9  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 88]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@2ef4ed05
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j49 
y: j45 
=== Succesors ===
=== Usages ===
i52 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j49 y: j45  <|@  <|@
f <@~|@floating>@ <|@
tid i52 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:647) [bci: 88]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v51 
trueValue: i13 
falseValue: i23 
=== Succesors ===
=== Usages ===
j54 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v51 trueValue: i13 falseValue: i23  <|@  <|@
f <@~|@floating>@ <|@
tid j54 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$129/0x00000008401fa840@1badfe5b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$130/0x00000008401fac40@8debeaa
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:648) [bci: 96]
resultBits: 64
stamp: i64 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i52 
=== Succesors ===
=== Usages ===
j55 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i52  <|@  <|@
f <@~|@floating>@ <|@
tid j55 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$124/0x00000008401fc040@53b6a472
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:648) [bci: 97]
stamp: i64 [0 - 4294967296] ⇈00000001ffffffff
=== Inputs ===
x: j44 
y: j54 
=== Succesors ===
=== Usages ===
j94 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j44 y: j54  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$124/0x00000008401fc040@53b6a472
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 59]
stamp: i32
=== Inputs ===
x: i93 
y: i14 
=== Succesors ===
=== Usages ===
i93 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i93 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i56 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$124/0x00000008401fc040@53b6a472
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 100]
stamp: i32
=== Inputs ===
x: i95 
y: i14 
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i95 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v18 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV [v1|QWORD[.] + v26|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD [v0|QWORD[.] + v28|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = IMUL (x: v33|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = ADD (x: v34|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SUB (x: v32|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + v28|DWORD * 4 + 16], y: v36|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = SHR v35|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV v35|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = NOT v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV v39|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = AND (x: v36|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SETCC condition: |>| <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v37|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = DEC v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD, v44|QWORD, v45|DWORD] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v18 
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v18 #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
result int[-39963|0xffffffffffff63e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -39963
stableDimension: 0
stamp: i32 [-39963] ⇊00000000ffff63e5 ⇈00000000ffff63e5
stampKind: i32
value: int[-39963|0xffffffffffff63e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i231 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
v211 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-39963|0xffffffffffff63e5]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v18 
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v18 #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
result int[-35355|0xffffffffffff75e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -35355
stableDimension: 0
stamp: i32 [-35355] ⇊00000000ffff75e5 ⇈00000000ffff75e5
stampKind: i32
value: int[-35355|0xffffffffffff75e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i231 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
v206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-35355|0xffffffffffff75e5]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i231 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-39963 - -35355] ⇊00000000ffff61e5 ⇈00000000ffff77e5
valueDescription: i32
=== Inputs ===
merge: v228 
values: i230 i235 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v228 values: i230 i235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v229 v234 
=== Succesors ===
next: v233 
=== Usages ===
i231 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v229 v234 #next: v233  <|@  <|@
tid ?22 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<MutableBigInteger.mulsub(int[], int[], int, int, int)>
duringCall: false
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: MutableBigInteger.java
sourceLine: 642
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a3 - - i93 j10 - j94 - i95 - - - - 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 - - i93 j10 - j94 - i95 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
stamp: void
=== Inputs ===
stateBefore: ?22 
actionAndReason: i231 
speculation: j11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?22 actionAndReason: i231 speculation: j11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - v0|QWORD[.] v1|QWORD[.] - - v28|DWORD v11|QWORD - v27|QWORD - v26|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:645) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
result int[-33051|0xffffffffffff7ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -33051
stableDimension: 0
stamp: i32 [-33051] ⇊00000000ffff7ee5 ⇈00000000ffff7ee5
stampKind: i32
value: int[-33051|0xffffffffffff7ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
v197 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33051|0xffffffffffff7ee5]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid i223 <|@
result int[-26907|0xffffffffffff96e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -26907
stableDimension: 0
stamp: i32 [-26907] ⇊00000000ffff96e5 ⇈00000000ffff96e5
stampKind: i32
value: int[-26907|0xffffffffffff96e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
v189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-26907|0xffffffffffff96e5]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i217 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-33051 - -25355] ⇊00000000ffff04e5 ⇈00000000fffffef5
valueDescription: i32
=== Inputs ===
merge: v214 
values: i223 i227 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v214 values: i223 i227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v222 v226 
=== Succesors ===
next: v219 
=== Usages ===
i217 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v222 v226 #next: v219  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:643) [bci: 32]
stamp: void
=== Inputs ===
stateBefore: ?7 
actionAndReason: i217 
speculation: j11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?7 actionAndReason: i217 speculation: j11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v6|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v7|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = ADD (x: v4|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v1|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD [v0|QWORD[.] + v8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = IMUL (x: v11|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SUB (x: v10|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + v8|DWORD * 4 + 16], y: v14|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = SHR v13|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV v13|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = NOT v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = AND (x: v14|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SETCC condition: |>| <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = ADD (x: v15|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = DEC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v3|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD, v23|QWORD, v24|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV [v1|QWORD[.] + v26|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD [v0|QWORD[.] + v28|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = IMUL (x: v33|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = ADD (x: v34|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SUB (x: v32|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + v28|DWORD * 4 + 16], y: v36|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = SHR v35|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV v35|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = NOT v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV v39|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = AND (x: v36|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SETCC condition: |>| <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v37|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = DEC v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD, v44|QWORD, v45|DWORD] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B6" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD, v27|QWORD, v28|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v26|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606887792252088515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV v29|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33051|0xffffffffffff7ee5]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-39963|0xffffffffffff63e5]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - v0|QWORD[.] v1|QWORD[.] - - v28|DWORD v11|QWORD - v27|QWORD - v26|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-35355|0xffffffffffff75e5]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-26907|0xffffffffffff96e5]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v6|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v7|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = ADD (x: v4|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v1|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD [v0|QWORD[.] + v8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = IMUL (x: v11|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SUB (x: v10|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + v8|DWORD * 4 + 16], y: v14|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = SHR v13|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV v13|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = NOT v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = AND (x: v14|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SETCC condition: |>| <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = ADD (x: v15|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = DEC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v3|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD, v23|QWORD, v24|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV [v1|QWORD[.] + v26|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD [v0|QWORD[.] + v28|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = IMUL (x: v33|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = ADD (x: v34|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SUB (x: v32|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + v28|DWORD * 4 + 16], y: v36|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = SHR v35|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV v35|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = NOT v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV v39|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = AND (x: v36|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SETCC condition: |>| <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v37|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = DEC v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD, v44|QWORD, v45|DWORD] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B6" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD, v27|QWORD, v28|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v26|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606887792252088515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV v29|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33051|0xffffffffffff7ee5]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-39963|0xffffffffffff63e5]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - v0|QWORD[.] v1|QWORD[.] - - v28|DWORD v11|QWORD - v27|QWORD - v26|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-35355|0xffffffffffff75e5]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-26907|0xffffffffffff96e5]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v6|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v7|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = ADD (x: v4|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v1|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD [v0|QWORD[.] + v8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = IMUL (x: v11|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SUB (x: v10|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + v8|DWORD * 4 + 16], y: v14|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = SHR v13|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV v13|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = NOT v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = AND (x: v14|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SETCC condition: |>| <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = ADD (x: v15|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = DEC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v3|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD, v23|QWORD, v24|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV [v1|QWORD[.] + v26|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD [v0|QWORD[.] + v28|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = IMUL (x: v33|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = ADD (x: v34|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SUB (x: v32|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + v28|DWORD * 4 + 16], y: v36|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = SHR v35|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV v35|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = NOT v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV v39|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = AND (x: v36|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SETCC condition: |>| <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v37|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = DEC v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD, v44|QWORD, v45|DWORD] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B6" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD, v27|QWORD, v28|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v26|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606887792252088515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV v29|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33051|0xffffffffffff7ee5]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-39963|0xffffffffffff63e5]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - v0|QWORD[.] v1|QWORD[.] - - v28|DWORD v11|QWORD - v27|QWORD - v26|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-35355|0xffffffffffff75e5]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-26907|0xffffffffffff96e5]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v6|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v7|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = ADD (x: v4|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v1|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD [v0|QWORD[.] + v8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = IMUL (x: v11|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SUB (x: v10|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + v8|DWORD * 4 + 16], y: v14|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = SHR v13|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV v13|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = NOT v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = AND (x: v14|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SETCC condition: |>| <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = ADD (x: v15|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = DEC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v3|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD, v23|QWORD, v24|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV [v1|QWORD[.] + v26|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD [v0|QWORD[.] + v28|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = IMUL (x: v33|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = ADD (x: v34|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SUB (x: v32|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + v28|DWORD * 4 + 16], y: v36|QWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = SHR v35|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV v35|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = NOT v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV v39|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = AND (x: v36|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SETCC condition: |>| <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = ADD (x: v37|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = DEC v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD, v44|QWORD, v45|DWORD] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B6" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD, v27|QWORD, v28|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v26|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606887792252088515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV v29|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33051|0xffffffffffff7ee5]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-39963|0xffffffffffff63e5]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - v0|QWORD[.] v1|QWORD[.] - - v28|DWORD v11|QWORD - v27|QWORD - v26|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-35355|0xffffffffffff75e5]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-26907|0xffffffffffff96e5]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v6|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMP (x: v6|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v7|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v8|DWORD = ADD (x: v4|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction v9|DWORD = MOV [v1|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction v10|QWORD = MOVSXD [v0|QWORD[.] + v8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction v11|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction v12|QWORD = MOV v9|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v13|QWORD = IMUL (x: v11|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction v14|QWORD = SUB (x: v10|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [v0|QWORD[.] + v8|DWORD * 4 + 16], y: v14|QWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction v15|QWORD = SHR v13|QWORD y: 32 size: QWORD <|@ <|@
      nr   58  <|@ instruction v16|DWORD = MOV v13|QWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction v17|DWORD = NOT v16|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction v18|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   66  <|@ instruction v20|QWORD = AND (x: v14|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: v20|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction v21|DWORD = SETCC condition: |>| <|@ <|@
      nr   72  <|@ instruction v22|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction v23|QWORD = ADD (x: v15|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction v24|DWORD = DEC v8|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction v25|DWORD = LEA [v3|DWORD - 2] size: DWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[v25|DWORD, v23|QWORD, v24|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: v6|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: v7|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction v31|DWORD = MOV [v1|QWORD[.] + v26|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction v32|QWORD = MOVSXD [v0|QWORD[.] + v28|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  106  <|@ instruction v33|QWORD = MOV v31|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction v34|QWORD = IMUL (x: v33|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction v35|QWORD = ADD (x: v34|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction v36|QWORD = SUB (x: v32|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV (x: [v0|QWORD[.] + v28|DWORD * 4 + 16], y: v36|QWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction v37|QWORD = SHR v35|QWORD y: 32 size: QWORD <|@ <|@
      nr  118  <|@ instruction v38|DWORD = MOV v35|QWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction v39|DWORD = NOT v38|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction v40|QWORD = MOV v39|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction v41|QWORD = AND (x: v36|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction v42|DWORD = SETCC condition: |>| <|@ <|@
      nr  130  <|@ instruction v43|QWORD = MOV v42|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction v44|QWORD = ADD (x: v37|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction v45|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction v46|DWORD = DEC v26|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[v46|DWORD, v44|QWORD, v45|DWORD] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B6" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   82  <|@ instruction [v26|DWORD, v27|QWORD, v28|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   84  <|@ instruction TEST (x: v26|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606887792252088515
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction JUMP ~[v27|QWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr  144  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction v30|DWORD = MOV v29|QWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction rax|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[long[0|0x0]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction JUMP ~[int[-33051|0xffffffffffff7ee5]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  180  <|@ instruction [v48|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v48|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction JUMP ~[int[-39963|0xffffffffffff63e5]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  168  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v47|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - v0|QWORD[.] v1|QWORD[.] - - v28|DWORD v11|QWORD - v27|QWORD - v26|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[int[-35355|0xffffffffffff75e5]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction JUMP ~[int[-26907|0xffffffffffff96e5]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v6|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMP (x: v6|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v7|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v8|DWORD = ADD (x: v4|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction v9|DWORD = MOV [v1|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction v10|QWORD = MOVSXD [v0|QWORD[.] + v8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction v11|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction v12|QWORD = MOV v9|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v13|QWORD = IMUL (x: v11|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction v14|QWORD = SUB (x: v10|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [v0|QWORD[.] + v8|DWORD * 4 + 16], y: v14|QWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction v15|QWORD = SHR v13|QWORD y: 32 size: QWORD <|@ <|@
      nr   58  <|@ instruction v16|DWORD = MOV v13|QWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction v17|DWORD = NOT v16|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction v18|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   66  <|@ instruction v20|QWORD = AND (x: v14|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: v20|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction v21|DWORD = SETCC condition: |>| <|@ <|@
      nr   72  <|@ instruction v22|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction v23|QWORD = ADD (x: v15|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction v24|DWORD = DEC v8|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction v25|DWORD = LEA [v3|DWORD - 2] size: DWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[v25|DWORD, v23|QWORD, v24|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: v6|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: v7|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction v31|DWORD = MOV [v1|QWORD[.] + v26|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction v32|QWORD = MOVSXD [v0|QWORD[.] + v28|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  106  <|@ instruction v33|QWORD = MOV v31|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction v34|QWORD = IMUL (x: v33|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction v35|QWORD = ADD (x: v34|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction v36|QWORD = SUB (x: v32|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV (x: [v0|QWORD[.] + v28|DWORD * 4 + 16], y: v36|QWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction v37|QWORD = SHR v35|QWORD y: 32 size: QWORD <|@ <|@
      nr  118  <|@ instruction v38|DWORD = MOV v35|QWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction v39|DWORD = NOT v38|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction v40|QWORD = MOV v39|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction v41|QWORD = AND (x: v36|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction v42|DWORD = SETCC condition: |>| <|@ <|@
      nr  130  <|@ instruction v43|QWORD = MOV v42|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction v44|QWORD = ADD (x: v37|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction v45|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction v46|DWORD = DEC v26|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[v46|DWORD, v44|QWORD, v45|DWORD] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B6" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   82  <|@ instruction [v26|DWORD, v27|QWORD, v28|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   84  <|@ instruction TEST (x: v26|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606887792252088515
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction JUMP ~[v27|QWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr  144  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction v30|DWORD = MOV v29|QWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction rax|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[long[0|0x0]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction JUMP ~[int[-33051|0xffffffffffff7ee5]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  180  <|@ instruction [v48|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v48|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction JUMP ~[int[-39963|0xffffffffffff63e5]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  168  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v47|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - v0|QWORD[.] v1|QWORD[.] - - v28|DWORD v11|QWORD - v27|QWORD - v26|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[int[-35355|0xffffffffffff75e5]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction JUMP ~[int[-26907|0xffffffffffff96e5]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v30|d [0, 1[[148, 150[ "NoSpillStore"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 8[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 6[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  rdi|d fixed "[rdi|d]" rdi|d -1 [0, 14[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 10[ "NoSpillStore"
  r9|d fixed "[r9|d]" r9|d -1 [0, 12[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rdx|q [6, 140[[156, 175[[176, 187[6 MustHaveRegister 32 MustHaveRegister 44 MustHaveRegister 54 MustHaveRegister 104 MustHaveRegister 114 MustHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rcx|q [8, 140[[156, 175[[176, 187[8 MustHaveRegister 24 MustHaveRegister 42 MustHaveRegister 102 MustHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d r8|d [10, 46[[156, 160[[176, 187[10 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d r9|d [12, 78[[156, 160[[176, 187[12 MustHaveRegister 16 ShouldHaveRegister 34 ShouldHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d rdi|d [14, 40[[156, 160[[176, 187[14 MustHaveRegister 34 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d v3|d [16, 42[16 MustHaveRegister 18 MustHaveRegister 26 ShouldHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [24, 140[24 MustHaveRegister 26 MustHaveRegister 90 MustHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [32, 140[32 MustHaveRegister 36 MustHaveRegister 96 MustHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d v4|d [34, 76[34 MustHaveRegister 36 ShouldHaveRegister 44 MustHaveRegister 54 MustHaveRegister 76 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [42, 48[42 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [44, 52[44 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [46, 140[[160, 175[46 MustHaveRegister 50 ShouldHaveRegister 108 ShouldHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [48, 50[48 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v11|q [50, 58[50 MustHaveRegister 52 ShouldHaveRegister 56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v10|q [52, 66[52 MustHaveRegister 54 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q v13|q [56, 74[56 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [58, 60[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d v16|d [60, 62[60 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [62, 68[62 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [64, 140[64 MustHaveRegister 66 ShouldHaveRegister 124 ShouldHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v14|q [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [70, 72[70 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q -1 [72, 74[72 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v15|q [74, 81[74 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v8|d [76, 81[76 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d v26|d [78, 81[78 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d v46|d [82, 136[[160, 175[84 MustHaveRegister 90 ShouldHaveRegister 102 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v44|q [82, 110[[140, 143[[160, 175[110 ShouldHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v45|d [82, 134[[160, 175[96 ShouldHaveRegister 104 MustHaveRegister 114 MustHaveRegister 134 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v27|q [144, 146[146 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d -1 [146, 148[146 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [102, 106[102 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q -1 [104, 112[104 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q -1 [106, 108[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q v33|q [108, 110[108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v34|q [110, 118[110 MustHaveRegister 112 ShouldHaveRegister 116 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v32|q [112, 124[112 MustHaveRegister 114 MustHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q v35|q [116, 132[116 MustHaveRegister 132 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d -1 [118, 120[118 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d v38|d [120, 122[120 MustHaveRegister 122 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q -1 [122, 126[122 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q v36|q [124, 126[124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [128, 130[128 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q -1 [130, 132[130 MustHaveRegister 132 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v37|q [132, 139[132 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d v28|d [134, 139[134 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[v46|d]" v46|d v26|d [136, 139[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d -1 [168, 170[170 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d -1 [180, 182[182 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v30|d [0, 1[[148, 150[ "NoSpillStore"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 8[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 6[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  rdi|d fixed "[rdi|d]" rdi|d -1 [0, 14[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 10[ "NoSpillStore"
  r9|d fixed "[r9|d]" r9|d -1 [0, 12[ "NoSpillStore"
  v0|q QWORD "[rdx|q]" v0|q rdx|q [6, 140[[156, 175[[176, 187[6 MustHaveRegister 32 MustHaveRegister 44 MustHaveRegister 54 MustHaveRegister 104 MustHaveRegister 114 MustHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v1|q QWORD "[rcx|q]" v1|q rcx|q [8, 140[[156, 175[[176, 187[8 MustHaveRegister 24 MustHaveRegister 42 MustHaveRegister 102 MustHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[r8|d]" v2|d r8|d [10, 46[[156, 160[[176, 187[10 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r9|d]" v3|d r9|d [12, 78[[156, 160[[176, 187[12 MustHaveRegister 16 ShouldHaveRegister 34 ShouldHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rdi|d]" v4|d rdi|d [14, 40[[156, 160[[176, 187[14 MustHaveRegister 34 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d v3|d [16, 42[16 MustHaveRegister 18 MustHaveRegister 26 ShouldHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [24, 140[24 MustHaveRegister 26 MustHaveRegister 90 MustHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v7|d DWORD "[r11|d]" v7|d -1 [32, 140[32 MustHaveRegister 36 MustHaveRegister 96 MustHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[rbx|d]" v8|d v4|d [34, 76[34 MustHaveRegister 36 ShouldHaveRegister 44 MustHaveRegister 54 MustHaveRegister 76 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d -1 [42, 48[42 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdi|q]" v10|q -1 [44, 52[44 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[r8|q]" v11|q -1 [46, 140[[160, 175[46 MustHaveRegister 50 ShouldHaveRegister 108 ShouldHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q -1 [48, 50[48 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q v11|q [50, 58[50 MustHaveRegister 52 ShouldHaveRegister 56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rdi|q]" v14|q v10|q [52, 66[52 MustHaveRegister 54 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q v13|q [56, 74[56 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d -1 [58, 60[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v16|d [60, 62[60 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q -1 [62, 68[62 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbp|q]" v19|q -1 [64, 140[64 MustHaveRegister 66 ShouldHaveRegister 124 ShouldHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v20|q QWORD "[rdi|q]" v20|q v14|q [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d -1 [70, 72[70 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q -1 [72, 74[72 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q v15|q [74, 81[74 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rbx|d]" v24|d v8|d [76, 81[76 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rax|d]" v25|d v26|d [78, 81[78 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[r9|d]" v26|d v46|d [82, 136[[160, 175[84 MustHaveRegister 90 ShouldHaveRegister 102 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rbx|q]" v27|q v44|q [82, 110[[140, 143[[160, 175[110 ShouldHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rdi|d]" v28|d v45|d [82, 134[[160, 175[96 ShouldHaveRegister 104 MustHaveRegister 114 MustHaveRegister 134 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rbx|q]" v29|q v27|q [144, 146[146 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rax|d]" v30|d -1 [146, 148[146 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d -1 [102, 106[102 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q -1 [104, 112[104 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rax|q]" v33|q -1 [106, 108[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q v33|q [108, 110[108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q v34|q [110, 118[110 MustHaveRegister 112 ShouldHaveRegister 116 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q v32|q [112, 124[112 MustHaveRegister 114 MustHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rbx|q]" v37|q v35|q [116, 132[116 MustHaveRegister 132 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rax|d]" v38|d -1 [118, 120[118 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rax|d]" v39|d v38|d [120, 122[120 MustHaveRegister 122 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rax|q]" v40|q -1 [122, 126[122 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q v36|q [124, 126[124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rax|d]" v42|d -1 [128, 130[128 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[rax|q]" v43|q -1 [130, 132[130 MustHaveRegister 132 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rbx|q]" v44|q v37|q [132, 139[132 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[rdi|d]" v45|d v28|d [134, 139[134 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[r9|d]" v46|d v26|d [136, 139[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[r10|d]" v47|d -1 [168, 170[170 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[r10|d]" v48|d -1 [180, 182[182 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v6|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMP (x: v6|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v7|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v8|DWORD = ADD (x: v4|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction v9|DWORD = MOV [v1|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction v10|QWORD = MOVSXD [v0|QWORD[.] + v8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction v11|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction v12|QWORD = MOV v9|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v13|QWORD = IMUL (x: v11|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction v14|QWORD = SUB (x: v10|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [v0|QWORD[.] + v8|DWORD * 4 + 16], y: v14|QWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction v15|QWORD = SHR v13|QWORD y: 32 size: QWORD <|@ <|@
      nr   58  <|@ instruction v16|DWORD = MOV v13|QWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction v17|DWORD = NOT v16|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction v18|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   66  <|@ instruction v20|QWORD = AND (x: v14|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: v20|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction v21|DWORD = SETCC condition: |>| <|@ <|@
      nr   72  <|@ instruction v22|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction v23|QWORD = ADD (x: v15|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction v24|DWORD = DEC v8|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction v25|DWORD = LEA [v3|DWORD - 2] size: DWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[v25|DWORD, v23|QWORD, v24|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: v6|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: v7|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction v31|DWORD = MOV [v1|QWORD[.] + v26|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction v32|QWORD = MOVSXD [v0|QWORD[.] + v28|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  106  <|@ instruction v33|QWORD = MOV v31|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction v34|QWORD = IMUL (x: v33|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction v35|QWORD = ADD (x: v34|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction v36|QWORD = SUB (x: v32|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV (x: [v0|QWORD[.] + v28|DWORD * 4 + 16], y: v36|QWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction v37|QWORD = SHR v35|QWORD y: 32 size: QWORD <|@ <|@
      nr  118  <|@ instruction v38|DWORD = MOV v35|QWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction v39|DWORD = NOT v38|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction v40|QWORD = MOV v39|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction v41|QWORD = AND (x: v36|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction v42|DWORD = SETCC condition: |>| <|@ <|@
      nr  130  <|@ instruction v43|QWORD = MOV v42|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction v44|QWORD = ADD (x: v37|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction v45|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction v46|DWORD = DEC v26|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[v46|DWORD, v44|QWORD, v45|DWORD] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B6" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   82  <|@ instruction [v26|DWORD, v27|QWORD, v28|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   84  <|@ instruction TEST (x: v26|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606887792252088515
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction JUMP ~[v27|QWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr  144  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction v30|DWORD = MOV v29|QWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction rax|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[long[0|0x0]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction JUMP ~[int[-33051|0xffffffffffff7ee5]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  180  <|@ instruction [v48|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v48|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction JUMP ~[int[-39963|0xffffffffffff63e5]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  168  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v47|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - v0|QWORD[.] v1|QWORD[.] - - v28|DWORD v11|QWORD - v27|QWORD - v26|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[int[-35355|0xffffffffffff75e5]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction JUMP ~[int[-26907|0xffffffffffff96e5]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v30|d [0, 1[[148, 150[ "NoSpillStore"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 8[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 6[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  rdi|d fixed "[rdi|d]" rdi|d -1 [0, 14[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 10[ "NoSpillStore"
  r9|d fixed "[r9|d]" r9|d -1 [0, 12[ "NoSpillStore"
  v0|q QWORD "[rdx|q]" v0|q rdx|q [6, 140[[156, 175[[176, 187[6 MustHaveRegister 32 MustHaveRegister 44 MustHaveRegister 54 MustHaveRegister 104 MustHaveRegister 114 MustHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v1|q QWORD "[rcx|q]" v1|q rcx|q [8, 140[[156, 175[[176, 187[8 MustHaveRegister 24 MustHaveRegister 42 MustHaveRegister 102 MustHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[r8|d]" v2|d r8|d [10, 46[[156, 160[[176, 187[10 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r9|d]" v3|d r9|d [12, 78[[156, 160[[176, 187[12 MustHaveRegister 16 ShouldHaveRegister 34 ShouldHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rdi|d]" v4|d rdi|d [14, 40[[156, 160[[176, 187[14 MustHaveRegister 34 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d v3|d [16, 42[16 MustHaveRegister 18 MustHaveRegister 26 ShouldHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [24, 140[24 MustHaveRegister 26 MustHaveRegister 90 MustHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v7|d DWORD "[r11|d]" v7|d -1 [32, 140[32 MustHaveRegister 36 MustHaveRegister 96 MustHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[rbx|d]" v8|d v4|d [34, 76[34 MustHaveRegister 36 ShouldHaveRegister 44 MustHaveRegister 54 MustHaveRegister 76 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d -1 [42, 48[42 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdi|q]" v10|q -1 [44, 52[44 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[r8|q]" v11|q -1 [46, 140[[160, 175[46 MustHaveRegister 50 ShouldHaveRegister 108 ShouldHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q -1 [48, 50[48 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q v11|q [50, 58[50 MustHaveRegister 52 ShouldHaveRegister 56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rdi|q]" v14|q v10|q [52, 66[52 MustHaveRegister 54 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q v13|q [56, 74[56 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d -1 [58, 60[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v16|d [60, 62[60 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q -1 [62, 68[62 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbp|q]" v19|q -1 [64, 140[64 MustHaveRegister 66 ShouldHaveRegister 124 ShouldHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v20|q QWORD "[rdi|q]" v20|q v14|q [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d -1 [70, 72[70 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q -1 [72, 74[72 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q v15|q [74, 81[74 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rbx|d]" v24|d v8|d [76, 81[76 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rax|d]" v25|d v26|d [78, 81[78 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[r9|d]" v26|d v46|d [82, 136[[160, 175[84 MustHaveRegister 90 ShouldHaveRegister 102 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rbx|q]" v27|q v44|q [82, 110[[140, 143[[160, 175[110 ShouldHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rdi|d]" v28|d v45|d [82, 134[[160, 175[96 ShouldHaveRegister 104 MustHaveRegister 114 MustHaveRegister 134 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rbx|q]" v29|q v27|q [144, 146[146 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rax|d]" v30|d -1 [146, 148[146 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d -1 [102, 106[102 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q -1 [104, 112[104 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rax|q]" v33|q -1 [106, 108[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q v33|q [108, 110[108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q v34|q [110, 118[110 MustHaveRegister 112 ShouldHaveRegister 116 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q v32|q [112, 124[112 MustHaveRegister 114 MustHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rbx|q]" v37|q v35|q [116, 132[116 MustHaveRegister 132 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rax|d]" v38|d -1 [118, 120[118 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rax|d]" v39|d v38|d [120, 122[120 MustHaveRegister 122 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rax|q]" v40|q -1 [122, 126[122 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q v36|q [124, 126[124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rax|d]" v42|d -1 [128, 130[128 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[rax|q]" v43|q -1 [130, 132[130 MustHaveRegister 132 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rbx|q]" v44|q v37|q [132, 139[132 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[rdi|d]" v45|d v28|d [134, 139[134 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[r9|d]" v46|d v26|d [136, 139[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[r10|d]" v47|d -1 [168, 170[170 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[r10|d]" v48|d -1 [180, 182[182 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v6|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMP (x: v6|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v7|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v8|DWORD = ADD (x: v4|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction v9|DWORD = MOV [v1|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction v10|QWORD = MOVSXD [v0|QWORD[.] + v8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction v11|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction v12|QWORD = MOV v9|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v13|QWORD = IMUL (x: v11|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction v14|QWORD = SUB (x: v10|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [v0|QWORD[.] + v8|DWORD * 4 + 16], y: v14|QWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction v15|QWORD = SHR v13|QWORD y: 32 size: QWORD <|@ <|@
      nr   58  <|@ instruction v16|DWORD = MOV v13|QWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction v17|DWORD = NOT v16|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction v18|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   66  <|@ instruction v20|QWORD = AND (x: v14|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: v20|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction v21|DWORD = SETCC condition: |>| <|@ <|@
      nr   72  <|@ instruction v22|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction v23|QWORD = ADD (x: v15|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction v24|DWORD = DEC v8|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction v25|DWORD = LEA [v3|DWORD - 2] size: DWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[v25|DWORD, v23|QWORD, v24|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: v6|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: v7|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction v31|DWORD = MOV [v1|QWORD[.] + v26|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction v32|QWORD = MOVSXD [v0|QWORD[.] + v28|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  106  <|@ instruction v33|QWORD = MOV v31|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction v34|QWORD = IMUL (x: v33|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction v35|QWORD = ADD (x: v34|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction v36|QWORD = SUB (x: v32|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV (x: [v0|QWORD[.] + v28|DWORD * 4 + 16], y: v36|QWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction v37|QWORD = SHR v35|QWORD y: 32 size: QWORD <|@ <|@
      nr  118  <|@ instruction v38|DWORD = MOV v35|QWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction v39|DWORD = NOT v38|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction v40|QWORD = MOV v39|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction v41|QWORD = AND (x: v36|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction v42|DWORD = SETCC condition: |>| <|@ <|@
      nr  130  <|@ instruction v43|QWORD = MOV v42|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction v44|QWORD = ADD (x: v37|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction v45|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction v46|DWORD = DEC v26|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[v46|DWORD, v44|QWORD, v45|DWORD] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B6" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   82  <|@ instruction [v26|DWORD, v27|QWORD, v28|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   84  <|@ instruction TEST (x: v26|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606887792252088515
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction JUMP ~[v27|QWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr  144  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction v30|DWORD = MOV v29|QWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction rax|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[long[0|0x0]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction JUMP ~[int[-33051|0xffffffffffff7ee5]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  180  <|@ instruction [v48|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v48|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction JUMP ~[int[-39963|0xffffffffffff63e5]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  168  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v47|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - v0|QWORD[.] v1|QWORD[.] - - v28|DWORD v11|QWORD - v27|QWORD - v26|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[int[-35355|0xffffffffffff75e5]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction JUMP ~[int[-26907|0xffffffffffff96e5]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v30|d [0, 1[[148, 150[ "NoSpillStore"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 8[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 6[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  rdi|d fixed "[rdi|d]" rdi|d -1 [0, 14[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 10[ "NoSpillStore"
  r9|d fixed "[r9|d]" r9|d -1 [0, 12[ "NoSpillStore"
  v0|q QWORD "[rdx|q]" v0|q rdx|q [6, 140[[156, 175[[176, 187[6 MustHaveRegister 32 MustHaveRegister 44 MustHaveRegister 54 MustHaveRegister 104 MustHaveRegister 114 MustHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v1|q QWORD "[rcx|q]" v1|q rcx|q [8, 140[[156, 175[[176, 187[8 MustHaveRegister 24 MustHaveRegister 42 MustHaveRegister 102 MustHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[r8|d]" v2|d r8|d [10, 46[[156, 160[[176, 187[10 MustHaveRegister 46 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r9|d]" v3|d r9|d [12, 78[[156, 160[[176, 187[12 MustHaveRegister 16 ShouldHaveRegister 34 ShouldHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rdi|d]" v4|d rdi|d [14, 40[[156, 160[[176, 187[14 MustHaveRegister 34 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d v3|d [16, 42[16 MustHaveRegister 18 MustHaveRegister 26 ShouldHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [24, 140[24 MustHaveRegister 26 MustHaveRegister 90 MustHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v7|d DWORD "[r11|d]" v7|d -1 [32, 140[32 MustHaveRegister 36 MustHaveRegister 96 MustHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[rbx|d]" v8|d v4|d [34, 76[34 MustHaveRegister 36 ShouldHaveRegister 44 MustHaveRegister 54 MustHaveRegister 76 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d -1 [42, 48[42 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdi|q]" v10|q -1 [44, 52[44 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[r8|q]" v11|q -1 [46, 140[[160, 175[46 MustHaveRegister 50 ShouldHaveRegister 108 ShouldHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q -1 [48, 50[48 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q v11|q [50, 58[50 MustHaveRegister 52 ShouldHaveRegister 56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rdi|q]" v14|q v10|q [52, 66[52 MustHaveRegister 54 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q v13|q [56, 74[56 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d -1 [58, 60[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v16|d [60, 62[60 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q -1 [62, 68[62 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbp|q]" v19|q -1 [64, 140[64 MustHaveRegister 66 ShouldHaveRegister 124 ShouldHaveRegister 139 LiveAtLoopEnd  "NoSpillStore"
  v20|q QWORD "[rdi|q]" v20|q v14|q [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d -1 [70, 72[70 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q -1 [72, 74[72 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q v15|q [74, 81[74 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rbx|d]" v24|d v8|d [76, 81[76 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rax|d]" v25|d v26|d [78, 81[78 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[r9|d]" v26|d v46|d [82, 136[[160, 175[84 MustHaveRegister 90 ShouldHaveRegister 102 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rbx|q]" v27|q v44|q [82, 110[[140, 143[[160, 175[110 ShouldHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rdi|d]" v28|d v45|d [82, 134[[160, 175[96 ShouldHaveRegister 104 MustHaveRegister 114 MustHaveRegister 134 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rbx|q]" v29|q v27|q [144, 146[146 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rax|d]" v30|d -1 [146, 148[146 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d -1 [102, 106[102 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q -1 [104, 112[104 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rax|q]" v33|q -1 [106, 108[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q v33|q [108, 110[108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q v34|q [110, 118[110 MustHaveRegister 112 ShouldHaveRegister 116 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q v32|q [112, 124[112 MustHaveRegister 114 MustHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rbx|q]" v37|q v35|q [116, 132[116 MustHaveRegister 132 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rax|d]" v38|d -1 [118, 120[118 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rax|d]" v39|d v38|d [120, 122[120 MustHaveRegister 122 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rax|q]" v40|q -1 [122, 126[122 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q v36|q [124, 126[124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rax|d]" v42|d -1 [128, 130[128 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[rax|q]" v43|q -1 [130, 132[130 MustHaveRegister 132 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rbx|q]" v44|q v37|q [132, 139[132 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[rdi|d]" v45|d v28|d [134, 139[134 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[r9|d]" v46|d v26|d [136, 139[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[r10|d]" v47|d -1 [168, 170[170 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[r10|d]" v48|d -1 [180, 182[182 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v6|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMP (x: v6|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v7|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v8|DWORD = ADD (x: v4|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction v9|DWORD = MOV [v1|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction v10|QWORD = MOVSXD [v0|QWORD[.] + v8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction v11|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction v12|QWORD = MOV v9|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v13|QWORD = IMUL (x: v11|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction v14|QWORD = SUB (x: v10|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [v0|QWORD[.] + v8|DWORD * 4 + 16], y: v14|QWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction v15|QWORD = SHR v13|QWORD y: 32 size: QWORD <|@ <|@
      nr   58  <|@ instruction v16|DWORD = MOV v13|QWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction v17|DWORD = NOT v16|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction v18|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   66  <|@ instruction v20|QWORD = AND (x: v14|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: v20|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction v21|DWORD = SETCC condition: |>| <|@ <|@
      nr   72  <|@ instruction v22|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction v23|QWORD = ADD (x: v15|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction v24|DWORD = DEC v8|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction v25|DWORD = LEA [v3|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVE v24|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE v23|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE v25|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: v6|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: v7|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction v31|DWORD = MOV [v1|QWORD[.] + v26|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction v32|QWORD = MOVSXD [v0|QWORD[.] + v28|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  106  <|@ instruction v33|QWORD = MOV v31|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction v34|QWORD = IMUL (x: v33|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction v35|QWORD = ADD (x: v34|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction v36|QWORD = SUB (x: v32|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV (x: [v0|QWORD[.] + v28|DWORD * 4 + 16], y: v36|QWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction v37|QWORD = SHR v35|QWORD y: 32 size: QWORD <|@ <|@
      nr  118  <|@ instruction v38|DWORD = MOV v35|QWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction v39|DWORD = NOT v38|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction v40|QWORD = MOV v39|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction v41|QWORD = AND (x: v36|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction v42|DWORD = SETCC condition: |>| <|@ <|@
      nr  130  <|@ instruction v43|QWORD = MOV v42|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction v44|QWORD = ADD (x: v37|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction v45|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction v46|DWORD = DEC v26|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B6" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   82  <|@ instruction [v26|DWORD, v27|QWORD, v28|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   84  <|@ instruction TEST (x: v26|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606887792252088515
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr  144  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction v30|DWORD = MOV v29|QWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction rax|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: int[-33051|0xffffffffffff7ee5] // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  180  <|@ instruction [v48|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v48|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[-39963|0xffffffffffff63e5] // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  168  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v47|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - v0|QWORD[.] v1|QWORD[.] - - v28|DWORD v11|QWORD - v27|QWORD - v26|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[-35355|0xffffffffffff75e5] // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: int[-26907|0xffffffffffff96e5] // MoveResolver resolve mapping <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v6|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMP (x: v6|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction v7|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v8|DWORD = ADD (x: v4|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction v9|DWORD = MOV [v1|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction v10|QWORD = MOVSXD [v0|QWORD[.] + v8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction v11|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction v12|QWORD = MOV v9|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction v13|QWORD = IMUL (x: v11|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction v14|QWORD = SUB (x: v10|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [v0|QWORD[.] + v8|DWORD * 4 + 16], y: v14|QWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction v15|QWORD = SHR v13|QWORD y: 32 size: QWORD <|@ <|@
      nr   58  <|@ instruction v16|DWORD = MOV v13|QWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction v17|DWORD = NOT v16|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction v18|QWORD = MOV v17|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   66  <|@ instruction v20|QWORD = AND (x: v14|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: v20|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction v21|DWORD = SETCC condition: |>| <|@ <|@
      nr   72  <|@ instruction v22|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction v23|QWORD = ADD (x: v15|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction v24|DWORD = DEC v8|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction v25|DWORD = LEA [v3|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVE v24|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE v23|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE v25|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: v6|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: v7|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction v31|DWORD = MOV [v1|QWORD[.] + v26|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction v32|QWORD = MOVSXD [v0|QWORD[.] + v28|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  106  <|@ instruction v33|QWORD = MOV v31|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction v34|QWORD = IMUL (x: v33|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction v35|QWORD = ADD (x: v34|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction v36|QWORD = SUB (x: v32|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV (x: [v0|QWORD[.] + v28|DWORD * 4 + 16], y: v36|QWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction v37|QWORD = SHR v35|QWORD y: 32 size: QWORD <|@ <|@
      nr  118  <|@ instruction v38|DWORD = MOV v35|QWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction v39|DWORD = NOT v38|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction v40|QWORD = MOV v39|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction v41|QWORD = AND (x: v36|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: v41|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction v42|DWORD = SETCC condition: |>| <|@ <|@
      nr  130  <|@ instruction v43|QWORD = MOV v42|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction v44|QWORD = ADD (x: v37|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction v45|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction v46|DWORD = DEC v26|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B6" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   84  <|@ instruction TEST (x: v26|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606887792252088515
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction v30|DWORD = MOV v29|QWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction rax|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: int[-33051|0xffffffffffff7ee5] // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v48|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[-39963|0xffffffffffff63e5] // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 1004], y: v47|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - v0|QWORD[.] v1|QWORD[.] - - v28|DWORD v11|QWORD - v27|QWORD - v26|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[-35355|0xffffffffffff75e5] // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: int[-26907|0xffffffffffff96e5] // MoveResolver resolve mapping <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rbx|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction rdi|QWORD = MOVSXD [rdx|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|QWORD = IMUL (x: r8|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|QWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   66  <|@ instruction rdi|QWORD = AND (x: rdi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: rdi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr   72  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rbx|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA [r9|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = MOVSXD [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = IMUL (x: rax|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV (x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16], y: rsi|QWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = AND (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B6" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   84  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606887792252088515
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOV rbx|QWORD size: DWORD <|@ <|@
      nr  150  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33051|0xffffffffffff7ee5] // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-39963|0xffffffffffff63e5] // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - rdx|QWORD[.] rcx|QWORD[.] - - rdi|DWORD r8|QWORD - rbx|QWORD - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35355|0xffffffffffff75e5] // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26907|0xffffffffffff96e5] // MoveResolver resolve mapping <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rbx|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction rdi|QWORD = MOVSXD [rdx|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|QWORD = IMUL (x: r8|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|QWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   66  <|@ instruction rdi|QWORD = AND (x: rdi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: rdi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr   72  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rbx|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA [r9|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = MOVSXD [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = IMUL (x: rax|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV (x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16], y: rsi|QWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = AND (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B6" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   84  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606887792252088515
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOV rbx|QWORD size: DWORD <|@ <|@
      nr  150  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33051|0xffffffffffff7ee5] // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-39963|0xffffffffffff63e5] // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - rdx|QWORD[.] rcx|QWORD[.] - - rdi|DWORD r8|QWORD - rbx|QWORD - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35355|0xffffffffffff75e5] // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26907|0xffffffffffff96e5] // MoveResolver resolve mapping <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rbx|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction rdi|QWORD = MOVSXD [rdx|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|QWORD = IMUL (x: r8|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|QWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   66  <|@ instruction rdi|QWORD = AND (x: rdi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: rdi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr   72  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rbx|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA [r9|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = MOVSXD [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = IMUL (x: rax|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV (x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16], y: rsi|QWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = AND (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B6" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   84  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606887792252088515
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOV rbx|QWORD size: DWORD <|@ <|@
      nr  150  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33051|0xffffffffffff7ee5] // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-39963|0xffffffffffff63e5] // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - rdx|QWORD[.] rcx|QWORD[.] - - rdi|DWORD r8|QWORD - rbx|QWORD - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35355|0xffffffffffff75e5] // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26907|0xffffffffffff96e5] // MoveResolver resolve mapping <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rbx|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction rdi|QWORD = MOVSXD [rdx|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|QWORD = IMUL (x: r8|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|QWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   66  <|@ instruction rdi|QWORD = AND (x: rdi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: rdi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr   72  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rbx|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA [r9|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = MOVSXD [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = IMUL (x: rax|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV (x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16], y: rsi|QWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = AND (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B6" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   84  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606887792252088515
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOV rbx|QWORD size: DWORD <|@ <|@
      nr  150  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33051|0xffffffffffff7ee5] // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-39963|0xffffffffffff63e5] // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - rdx|QWORD[.] rcx|QWORD[.] - - rdi|DWORD r8|QWORD - rbx|QWORD - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35355|0xffffffffffff75e5] // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26907|0xffffffffffff96e5] // MoveResolver resolve mapping <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rbx|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction rdi|QWORD = MOVSXD [rdx|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|QWORD = IMUL (x: r8|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|QWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   66  <|@ instruction rdi|QWORD = AND (x: rdi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: rdi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr   72  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rbx|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA [r9|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = MOVSXD [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = IMUL (x: rax|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV (x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16], y: rsi|QWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = AND (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B6" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   84  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606887792252088515
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOV rbx|QWORD size: DWORD <|@ <|@
      nr  150  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33051|0xffffffffffff7ee5] // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-39963|0xffffffffffff63e5] // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - rdx|QWORD[.] rcx|QWORD[.] - - rdi|DWORD r8|QWORD - rbx|QWORD - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35355|0xffffffffffff75e5] // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26907|0xffffffffffff96e5] // MoveResolver resolve mapping <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rbx|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction rdi|QWORD = MOVSXD [rdx|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|QWORD = IMUL (x: r8|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|QWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   66  <|@ instruction rdi|QWORD = AND (x: rdi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: rdi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr   72  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rbx|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA [r9|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = MOVSXD [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = IMUL (x: rax|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV (x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16], y: rsi|QWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = AND (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B6" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   84  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606887792252088515
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOV rbx|QWORD size: DWORD <|@ <|@
      nr  150  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33051|0xffffffffffff7ee5] // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-39963|0xffffffffffff63e5] // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - rdx|QWORD[.] rcx|QWORD[.] - - rdi|DWORD r8|QWORD - rbx|QWORD - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35355|0xffffffffffff75e5] // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26907|0xffffffffffff96e5] // MoveResolver resolve mapping <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rbx|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction rdi|QWORD = MOVSXD [rdx|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|QWORD = IMUL (x: r8|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|QWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   66  <|@ instruction rdi|QWORD = AND (x: rdi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: rdi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr   72  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rbx|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA [r9|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = MOVSXD [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = IMUL (x: rax|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV (x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16], y: rsi|QWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = AND (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   84  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOV rbx|QWORD size: DWORD <|@ <|@
      nr  150  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33051|0xffffffffffff7ee5] // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-39963|0xffffffffffff63e5] // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - rdx|QWORD[.] rcx|QWORD[.] - - rdi|DWORD r8|QWORD - rbx|QWORD - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35355|0xffffffffffff75e5] // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26907|0xffffffffffff96e5] // MoveResolver resolve mapping <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rbx|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction rdi|QWORD = MOVSXD [rdx|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|QWORD = IMUL (x: r8|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|QWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   66  <|@ instruction rdi|QWORD = AND (x: rdi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: rdi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr   72  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rbx|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA [r9|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = MOVSXD [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = IMUL (x: rax|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV (x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16], y: rsi|QWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = AND (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   84  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOV rbx|QWORD size: DWORD <|@ <|@
      nr  150  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33051|0xffffffffffff7ee5] // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-39963|0xffffffffffff63e5] // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - rdx|QWORD[.] rcx|QWORD[.] - - rdi|DWORD r8|QWORD - rbx|QWORD - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35355|0xffffffffffff75e5] // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26907|0xffffffffffff96e5] // MoveResolver resolve mapping <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rbx|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction rdi|QWORD = MOVSXD [rdx|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|QWORD = IMUL (x: r8|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|QWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   66  <|@ instruction rdi|QWORD = AND (x: rdi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: rdi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr   72  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rbx|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA [r9|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = MOVSXD [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = IMUL (x: rax|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV (x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16], y: rsi|QWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = AND (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   84  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOV rbx|QWORD size: DWORD <|@ <|@
      nr  150  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33051|0xffffffffffff7ee5] // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-39963|0xffffffffffff63e5] // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - rdx|QWORD[.] rcx|QWORD[.] - - rdi|DWORD r8|QWORD - rbx|QWORD - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35355|0xffffffffffff75e5] // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26907|0xffffffffffff96e5] // MoveResolver resolve mapping <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rbx|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction rdi|QWORD = MOVSXD [rdx|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|QWORD = IMUL (x: r8|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|QWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   66  <|@ instruction rdi|QWORD = AND (x: rdi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: rdi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr   72  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rbx|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA [r9|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = MOVSXD [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = IMUL (x: rax|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV (x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16], y: rsi|QWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = AND (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   84  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOV rbx|QWORD size: DWORD <|@ <|@
      nr  150  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33051|0xffffffffffff7ee5] // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-39963|0xffffffffffff63e5] // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - rdx|QWORD[.] rcx|QWORD[.] - - rdi|DWORD r8|QWORD - rbx|QWORD - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35355|0xffffffffffff75e5] // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26907|0xffffffffffff96e5] // MoveResolver resolve mapping <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B14" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rbx|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607033880752912401
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction rdi|QWORD = MOVSXD [rdx|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|QWORD = IMUL (x: r8|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|QWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr   58  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   66  <|@ instruction rdi|QWORD = AND (x: rdi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: rdi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr   72  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rbx|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = LEA [r9|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4633315710431582528
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = MOVSXD [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rax|QWORD = IMUL (x: rax|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV (x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16], y: rsi|QWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = SHR rax|QWORD y: 32 size: QWORD <|@ <|@
      nr  118  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = NOT rax|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = AND (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = SETCC condition: |>| <|@ <|@
      nr  130  <|@ instruction rax|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B10 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B10" 
    successors "B7" "B8" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4633451844380126467
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   84  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607036330299193522
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  146  <|@ instruction rax|DWORD = MOV rbx|QWORD size: DWORD <|@ <|@
      nr  150  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4580410438915784175
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33051|0xffffffffffff7ee5] // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0]
locals: - rdx|QWORD[.] rcx|QWORD[.] r8|DWORD r9|DWORD rdi|DWORD - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-39963|0xffffffffffff63e5] // MoveResolver resolve mapping <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV [r15|QWORD + 1016] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24]
locals: - rdx|QWORD[.] rcx|QWORD[.] - - rdi|DWORD r8|QWORD - rbx|QWORD - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35355|0xffffffffffff75e5] // MoveResolver resolve mapping <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-26907|0xffffffffffff96e5] // MoveResolver resolve mapping <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: i2l           
     2: ldc2_w        #15         // 4294967295
     5: land          
     6: lstore        6
     8: lconst_0      
     9: lstore        8
    11: iload         5
    13: iload         4
    15: iadd          
    16: istore        5
    18: iload         4
    20: iconst_1      
    21: isub          
    22: istore        10
    24: iload         10
    26: iflt          106
    29: aload_2       
    30: iload         10
    32: iaload        
    33: i2l           
    34: ldc2_w        #15         // 4294967295
    37: land          
    38: lload         6
    40: lmul          
    41: lload         8
    43: ladd          
    44: lstore        11
    46: aload_1       
    47: iload         5
    49: iaload        
    50: i2l           
    51: lload         11
    53: lsub          
    54: lstore        13
    56: aload_1       
    57: iload         5
    59: iinc          
    62: lload         13
    64: l2i           
    65: iastore       
    66: lload         11
    68: bipush        32
    70: lushr         
    71: lload         13
    73: ldc2_w        #15         // 4294967295
    76: land          
    77: lload         11
    79: l2i           
    80: iconst_m1     
    81: ixor          
    82: i2l           
    83: ldc2_w        #15         // 4294967295
    86: land          
    87: lcmp          
    88: ifle          95
    91: iconst_1      
    92: goto          96
    95: iconst_0      
    96: i2l           
    97: ladd          
    98: lstore        8
   100: iinc          
   103: goto          24
   106: lload         8
   108: l2i           
   109: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e20349bc00000000080000004d03d449bc0000000000000000493bc20f85d8ffffff906666660f1f840000000000660f1f440000660f1f44000089842400c0feff4883ec1848896c2410418bc1ffc885c00f8cdf000000448b510c443bd00f861f010000448b5a0c8bdf4103d9443bdb0f86c90000008b44811048637c9a10458bc08bc0490fafc0482bf8897c9a10488bf048c1ee208bc0f7d08bc0bdffffffff4823fd483bf80f97c00fb6c08bc04803f0ffcb418d41fe8bfb488bde448bc8e9540000000f1f440000453bd10f86a8000000443bdf0f8681000000428b448910486374ba108bc0490fafc04803c3482bf08974ba10488bd848c1eb208bc0f7d08bc04823f5483bf00f97c00fb6c08bc04803d8ffcf41ffc94585c97dac8bc3488b6c24104883c418498b8f080100008501c5f877c348c7c300000000ebdf41bae57effff458997ec03000049c787f803000000000000e8000000009041bae563ffff458997ec03000049c787f803000000000000e8000000009041bae575ffffebe041bae596ffffebbae80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 34 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7fed0c1badb8, value=0x7fece7888080]:0x7fece7888080}  <||@
  Comment 64 [stack overflow check]  <||@
  Comment 64 3  <||@
  Comment 64 1  <||@
  Comment 75 block B0 null  <||@
  Comment 75 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 80 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD  <||@
  Comment 80 16 rax|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 85 18 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 87 20 BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 93 block B2 null  <||@
  Comment 93 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 93 24 r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 93 [rcx:0, rdx:0]at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3         |4         |5          |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |rdi|DWORD  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 93 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 97 26 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 100 28 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15  <||@
  Comment 106 block B3 null  <||@
  Comment 106 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 106 32 r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 106 [rcx:0, rdx:0]at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3         |4         |5          |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |rdi|DWORD  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 106 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 110 34 rbx|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 115 36 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 118 38 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14  <||@
  Comment 124 block B4 null  <||@
  Comment 124 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 124 42 rax|DWORD = MOV [rcx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 128 44 rdi|QWORD = MOVSXD [rdx|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 133 46 r8|QWORD = MOV r8|DWORD size: DWORD  <||@
  Comment 136 48 rax|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 138 50 rax|QWORD = IMUL (x: r8|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 142 52 rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD  <||@
  Comment 145 54 MOV (x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|QWORD) size: DWORD  <||@
  Comment 149 56 rsi|QWORD = SHR rax|QWORD y: 32 size: QWORD  <||@
  Comment 156 58 rax|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 158 60 rax|DWORD = NOT rax|DWORD size: DWORD  <||@
  Comment 160 62 rax|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 162 64 rbp|QWORD = MOVE input: long[4294967295|0xffffffff]  <||@
  Comment 167 66 rdi|QWORD = AND (x: rdi|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 170 68 CMP (x: rdi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 173 70 rax|DWORD = SETCC condition: |>|  <||@
  Comment 179 72 rax|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 181 74 rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 184 76 rbx|DWORD = DEC rbx|DWORD size: DWORD  <||@
  Comment 186 78 rax|DWORD = LEA [r9|DWORD - 2] size: DWORD  <||@
  Comment 190 -1 rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 192 -1 rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 195 -1 r9|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 198 80 JUMP ~[] destination: B4 -> B5  <||@
  Comment 203 block B8 loop 0 depth 1 header:18|LoopBegin  <||@
  Comment 203 88 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 208 90 CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 211 92 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12  <||@
  Comment 217 block B9 loop 0 depth 1 header:18|LoopBegin  <||@
  Comment 217 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 217 96 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 220 98 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 226 block B10 loop 0 depth 1 header:18|LoopBegin  <||@
  Comment 226 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 226 102 rax|DWORD = MOV [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 231 104 rsi|QWORD = MOVSXD [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: QWORD  <||@
  Comment 236 106 rax|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 238 108 rax|QWORD = IMUL (x: rax|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 242 110 rax|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 245 112 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD  <||@
  Comment 248 114 MOV (x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16], y: rsi|QWORD) size: DWORD  <||@
  Comment 252 116 rbx|QWORD = SHR rax|QWORD y: 32 size: QWORD  <||@
  Comment 259 118 rax|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 261 120 rax|DWORD = NOT rax|DWORD size: DWORD  <||@
  Comment 263 122 rax|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 265 124 rsi|QWORD = AND (x: rsi|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 268 126 CMP (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 271 128 rax|DWORD = SETCC condition: |>|  <||@
  Comment 277 130 rax|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 279 132 rbx|QWORD = ADD (x: rbx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 282 134 rdi|DWORD = DEC rdi|DWORD size: DWORD  <||@
  Comment 284 136 r9|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 287 138 JUMP ~[] destination: B10 -> B5  <||@
  Comment 287 block B5 loop 0 depth 1 header:18|LoopBegin  <||@
  Comment 287 82 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 287 84 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 290 86 BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B8  <||@
  Comment 292 block B7 null  <||@
  Comment 292 144 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 292 146 rax|DWORD = MOV rbx|QWORD size: DWORD  <||@
  Comment 294 150 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d  <||@
  Comment 310 15  <||@
  Comment 316 block B1 null  <||@
  Comment 316 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 316 -1 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 323 154 JUMP ~[] destination: B1 -> B7  <||@
  Comment 325 block B14 null  <||@
  Comment 325 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 325 -1 r10|DWORD = MOVE input: int[-33051|0xffffffffffff7ee5]  <||@
  Comment 331 158 JUMP ~[] destination: B14 -> B16  <||@
  Comment 331 block B16 null  <||@
  Comment 331 180 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 331 182 MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD  <||@
  Comment 338 184 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 349 186 DEOPT info [bci:0]  <||@
  Comment 349 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fed0c1bada0, value=0x7fece7887084]:0x7fece7887084}  <||@
  Comment 354 [rcx:0, rdx:0]at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3         |4         |5          |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |rdi|DWORD  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 355 block B11 null  <||@
  Comment 355 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 355 -1 r10|DWORD = MOVE input: int[-39963|0xffffffffffff63e5]  <||@
  Comment 361 162 JUMP ~[] destination: B11 -> B13  <||@
  Comment 361 block B13 null  <||@
  Comment 361 168 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 361 170 MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD  <||@
  Comment 368 172 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 379 174 DEOPT info [bci:24]  <||@
  Comment 379 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fed0c1bada0, value=0x7fece7887084]:0x7fece7887084}  <||@
  Comment 384 [rcx:0, rdx:0]at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24, duringCall: false, rethrow: false]
              |0  |1             |2             |3  |4  |5          |6         |7  |8          |9  |10        |11  |12  |13  |14 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |rdi|DWORD  |r8|QWORD  |-  |rbx|QWORD  |-  |r9|DWORD  |-   |-   |-   |-    <||@
  Comment 385 block B12 null  <||@
  Comment 385 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 385 -1 r10|DWORD = MOVE input: int[-35355|0xffffffffffff75e5]  <||@
  Comment 391 166 JUMP ~[] destination: B12 -> B13  <||@
  Comment 393 block B15 null  <||@
  Comment 393 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 393 -1 r10|DWORD = MOVE input: int[-26907|0xffffffffffff96e5]  <||@
  Comment 399 178 JUMP ~[] destination: B15 -> B16  <||@
  Comment 401 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fece7976b80:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 401 4  <||@
  Comment 407 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fed0c1bada8, value=0x7fece7886e20]:0x7fece7886e20}  <||@
  Comment 407 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-15269[java.math.MutableBigInteger.mulsub(int[], int[], int, int, int)]"
  method "HotSpotCompilation-15269[java.math.MutableBigInteger.mulsub(int[], int[], int, int, int)]"
  date 1648808612868
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7fecf2a101a0 448b560849c1e20349bc00000000080000004d03d449bc0000000000000000493bc20f85b87ee7f4906666660f1f840000000000660f1f440000660f1f44000089842400c0feff4883ec1848896c2410418bc1ffc885c00f8cdf000000448b510c443bd00f861f010000448b5a0c8bdf4103d9443bdb0f86c90000008b44811048637c9a10458bc08bc0490fafc0482bf8897c9a10488bf048c1ee208bc0f7d08bc0bdffffffff4823fd483bf80f97c00fb6c08bc04803f0ffcb418d41fe8bfb488bde448bc8e9540000000f1f440000453bd10f86a8000000443bdf0f8681000000428b448910486374ba108bc0490fafc04803c3482bf08974ba10488bd848c1eb208bc0f7d08bc04823f5483bf00f97c00fb6c08bc04803d8ffcf41ffc94585c97dac8bc3488b6c24104883c418498b8f080100008501c5f877c348c7c300000000ebdf41bae57effff458997ec03000049c787f803000000000000e8826de7f49041bae563ffff458997ec03000049c787f803000000000000e8646de7f49041bae575ffffebe041bae596ffffebbae84a68f6f490e8e46ae7f490f4f4f4  <||@
  Comment 0 2  <||@
  Comment 34 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7fed0c1badb8, value=0x7fece7888080]:0x7fece7888080}  <||@
  Comment 64 [stack overflow check]  <||@
  Comment 64 3  <||@
  Comment 64 1  <||@
  Comment 75 block B0 null  <||@
  Comment 75 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 80 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2eba08f0 slotKind: QWORD  <||@
  Comment 80 16 rax|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 85 18 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 87 20 BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 93 block B2 null  <||@
  Comment 93 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 93 24 r10|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 93 [rcx:0, rdx:0]at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3         |4         |5          |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |rdi|DWORD  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 93 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 97 26 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 100 28 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B15  <||@
  Comment 106 block B3 null  <||@
  Comment 106 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 106 32 r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 106 [rcx:0, rdx:0]at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3         |4         |5          |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |rdi|DWORD  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 106 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 110 34 rbx|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 115 36 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 118 38 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B14  <||@
  Comment 124 block B4 null  <||@
  Comment 124 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 124 42 rax|DWORD = MOV [rcx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 128 44 rdi|QWORD = MOVSXD [rdx|QWORD[.] + rbx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 133 46 r8|QWORD = MOV r8|DWORD size: DWORD  <||@
  Comment 136 48 rax|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 138 50 rax|QWORD = IMUL (x: r8|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 142 52 rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD  <||@
  Comment 145 54 MOV (x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|QWORD) size: DWORD  <||@
  Comment 149 56 rsi|QWORD = SHR rax|QWORD y: 32 size: QWORD  <||@
  Comment 156 58 rax|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 158 60 rax|DWORD = NOT rax|DWORD size: DWORD  <||@
  Comment 160 62 rax|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 162 64 rbp|QWORD = MOVE input: long[4294967295|0xffffffff]  <||@
  Comment 167 66 rdi|QWORD = AND (x: rdi|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 170 68 CMP (x: rdi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 173 70 rax|DWORD = SETCC condition: |>|  <||@
  Comment 179 72 rax|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 181 74 rsi|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 184 76 rbx|DWORD = DEC rbx|DWORD size: DWORD  <||@
  Comment 186 78 rax|DWORD = LEA [r9|DWORD - 2] size: DWORD  <||@
  Comment 190 -1 rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 192 -1 rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 195 -1 r9|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 198 80 JUMP ~[] destination: B4 -> B5  <||@
  Comment 203 block B8 loop 0 depth 1 header:18|LoopBegin  <||@
  Comment 203 88 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 208 90 CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 211 92 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12  <||@
  Comment 217 block B9 loop 0 depth 1 header:18|LoopBegin  <||@
  Comment 217 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 217 96 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 220 98 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 226 block B10 loop 0 depth 1 header:18|LoopBegin  <||@
  Comment 226 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 226 102 rax|DWORD = MOV [rcx|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 231 104 rsi|QWORD = MOVSXD [rdx|QWORD[.] + rdi|DWORD * 4 + 16] size: QWORD  <||@
  Comment 236 106 rax|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 238 108 rax|QWORD = IMUL (x: rax|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 242 110 rax|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 245 112 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD  <||@
  Comment 248 114 MOV (x: [rdx|QWORD[.] + rdi|DWORD * 4 + 16], y: rsi|QWORD) size: DWORD  <||@
  Comment 252 116 rbx|QWORD = SHR rax|QWORD y: 32 size: QWORD  <||@
  Comment 259 118 rax|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 261 120 rax|DWORD = NOT rax|DWORD size: DWORD  <||@
  Comment 263 122 rax|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 265 124 rsi|QWORD = AND (x: rsi|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 268 126 CMP (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 271 128 rax|DWORD = SETCC condition: |>|  <||@
  Comment 277 130 rax|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 279 132 rbx|QWORD = ADD (x: rbx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 282 134 rdi|DWORD = DEC rdi|DWORD size: DWORD  <||@
  Comment 284 136 r9|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 287 138 JUMP ~[] destination: B10 -> B5  <||@
  Comment 287 block B5 loop 0 depth 1 header:18|LoopBegin  <||@
  Comment 287 82 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 287 84 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 290 86 BRANCH trueDestinationProbability: 0.016491035992883537 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B8  <||@
  Comment 292 block B7 null  <||@
  Comment 292 144 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 292 146 rax|DWORD = MOV rbx|QWORD size: DWORD  <||@
  Comment 294 150 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@27bed54d  <||@
  Comment 310 15  <||@
  Comment 316 block B1 null  <||@
  Comment 316 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 316 -1 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 323 154 JUMP ~[] destination: B1 -> B7  <||@
  Comment 325 block B14 null  <||@
  Comment 325 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 325 -1 r10|DWORD = MOVE input: int[-33051|0xffffffffffff7ee5]  <||@
  Comment 331 158 JUMP ~[] destination: B14 -> B16  <||@
  Comment 331 block B16 null  <||@
  Comment 331 180 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 331 182 MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD  <||@
  Comment 338 184 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 349 186 DEOPT info [bci:0]  <||@
  Comment 349 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fed0c1bada0, value=0x7fece7887084]:0x7fece7887084}  <||@
  Comment 354 [rcx:0, rdx:0]at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:638) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2             |3         |4         |5          |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |rdi|DWORD  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 355 block B11 null  <||@
  Comment 355 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 355 -1 r10|DWORD = MOVE input: int[-39963|0xffffffffffff63e5]  <||@
  Comment 361 162 JUMP ~[] destination: B11 -> B13  <||@
  Comment 361 block B13 null  <||@
  Comment 361 168 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 361 170 MOV (x: [r15|QWORD + 1004], y: r10|DWORD) size: DWORD  <||@
  Comment 368 172 MOV [r15|QWORD + 1016] y: 0 size: QWORD  <||@
  Comment 379 174 DEOPT info [bci:24]  <||@
  Comment 379 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fed0c1bada0, value=0x7fece7887084]:0x7fece7887084}  <||@
  Comment 384 [rcx:0, rdx:0]at java.base@11.0.14.1/java.math.MutableBigInteger.mulsub(MutableBigInteger.java:642) [bci: 24, duringCall: false, rethrow: false]
              |0  |1             |2             |3  |4  |5          |6         |7  |8          |9  |10        |11  |12  |13  |14 
     locals:  |-  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |rdi|DWORD  |r8|QWORD  |-  |rbx|QWORD  |-  |r9|DWORD  |-   |-   |-   |-    <||@
  Comment 385 block B12 null  <||@
  Comment 385 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 385 -1 r10|DWORD = MOVE input: int[-35355|0xffffffffffff75e5]  <||@
  Comment 391 166 JUMP ~[] destination: B12 -> B13  <||@
  Comment 393 block B15 null  <||@
  Comment 393 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 393 -1 r10|DWORD = MOVE input: int[-26907|0xffffffffffff96e5]  <||@
  Comment 399 178 JUMP ~[] destination: B15 -> B16  <||@
  Comment 401 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fece7976b80:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 401 4  <||@
  Comment 407 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fed0c1bada8, value=0x7fece7886e20]:0x7fece7886e20}  <||@
  Comment 407 5  <||@
  HexCodeFile>>> <|@
end_nmethod
