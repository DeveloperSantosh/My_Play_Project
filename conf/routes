# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~
# An example controller showing a sample home page

# The controllers for User
+nocsrf
POST    /login                              controllers.UserController.login(request: Request)
+nocsrf
POST    /register                           controllers.UserController.register(request: Request)
GET     /users                              controllers.UserController.getAllUsers()
+nocsrf
PUT     /:userId                            controllers.UserController.updateUser(request: Request, userId: Integer)
+nocsrf
DELETE  /:userId                            controllers.UserController.deleteUser(userId: Integer)
GET     /logout                             controllers.UserController.logout(request: Request)

# The controllers for user permissions and roles
+nocsrf
POST    /:userId/role                       controllers.UserController.addRole(userId: Integer, request: Request)
+nocsrf
DELETE  /:userId/role                       controllers.UserController.dismissRole(userId: Integer, request: Request)
+nocsrf
POST    /:userId/permission                 controllers.UserController.addPermission(userId: Integer, request: Request)
+nocsrf
DELETE  /:userId/permission                 controllers.UserController.revokePermission(userId: Integer, request: Request)

# The controllers for Blogs
GET     /blogs                              controllers.BlogController.showAllBlogs()
+nocsrf
POST    /blogs                              controllers.BlogController.saveBlog(request: Request)
+nocsrf
PUT     /blogs/:title                       controllers.BlogController.updateBlog(request: Request, title: String)
+nocsrf
DELETE  /blogs/:title                       controllers.BlogController.deleteBlogByTitle(title: String, request: Request)
GET     /blogs/myBlogs                      controllers.BlogController.showMyBlogs(request: Request)
GET     /blogs/:keyword                     controllers.BlogController.searchBlogByKeyword(keyword: String)

# The controllers for Comments
GET     /blogs/:title/comments              controllers.CommentController.getComments(title: String)
+nocsrf
POST    /blogs/:title/comments              controllers.CommentController.saveComment(title: String, request: Request)

# The controllers for File
GET     /file/pdf                           controllers.FileController.getBlogPdfFile()
GET     /file/excel                         controllers.FileController.getUserExcelFile()
GET     /file/csv                           controllers.FileController.getUserCsvFile()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)

